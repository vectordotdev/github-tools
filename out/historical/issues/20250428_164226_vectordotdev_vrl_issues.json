[
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1388",
        "id": 3022996805,
        "node_id": "PR_kwDOJN63t86UES0O",
        "number": 1388,
        "title": "Parse timestamp fixes",
        "user": {
            "login": "JakubOnderka",
            "id": 163343,
            "node_id": "MDQ6VXNlcjE2MzM0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/163343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JakubOnderka",
            "html_url": "https://github.com/JakubOnderka",
            "followers_url": "https://api.github.com/users/JakubOnderka/followers",
            "following_url": "https://api.github.com/users/JakubOnderka/following{/other_user}",
            "gists_url": "https://api.github.com/users/JakubOnderka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JakubOnderka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JakubOnderka/subscriptions",
            "organizations_url": "https://api.github.com/users/JakubOnderka/orgs",
            "repos_url": "https://api.github.com/users/JakubOnderka/repos",
            "events_url": "https://api.github.com/users/JakubOnderka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JakubOnderka/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-27T10:43:04Z",
        "updated_at": "2025-04-28T11:14:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1388",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1388",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1388.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1388.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nMore specific error message when trying invalid value to timestamp.\r\n\r\n* Before: `unable to convert value to timestamp`\r\n* After:  `unable to convert null value to timestamp`\r\n\r\nIt also removes one unnecessary string allocation, so parsing should be little bit faster.\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [x] Non-functional (chore, refactoring, docs)\r\n- [x] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## How did you test this PR?\r\n\r\nStandard tests.\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [ ] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [x] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [x] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [x] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1388/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1386",
        "id": 3014408757,
        "node_id": "I_kwDOJN63t86zrDo1",
        "number": 1386,
        "title": "Add bitwise operators for integers",
        "user": {
            "login": "vruello",
            "id": 5345986,
            "node_id": "MDQ6VXNlcjUzNDU5ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5345986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vruello",
            "html_url": "https://github.com/vruello",
            "followers_url": "https://api.github.com/users/vruello/followers",
            "following_url": "https://api.github.com/users/vruello/following{/other_user}",
            "gists_url": "https://api.github.com/users/vruello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vruello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vruello/subscriptions",
            "organizations_url": "https://api.github.com/users/vruello/orgs",
            "repos_url": "https://api.github.com/users/vruello/repos",
            "events_url": "https://api.github.com/users/vruello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vruello/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-23T15:28:02Z",
        "updated_at": "2025-04-23T15:28:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\n\n### Use Cases\n\nLogs often contain flags, which are integers where each bit has a special meaning. When processing a flag, it is useful to be able to know whether the n-th bit is set or not. The standard way to do this is to use a bitwise and operator.\n\n### Attempted Solutions\n\nI couldn't find any bitwise operators in the vrl language.\n\n### Proposal\n\nI suggest adding bitwise `and`, `or` and `not` operators for integers in the vrl language.\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1383",
        "id": 2997533716,
        "node_id": "I_kwDOJN63t86yqrwU",
        "number": 1383,
        "title": "`find` should return `null` when the pattern wasn't found",
        "user": {
            "login": "simplepad",
            "id": 35456194,
            "node_id": "MDQ6VXNlcjM1NDU2MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35456194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simplepad",
            "html_url": "https://github.com/simplepad",
            "followers_url": "https://api.github.com/users/simplepad/followers",
            "following_url": "https://api.github.com/users/simplepad/following{/other_user}",
            "gists_url": "https://api.github.com/users/simplepad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simplepad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simplepad/subscriptions",
            "organizations_url": "https://api.github.com/users/simplepad/orgs",
            "repos_url": "https://api.github.com/users/simplepad/repos",
            "events_url": "https://api.github.com/users/simplepad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simplepad/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-15T20:27:09Z",
        "updated_at": "2025-04-15T20:58:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": {
            "id": 2240170,
            "node_id": "IT_kwDOAQFeYs4AIi6q",
            "name": "Bug",
            "description": "An unexpected problem or behavior",
            "color": "red",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\n\n### Problem\n\nDiscussed in https://github.com/vectordotdev/vrl/discussions/1311\n\nRight now it returns `-1`, which from what I can see is somewhat of a special case, because in other functions if something could not be found, `null` is returned. Returning `-1` might introduce hidden bugs if the return value is not analyzed, for example:\n\n```\ninput = \"foobar\"\nindex = find!(input, \"123\")\noutput = slice!(input, index)\nassert_eq!(output, \"r\")\n```\nThis code will compile without issues, and the value stored in `output` will be `\"r\"`. Maybe it would be better to return `null` (which will fail the `slice!()` function) or make the `find!()` function fail if the pattern wasn't found, requiring the developer to handle that case explicitly.\n\n### VRL Program\n\n```text\ninput = \"foobar\"\nindex = find!(input, \"123\")\noutput = slice!(input, index)\nassert_eq!(output, \"r\")\n```\n\n### VRL and/or Vector Version\n\nVRL Version: \t0.22.0\n\n### Debug Output\n\n```text\n\n```\n\n### Example\n\n[Playground Link](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiaW5wdXQgPSBcImZvb2JhclwiXG5pbmRleCA9IGZpbmQhKGlucHV0LCBcIjEyM1wiKVxub3V0cHV0ID0gc2xpY2UhKGlucHV0LCBpbmRleClcbmFzc2VydF9lcSEob3V0cHV0LCBcInJcIikiLCJldmVudCI6eyJtZXNzYWdlIjoiSGVsbG8gVlJMIiwiZm9vIjoiZGVsZXRlIG1lIiwiaHR0cF9zdGF0dXMiOiIyMDAifSwiaXNfanNvbmwiOmZhbHNlLCJlcnJvciI6bnVsbH0%3D)\n\n### Additional Context\n\n_No response_\n\n### References\n\nDiscussed in https://github.com/vectordotdev/vrl/discussions/1311",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1382",
        "id": 2997505783,
        "node_id": "I_kwDOJN63t86yqk73",
        "number": 1382,
        "title": "Add a dynamic variant of the `exists` function",
        "user": {
            "login": "simplepad",
            "id": 35456194,
            "node_id": "MDQ6VXNlcjM1NDU2MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35456194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simplepad",
            "html_url": "https://github.com/simplepad",
            "followers_url": "https://api.github.com/users/simplepad/followers",
            "following_url": "https://api.github.com/users/simplepad/following{/other_user}",
            "gists_url": "https://api.github.com/users/simplepad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simplepad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simplepad/subscriptions",
            "organizations_url": "https://api.github.com/users/simplepad/orgs",
            "repos_url": "https://api.github.com/users/simplepad/repos",
            "events_url": "https://api.github.com/users/simplepad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simplepad/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-15T20:14:41Z",
        "updated_at": "2025-04-15T20:58:21Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\n\n### Use Cases\n\nChecking if a certain path exists using dynamic values.\n\n### Attempted Solutions\n\nGiven an event like this:\n```json\n{\n    \"pointer\": \"bar\",\n    \"foo\": {\n        \"bar\": 123\n    }\n}\n```\nTo check if the path `foo.<pointer>` exists, you could use:\n```\n.test = !is_null(get!(., [\"foo\", .pointer]))\n```\nBut that is cumbersome, involves two function calls and won't work if the value stored in `bar` is null.\nPlayground link with examples of both null and non-null values: [link](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiLnRlc3RfbnVtID0gIWlzX251bGwoZ2V0ISguLCBbXCJmb29cIiwgLnBvaW50ZXJfbnVtXSkpXG4udGVzdF9udWxsID0gIWlzX251bGwoZ2V0ISguLCBbXCJmb29cIiwgLnBvaW50ZXJfbnVsbF0pKSIsImV2ZW50Ijp7InBvaW50ZXJfbnVtIjoiYmFyIiwicG9pbnRlcl9udWxsIjoiYmF6IiwiZm9vIjp7ImJhciI6MTIzLCJiYXoiOm51bGx9fSwiaXNfanNvbmwiOmZhbHNlLCJlcnJvciI6bnVsbH0%3D)\n\n### Proposal\n\nAdd a dynamic variant of the `exists` function, just like `remove` is to `del`.  Unfortunately I don't have a good name for it, could be something like `is_valid` or `is_defined`. The arguments should probably be identical to `remove`, but without `compact`.\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1382/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1379",
        "id": 2991459021,
        "node_id": "PR_kwDOJN63t86SZzpQ",
        "number": 1379,
        "title": "chore(performance): Use simd for base64 encoding/decoding",
        "user": {
            "login": "JakubOnderka",
            "id": 163343,
            "node_id": "MDQ6VXNlcjE2MzM0Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/163343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JakubOnderka",
            "html_url": "https://github.com/JakubOnderka",
            "followers_url": "https://api.github.com/users/JakubOnderka/followers",
            "following_url": "https://api.github.com/users/JakubOnderka/following{/other_user}",
            "gists_url": "https://api.github.com/users/JakubOnderka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JakubOnderka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JakubOnderka/subscriptions",
            "organizations_url": "https://api.github.com/users/JakubOnderka/orgs",
            "repos_url": "https://api.github.com/users/JakubOnderka/repos",
            "events_url": "https://api.github.com/users/JakubOnderka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JakubOnderka/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pront",
                "id": 1138161,
                "node_id": "MDQ6VXNlcjExMzgxNjE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pront",
                "html_url": "https://github.com/pront",
                "followers_url": "https://api.github.com/users/pront/followers",
                "following_url": "https://api.github.com/users/pront/following{/other_user}",
                "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
                "organizations_url": "https://api.github.com/users/pront/orgs",
                "repos_url": "https://api.github.com/users/pront/repos",
                "events_url": "https://api.github.com/users/pront/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pront/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-04-13T20:14:29Z",
        "updated_at": "2025-04-15T18:55:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1379",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1379",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1379.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1379.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nUse SIMD instructions when doing base64 encoding/decoding. base64 encoding/decoding is common when processing logs, so it would be nice to use SIMD powered algo. `base64-simd` crate is already used by vector.\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [x] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## How did you test this PR?\r\n\r\nStandard tests.\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [ ] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [x] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [x] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [x] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1379/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1371",
        "id": 2975314540,
        "node_id": "I_kwDOJN63t86xV7Js",
        "number": 1371,
        "title": "xpath support",
        "user": {
            "login": "juju4",
            "id": 1300844,
            "node_id": "MDQ6VXNlcjEzMDA4NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1300844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juju4",
            "html_url": "https://github.com/juju4",
            "followers_url": "https://api.github.com/users/juju4/followers",
            "following_url": "https://api.github.com/users/juju4/following{/other_user}",
            "gists_url": "https://api.github.com/users/juju4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juju4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juju4/subscriptions",
            "organizations_url": "https://api.github.com/users/juju4/orgs",
            "repos_url": "https://api.github.com/users/juju4/repos",
            "events_url": "https://api.github.com/users/juju4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juju4/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-06T23:48:53Z",
        "updated_at": "2025-04-06T23:48:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\nIt would be useful to extract from xml data with xpath. parse_xml has some limitations and not working well with array and attributes as discussed in https://github.com/vectordotdev/vrl/discussions/1287\n\n### Use Cases\n\nBe able to extract data like `.Event.EventData.Data[@Name=='RuleName'].text`\n\n### Attempted Solutions\n\nparse_xml, parse_regex, parse_keyvalue\n\n### Proposal\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1371/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1367",
        "id": 2965468331,
        "node_id": "PR_kwDOJN63t86RCnLR",
        "number": 1367,
        "title": "enhancement(lz4_decode) add lz4_decode compression type detection",
        "user": {
            "login": "jimmystewpot",
            "id": 5865992,
            "node_id": "MDQ6VXNlcjU4NjU5OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5865992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimmystewpot",
            "html_url": "https://github.com/jimmystewpot",
            "followers_url": "https://api.github.com/users/jimmystewpot/followers",
            "following_url": "https://api.github.com/users/jimmystewpot/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimmystewpot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimmystewpot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimmystewpot/subscriptions",
            "organizations_url": "https://api.github.com/users/jimmystewpot/orgs",
            "repos_url": "https://api.github.com/users/jimmystewpot/repos",
            "events_url": "https://api.github.com/users/jimmystewpot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimmystewpot/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-04-02T07:43:06Z",
        "updated_at": "2025-04-02T14:14:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1367",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1367",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1367.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1367.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nIn a previous PR #1339, LZ4 block compression was added. That change focused on adding LZ4 block compression and decompression support. With Lz4, there are two types of compression: [frame](https://github.com/lz4/lz4/blob/dev/doc/lz4_Frame_format.md) and [block](https://github.com/lz4/lz4/blob/dev/doc/lz4_Block_format.md). This change supports detecting if the value being decoded is compressed using LZ4 frame compression and attempts to handle it gracefully.\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [ ] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## How did you test this PR?\r\n\r\nI have run through the various scripts in `scripts` and added an additional test to decompress an LZ4 frame payload.\r\n\r\n## Does this PR include user-facing changes?\r\n\r\n- [x] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [x] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [ ] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1367/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1361",
        "id": 2955683971,
        "node_id": "I_kwDOJN63t86wLCiD",
        "number": 1361,
        "title": "`format_int` bad output type",
        "user": {
            "login": "JTKU",
            "id": 36003517,
            "node_id": "MDQ6VXNlcjM2MDAzNTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/36003517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JTKU",
            "html_url": "https://github.com/JTKU",
            "followers_url": "https://api.github.com/users/JTKU/followers",
            "following_url": "https://api.github.com/users/JTKU/following{/other_user}",
            "gists_url": "https://api.github.com/users/JTKU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JTKU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JTKU/subscriptions",
            "organizations_url": "https://api.github.com/users/JTKU/orgs",
            "repos_url": "https://api.github.com/users/JTKU/repos",
            "events_url": "https://api.github.com/users/JTKU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JTKU/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-03-28T10:22:31Z",
        "updated_at": "2025-03-28T14:29:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240170,
            "node_id": "IT_kwDOAQFeYs4AIi6q",
            "name": "Bug",
            "description": "An unexpected problem or behavior",
            "color": "red",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\n\n### Problem\n\nThe output type of `format_int` seems to be `integer` instead of `string`.\n\nProbably caused by its `TypeDef` being `integer` instead of `bytes`:  [https://github.com/vectordotdev/vrl/blob/07cd43a353829851c899f4fed4edb41a002bb8d1/src/stdlib/format_int.rs#L103](https://github.com/vectordotdev/vrl/blob/07cd43a353829851c899f4fed4edb41a002bb8d1/src/stdlib/format_int.rs#L103)\n\nSince the tests also use the same `TypeDef::integer()` type : [https://github.com/vectordotdev/vrl/blob/07cd43a353829851c899f4fed4edb41a002bb8d1/src/stdlib/format_int.rs#L147](https://github.com/vectordotdev/vrl/blob/07cd43a353829851c899f4fed4edb41a002bb8d1/src/stdlib/format_int.rs#L147), they actually pass, even though declared types are different from that of the actual values.\n\nThis is also in contradiction with vector's documentation:  [https://github.com/vectordotdev/vector/blob/2a85007ce5c0ea05cdb408f4d6c898049c33f055/website/cue/reference/remap/functions/format_int.cue#L27](https://github.com/vectordotdev/vector/blob/2a85007ce5c0ea05cdb408f4d6c898049c33f055/website/cue/reference/remap/functions/format_int.cue#L27).\n\n### VRL Program\n\n```text\nb, err_b = format_int(.b.value, 2)\nc, err_c = to_string(.c.value)\n\n# both are considered strings\n.b.is_string = is_string(b)\n.c.is_string = is_string(c)\n\n# not ints\n.b.is_int = is_integer(b)\n.c.is_int = is_integer(c)\n\n# cannot fail so no error catching needed\nif is_null(err_c) {\n   .c.string = string(c)\n}\n\n# can fail, although its return type is the same as `to_string`\nif is_null(err_b) {\n   .b.string = string(b)\n}\n```\n\n### VRL and/or Vector Version\n\nvrl 0.22  (vector 0.45.0)\n\n### Debug Output\n\n```text\nerror[E103]: unhandled fallible assignment\n   \u250c\u2500 :19:16\n   \u2502\n19 \u2502    .b.string = string(b)\n   \u2502    ----------- ^^^^^^^^^ this expression is fallible because at least one argument's type cannot be verified to be valid\n   \u2502    \u2502\n   \u2502    or change this to an infallible assignment:\n   \u2502    .b.string, err = string(b)\n   \u2502\n   = see documentation about error handling at https://errors.vrl.dev/#handling\n   = see functions characteristics documentation at https://vrl.dev/expressions/#function-call-characteristics\n   = learn more about error code 103 at https://errors.vrl.dev/103\n   = see language documentation at https://vrl.dev\n   = try your code in the VRL REPL, learn more at https://vrl.dev/examples\n```\n\n### Example\n\nhttps://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiYiwgZXJyX2IgPSBmb3JtYXRfaW50KC5iLnZhbHVlLCAyKVxuYywgZXJyX2MgPSB0b19zdHJpbmcoLmMudmFsdWUpXG5cbiMgYm90aCBhcmUgY29uc2lkZXJlZCBzdHJpbmdzXG4uYi5pc19zdHJpbmcgPSBpc19zdHJpbmcoYilcbi5jLmlzX3N0cmluZyA9IGlzX3N0cmluZyhjKVxuXG4jIG5vdCBpbnRzXG4uYi5pc19pbnQgPSBpc19pbnRlZ2VyKGIpXG4uYy5pc19pbnQgPSBpc19pbnRlZ2VyKGMpXG5cbiMgY2Fubm90IGZhaWwgc28gbm8gZXJyb3IgY2F0Y2hpbmcgbmVlZGVkXG5pZiBpc19udWxsKGVycl9jKSB7XG4gICAuYy5zdHJpbmcgPSBzdHJpbmcoYylcbn1cblxuIyBjYW4gZmFpbCwgYWx0aG91Z2ggaXRzIHJldHVybiB0eXBlIGlzIHRoZSBzYW1lIGFzIGB0b19zdHJpbmdgXG5pZiBpc19udWxsKGVycl9iKSB7XG4gICAuYi5zdHJpbmcsIC5iLmVyciA9IHN0cmluZyhiKVxufVxuXG4iLCJldmVudCI6eyJiIjp7InZhbHVlIjo1fSwiYyI6eyJ2YWx1ZSI6NX19LCJpc19qc29ubCI6ZmFsc2UsImVycm9yIjpudWxsfQ%3D%3D\n\n### Additional Context\n\n_No response_\n\n### References\n\nPossible solution: [https://github.com/JTKU/vrl/tree/fix_format_int_output_type](https://github.com/JTKU/vrl/tree/fix_format_int_output_type)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1361/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1360",
        "id": 2953500338,
        "node_id": "PR_kwDOJN63t86Qa3JD",
        "number": 1360,
        "title": "feat(stdlib): add `http_request` function",
        "user": {
            "login": "benjamin-awd",
            "id": 62495124,
            "node_id": "MDQ6VXNlcjYyNDk1MTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62495124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjamin-awd",
            "html_url": "https://github.com/benjamin-awd",
            "followers_url": "https://api.github.com/users/benjamin-awd/followers",
            "following_url": "https://api.github.com/users/benjamin-awd/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjamin-awd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjamin-awd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjamin-awd/subscriptions",
            "organizations_url": "https://api.github.com/users/benjamin-awd/orgs",
            "repos_url": "https://api.github.com/users/benjamin-awd/repos",
            "events_url": "https://api.github.com/users/benjamin-awd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjamin-awd/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pront",
                "id": 1138161,
                "node_id": "MDQ6VXNlcjExMzgxNjE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pront",
                "html_url": "https://github.com/pront",
                "followers_url": "https://api.github.com/users/pront/followers",
                "following_url": "https://api.github.com/users/pront/following{/other_user}",
                "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
                "organizations_url": "https://api.github.com/users/pront/orgs",
                "repos_url": "https://api.github.com/users/pront/repos",
                "events_url": "https://api.github.com/users/pront/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pront/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-03-27T15:41:59Z",
        "updated_at": "2025-03-28T20:26:57Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1360",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1360",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1360.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1360.patch",
            "merged_at": null
        },
        "body": "<!--\r\n  Your PR title must conform to the conventional commit spec:\r\n  https://www.conventionalcommits.org/en/v1.0.0/\r\n\r\n  <type>(<scope>)!: <description>\r\n\r\n  * `type` = chore, enhancement, feat, fix, docs, revert\r\n  * `!` = OPTIONAL: signals a breaking change\r\n  * `scope` = Optional when `type` is \"chore\" or \"docs\"\r\n  * `description` = short description of the change\r\n\r\nExamples:\r\n\r\n  * enhancement(file source): Add `sort` option to sort discovered files\r\n  * feat(new source): Initial `statsd` source\r\n  * fix(file source): Fix a bug discovering new files\r\n  * chore(external docs): Clarify `batch_size` option\r\n-->\r\n\r\n## Summary\r\n\r\nThis PR adds a HTTP request function, allowing users to fetch data from external sources.\r\n\r\n<!-- Please provide a brief summary about what this PR does.\r\nThis should help the reviewers give feedback faster and with higher quality. -->\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [ ] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## How did you test this PR?\r\n\r\n<!-- Please describe your testing plan here.\r\nProviding this information upfront will facilitate a smoother review process. -->\r\nAdded tests, otherwise currently running this in a Kubernetes environment via Helm.\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [ ] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [x] No. A maintainer will apply the \"no-changelog\" label to this PR. (not sure if we want to document this or not, if we follow the example of `dns_lookup`)\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [x] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [ ] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n\r\n<!-- Examples for the above:\r\n  PR adding new VRL function: https://github.com/vectordotdev/vrl/pull/993\r\n  PR adding documentation: https://github.com/vectordotdev/vector/pull/21142\r\n  \r\n  We are working towards improving this workflow.\r\n-->\r\n\r\n## References\r\n\r\n<!-- Please list any issues closed by this PR. -->\r\nCloses #1359\r\n<!--\r\n- Closes: <issue link>\r\n-->\r\n\r\n<!-- Any other issues or PRs relevant to this PR? Feel free to list them here. -->\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1360/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1359",
        "id": 2946416847,
        "node_id": "I_kwDOJN63t86vnsDP",
        "number": 1359,
        "title": "Add `http_get` function to VRL",
        "user": {
            "login": "benjamin-awd",
            "id": 62495124,
            "node_id": "MDQ6VXNlcjYyNDk1MTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/62495124?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjamin-awd",
            "html_url": "https://github.com/benjamin-awd",
            "followers_url": "https://api.github.com/users/benjamin-awd/followers",
            "following_url": "https://api.github.com/users/benjamin-awd/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjamin-awd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjamin-awd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjamin-awd/subscriptions",
            "organizations_url": "https://api.github.com/users/benjamin-awd/orgs",
            "repos_url": "https://api.github.com/users/benjamin-awd/repos",
            "events_url": "https://api.github.com/users/benjamin-awd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjamin-awd/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-03-25T12:45:41Z",
        "updated_at": "2025-03-27T15:45:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\nCurrently there is no built-in way to fetch external data dynamically (other than enrichment tables, which are static files). This affects use cases where logs or other kinds of data need to be enriched with real-time information from external services.\n\nI think it would be nice to have a function that enables a dynamic lookup for data that changes frequently.\n\n### Use Cases\n\n**1. Checking threat intelligence feeds**\nFor example, logs contain `source_ip`, and we want to check if it's flagged as malicious using a threat intelligence API:\n```yaml\ntransforms:\n  check_threat:\n    type: \"remap\"\n    inputs: [\"parse_logs\"]\n    source: |\n      threat_data = http_get!(\"https://threat-api.com/check?ip=\" + .source_ip)\n      .threat_level = parse_json!(threat_data).risk_score\n```\n\n**2. Checking cloud metadata for infrastructure logs**\nLogs from cloud instances include instance_id, but we want want to fetch real-time metadata from a cloud provider which can be quite dynamic (auto-scaling changes, region changes etc).\n```yaml\ntransforms:\n  fetch_instance_metadata:\n    type: \"remap\"\n    inputs: [\"parse_logs\"]\n    source: |\n      metadata = http_get!(\"http://metadata.google.internal/computeMetadata/v1/instance?alt=json\")\n      .metadata = parse_json!(metadata)\n```\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\nI managed to hack a rough solution together, which is currently running in my dev environment:\n```rust\nstatic CLIENT: LazyLock<Client> = LazyLock::new(reqwest::Client::new);\n\nasync fn http_get(url: &Value, auth: Option<&Value>) -> Resolved {\n    let url_str = url.try_bytes_utf8_lossy()?;\n\n    let request = CLIENT.get(url_str.as_ref());\n\n    let response = request\n        .send()\n        .await\n        .map_err(|e| format!(\"HTTP request failed: {e}\"))?;\n\n    let body = response\n        .text()\n        .await\n        .map_err(|e| format!(\"Failed to read response body: {e}\"))?;\n\n    Ok(body.into())\n}\n\n...\n\n#[derive(Debug, Clone)]\nstruct HttpGetFn {\n    url: Box<dyn Expression>\n}\n\nimpl FunctionExpression for HttpGetFn {\n    fn resolve(&self, ctx: &mut Context) -> Resolved {\n        let url = self.url.resolve(ctx)?;\n\n        // block_in_place runs the HTTP request synchronously\n        // without blocking Tokio's async worker threads.\n        // This temporarily moves execution to a blocking-compatible thread.\n        tokio::task::block_in_place(|| {\n            let handle = tokio::runtime::Handle::current();\n\n            handle.block_on(async {\n                http_get(&url).await\n            })\n        })\n    }\n\n    fn type_def(&self, _: &TypeState) -> TypeDef {\n        TypeDef::bytes().fallible()\n    }\n}\n```\n\nThis suffers from the same drawbacks as the current `dns_lookup` function where a lot of HTTP requests could lead to performance degradations in high volume pipelines. This could be mitigated with some kind of caching mechanism, but either way I think this is a useful function to have (especially for our situation where we are using the HTTP client i.e. a very low volume source).\n\n### References\n\nhttps://github.com/vectordotdev/vector/pull/20495",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1359/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1352",
        "id": 2939917713,
        "node_id": "I_kwDOJN63t86vO5WR",
        "number": 1352,
        "title": "parse_cef fails on logs with complex quoted values",
        "user": {
            "login": "unitednf24",
            "id": 161785492,
            "node_id": "U_kgDOCaSmlA",
            "avatar_url": "https://avatars.githubusercontent.com/u/161785492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unitednf24",
            "html_url": "https://github.com/unitednf24",
            "followers_url": "https://api.github.com/users/unitednf24/followers",
            "following_url": "https://api.github.com/users/unitednf24/following{/other_user}",
            "gists_url": "https://api.github.com/users/unitednf24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unitednf24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unitednf24/subscriptions",
            "organizations_url": "https://api.github.com/users/unitednf24/orgs",
            "repos_url": "https://api.github.com/users/unitednf24/repos",
            "events_url": "https://api.github.com/users/unitednf24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unitednf24/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-03-22T02:18:37Z",
        "updated_at": "2025-03-24T16:53:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240170,
            "node_id": "IT_kwDOAQFeYs4AIi6q",
            "name": "Bug",
            "description": "An unexpected problem or behavior",
            "color": "red",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\n\n### Problem\n\nSome CEF logs (specifically from PaloAlto) contain complex key-value pairs in the extension section that cause parsing failures. The problem occurs with fields that contain quoted values with embedded equals signs.\n\n`msg=\"Example text 0123456789.example.com due to connection failed. subject=/C=US/ST=Example/L=Example/O=Example Home, Incorporated/CN=0123456789.example.com; issuer=/C=US/O=DigiCert Inc/CN=DigiCert Global G2 TLS RSA SHA256 2020 CA1; not before=Oct 7 00:00:00 2024 GMT; not after=Oct 25 23:59:59 2025 GMT; certificate status=Valid;\"`\n\nThe parser fails with this error: `Error parsing line: Could not parse whole line successfully`\n\nFull CEF log example that causes the error:\n`CEF:0|Palo Alto Networks|PAN-OS|10.11.12-h13|test|SYSTEM|5|rt=Jan 01 2025 00:00:00 GMT deviceExternalId=0123456789 cs3Label=Virtual System cs3= fname= flexString2Label=Module flexString2=general msg=\"Example text 0123456789.example.com due to connection failed. subject=/C=US/ST=Example/L=Example/O=Example Home, Incorporated/CN=0123456789.example.com; issuer=/C=US/O=DigiCert Inc/CN=DigiCert Global G2 TLS RSA SHA256 2020 CA1; not before=Oct 7 00:00:00 2024 GMT; not after=Oct 25 23:59:59 2025 GMT; certificate status=Valid;\" externalId=1234567890123456789 cat= PanOSDGl1=0 PanOSDGl2=0 PanOSDGl3=0 PanOSDGl4=0 PanOSVsysName= dvchost=12345 PanOSActionFlags=0x8000000000000000`\n\nUnfortunately, I can't change anything to prevent the generation of these values that contain quoted values with embedded equals signs.\n\n### VRL Program\n\n```text\n.cef_message = join!([.appname, \":\", .message])\nparsed_cef, err = parse_cef(.cef_message)\nif err != null {\n  log(\"Unable to parse CEF event\" + err, level: \"error\")\n  log(.cef_message, level: \"error\")\n} else {\n  . = merge(., parsed_cef)\n  del(.cef_message)\n  del(.message)\n}\n```\n\n### VRL and/or Vector Version\n\n0.45.0\n\n### Debug Output\n\n```text\n\n```\n\n### Example\n\n[VRL Playground](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiLmNlZl9tZXNzYWdlID0gam9pbiEoWy5hcHBuYW1lLCBcIjpcIiwgLm1lc3NhZ2VdKVxucGFyc2VkX2NlZiA9IHBhcnNlX2NlZiEoLmNlZl9tZXNzYWdlKVxuIiwiZXZlbnQiOnsibWVzc2FnZSI6IjB8UGFsbyBBbHRvIE5ldHdvcmtzfFBBTi1PU3wxMC4xMS4xMi1oMTN8dGVzdHxTWVNURU18NXxydD1KYW4gMDEgMjAyNSAwMDowMDowMCBHTVQgZGV2aWNlRXh0ZXJuYWxJZD0wMTIzNDU2Nzg5IGNzM0xhYmVsPVZpcnR1YWwgU3lzdGVtIGNzMz0gZm5hbWU9IGZsZXhTdHJpbmcyTGFiZWw9TW9kdWxlIGZsZXhTdHJpbmcyPWdlbmVyYWwgbXNnPVwiRXhhbXBsZSB0ZXh0IDAxMjM0NTY3ODkuZXhhbXBsZS5jb20gZHVlIHRvIGNvbm5lY3Rpb24gZmFpbGVkLiBzdWJqZWN0PS9DPVVTL1NUPUV4YW1wbGUvTD1FeGFtcGxlL089RXhhbXBsZSBIb21lLCBJbmNvcnBvcmF0ZWQvQ049MDEyMzQ1Njc4OS5leGFtcGxlLmNvbTsgaXNzdWVyPS9DPVVTL089RGlnaUNlcnQgSW5jL0NOPURpZ2lDZXJ0IEdsb2JhbCBHMiBUTFMgUlNBIFNIQTI1NiAyMDIwIENBMTsgbm90IGJlZm9yZT1PY3QgNyAwMDowMDowMCAyMDI0IEdNVDsgbm90IGFmdGVyPU9jdCAyNSAyMzo1OTo1OSAyMDI1IEdNVDsgY2VydGlmaWNhdGUgc3RhdHVzPVZhbGlkO1wiIGV4dGVybmFsSWQ9MTIzNDU2Nzg5MDEyMzQ1Njc4OSBjYXQ9IFBhbk9TREdsMT0wIFBhbk9TREdsMj0wIFBhbk9TREdsMz0wIFBhbk9TREdsND0wIFBhbk9TVnN5c05hbWU9IGR2Y2hvc3Q9MTIzNDUgUGFuT1NBY3Rpb25GbGFncz0weDgwMDAwMDAwMDAwMDAwMDAiLCJhcHBuYW1lIjoiQ0VGIn0sImlzX2pzb25sIjpmYWxzZSwiZXJyb3IiOm51bGx9)\n\n### Additional Context\n\nThis issue can be resolved using modified version of parse_value function in the /src/stdlib/parse_cef.rs: \n```\nfn parse_value(input: &str) -> IResult<&str, String, VerboseError<&str>> {\n    if input.starts_with('\"') {\n        let mut i = 1;\n        let mut escaped = false;\n        \n        while i < input.len() {\n            let ch = input[i..].chars().next().unwrap();\n            if escaped {\n                escaped = false;\n            } else if ch == '\\\\' {\n                escaped = true;\n            } else if ch == '\"' {\n                let value = &input[..=i];\n                return Ok((&input[i+1..], value.to_string()));\n            }\n            i += ch.len_utf8();\n        }\n        return Ok((\"\", input.to_string()));\n    } else {\n        alt((\n            map(peek(parse_key), |_| String::new()),\n            escaped_transform(\n                take_till1_input(|input| alt((tag(\"\\\\\"), tag(\"=\"), parse_key))(input).is_ok()),\n                '\\\\',\n                alt((\n                    value('=', char('=')),\n                    value('\\\\', char('\\\\')),\n                    value('\\n', one_of(\"nr\")),\n                    success('\\\\'),\n                )),\n            ),\n        ))(input)\n    }\n}\n```\nI'm not a Rust programmer, so this might be the worst block of Rust code in the world.\n\n[CEF_example1.txt](https://github.com/user-attachments/files/19399735/CEF_example1.txt)\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1352/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1349",
        "id": 2931359846,
        "node_id": "PR_kwDOJN63t86PQTTH",
        "number": 1349,
        "title": "performance(runtime)!: Copy-on-Write value optimization",
        "user": {
            "login": "Zettroke",
            "id": 15730710,
            "node_id": "MDQ6VXNlcjE1NzMwNzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15730710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Zettroke",
            "html_url": "https://github.com/Zettroke",
            "followers_url": "https://api.github.com/users/Zettroke/followers",
            "following_url": "https://api.github.com/users/Zettroke/following{/other_user}",
            "gists_url": "https://api.github.com/users/Zettroke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Zettroke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Zettroke/subscriptions",
            "organizations_url": "https://api.github.com/users/Zettroke/orgs",
            "repos_url": "https://api.github.com/users/Zettroke/repos",
            "events_url": "https://api.github.com/users/Zettroke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Zettroke/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-03-19T10:59:29Z",
        "updated_at": "2025-03-29T13:16:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1349",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1349",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1349.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1349.patch",
            "merged_at": null
        },
        "body": "## Summary\r\nThis request introduces CoW logic into vrl\u00a0`Value`. It aims to allow passing\u00a0`Value`\u00a0between function by reference without the need for copies. It also makes using\u00a0`resolve_constant`\u00a0to precompute expressions viable, just making\u00a0`Object`\u00a0and\u00a0`Array`\u00a0expressions use it yielded 15% more throughput.\r\n\r\nThis request requires https://github.com/vectordotdev/vector/pull/22693 to work in vector.\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [x] Performance\r\n\r\n## Implementation \r\nAll of it is based on\u00a0`Arc::make_mut`\u00a0API. To reduce the number of code changes I decided to use custom\u00a0`DerefMut`\u00a0which calls to\u00a0`Arc::make_mut`. While it can potentially lead to excessive copies it's still strictly better than before. But I will understand if you want a more explicit API for this.\r\nI decided to wrap it up with\u00a0Arc-only\u00a0`Object`\u00a0and\u00a0`Array`\u00a0variants. This avoids indirection for trivially copyable scalar values, and `Bytes` are already ref-counted. Also, these variants already include an indirection, so overhead is not that noticeable.\r\n\r\n## Benchmarks\r\nI used our set of 120+ VRL transforms used for event normalization.\r\nOn average this change yielded almost 2x speedup in pure vrl benchmarks.\r\nI attached the full table with results, sadly I'm not allowed to provide sources of our VRL transforms, so I kindly ask you to benchmark on your rule-sets to see speedups in other use cases\r\n\r\n| AVG  | MEDIAN |\r\n|-------|-----------|\r\n| 1.92x | 1.49x     |\r\n\r\n<details>\r\n<summary>Benchmark results</summary>\r\n\r\n[Google sheets](https://docs.google.com/spreadsheets/d/1GZVuejS_24k9QE4bRshKKQoorGOzyIbsdPJXmuBIavk/edit?usp=sharing)\r\n\r\n| ID                                   | Baseline (KElem/s) | CoW (KElem/s) | Speedup |\r\n| ------------------------------------ | ------------------ | ------------- | ------- |\r\n| 9d521b11-8120-42d4-9afe-7ee3c6a49f20 | 23.904             | 198.31        | 8.30    |\r\n| 3cf0e90b-5ce1-42f8-b8cb-7e2988ef7b17 | 30.832             | 174.9         | 5.67    |\r\n| 42427cfe-7188-478b-af5b-949e5f7251cc | 19.891             | 103.94        | 5.23    |\r\n| 78441203-a45f-46ac-b4b1-0445a7ec8ce6 | 39.139             | 191.34        | 4.89    |\r\n| 77d02f9c-1422-4544-b890-f5687f5764bd | 26.434             | 121.72        | 4.60    |\r\n| 06dbc9c6-ac4d-4538-b088-6379e9b78955 | 26.222             | 118.31        | 4.51    |\r\n| 2884a275-e78f-47ad-9047-ec6c0a8ea36a | 18.522             | 79.86         | 4.31    |\r\n| d53ceb64-355a-4329-921d-9bbc45b2485d | 2.1036             | 8.9994        | 4.28    |\r\n| 7390a03e-6de5-4490-990f-d9a22efaed39 | 10.496             | 43.288        | 4.12    |\r\n| e899ee9b-3309-45b2-90e8-f336e939fafc | 6.054              | 24.107        | 3.98    |\r\n| eda4dc99-e416-4abb-9f65-ec4eab78e379 | 62.802             | 242.33        | 3.86    |\r\n| 1c80f848-3b67-452d-aa98-b3ae62041982 | 7.1462             | 25.908        | 3.63    |\r\n| 155a5d6f-f706-42bd-8b74-1c5725a4b9ba | 29.662             | 101.39        | 3.42    |\r\n| 6003a405-e1da-484c-9fce-36d81540acb4 | 4.6089             | 15.388        | 3.34    |\r\n| 5b76321d-adf3-45f4-8e86-09b0dd41daad | 17.695             | 58.38         | 3.30    |\r\n| 693f3edb-dd8b-4571-a9da-dac13a9ca16e | 27.852             | 89.938        | 3.23    |\r\n| 174c994c-94ee-40a9-bc8a-27627827e1a1 | 17.663             | 55.056        | 3.12    |\r\n| 06dd7946-fc4a-4549-b088-6379b9b78955 | 14.361             | 44.696        | 3.11    |\r\n| 8a8ee06b-e1b2-4498-8451-e3f2d95565bc | 64.637             | 182.34        | 2.82    |\r\n| 29ffb493-cf1e-4975-85b3-ea47a3fc5668 | 14.147             | 39.702        | 2.81    |\r\n| 89ea0f59-2c09-4939-b191-4770e087551b | 25.544             | 70.109        | 2.74    |\r\n| 561830ac-2187-42f0-b8f8-d004e2a94235 | 59.329             | 159.38        | 2.69    |\r\n| 3803e51f-a3a0-4bcb-aa3c-ff0165de2505 | 34.363             | 88.658        | 2.58    |\r\n| 4a6b1ace-5856-4228-9d23-83894d355833 | 23.262             | 59.045        | 2.54    |\r\n| 6b68b7d5-79ff-4454-b8e5-38039833fb83 | 36.779             | 84.572        | 2.30    |\r\n| c5ae51fa-ea2c-4a81-aeef-0c1e3cac6d8c | 32.911             | 74.799        | 2.27    |\r\n| ccbe9986-2f9e-4c87-9c78-90fea3af761a | 53.407             | 120.72        | 2.26    |\r\n| 064d78c6-fc4d-3548-b018-6479e9b78e55 | 15.272             | 34.342        | 2.25    |\r\n| bbaf0d44-61b7-482c-a274-0a572ff6637e | 38.89              | 87.168        | 2.24    |\r\n| 4d7c0c58-f36d-450d-b14e-7f89d4f86969 | 25.391             | 52.008        | 2.05    |\r\n| 9ac15de2-9652-4682-aa93-c30a9b6a6818 | 27.205             | 54.721        | 2.01    |\r\n| 64b68a83-6015-4c9b-8101-cc4a4ebc4c64 | 37.141             | 74.424        | 2.00    |\r\n| 06dd79c6-fc4d-4548-b088-6379e9b78955 | 14.916             | 29.409        | 1.97    |\r\n| 06dc79c6-fc5d-4548-b088-6379e9b79955 | 40.55              | 79.821        | 1.97    |\r\n| 79993e93-1de8-4350-820c-1d8def2f2f83 | 20.563             | 39.499        | 1.92    |\r\n| 388a5c82-e629-41ea-9c53-73052b5e59f0 | 51.147             | 98.14         | 1.92    |\r\n| 59ed0909-473d-4404-94fe-fffffcd211ea | 43.114             | 82.361        | 1.91    |\r\n| dd6f2836-45ce-4d0e-8f1b-57c16166ef29 | 85.064             | 161.78        | 1.90    |\r\n| 6c8fedcd-93ba-4a04-911c-ba313a2abafc | 63.091             | 118.4         | 1.88    |\r\n| a0ee97ce-a0d9-4c01-99f3-15cb09ef9ce2 | 17.664             | 33.075        | 1.87    |\r\n| 19d60a93-924e-4b75-bcba-9bc869f7b12b | 78.701             | 145.88        | 1.85    |\r\n| 9b7d3c1d-7ed6-4f8e-b2c1-48551e0e4462 | 51.184             | 93.697        | 1.83    |\r\n| b14f0464-0506-4d79-8268-ec1b45815bea | 27.926             | 49.441        | 1.77    |\r\n| 9f1474b7-659f-4eb8-b214-31779a8232ad | 10.854             | 19.133        | 1.76    |\r\n| 53bc39ab-7114-49f3-9def-1579de7c5b3e | 64.335             | 113.06        | 1.76    |\r\n| 38755417-d706-446d-9912-2e5ccba231db | 38.971             | 68.105        | 1.75    |\r\n| 2b90c03c-340d-44bc-bb1d-38fca175d8c6 | 66.721             | 113.55        | 1.70    |\r\n| 6e28bf67-a7e0-4d60-89ae-eae1462c016c | 14.948             | 25.283        | 1.69    |\r\n| 23c972d1-4133-43c6-aa6e-5ea207b779c6 | 15.363             | 25.957        | 1.69    |\r\n| 99c07f40-27ed-436c-9d6b-076c9062e885 | 28.566             | 47.556        | 1.66    |\r\n| 931561ea-cb6a-48f9-befa-67288cd16a1f | 69.588             | 113.5         | 1.63    |\r\n| 8e082450-dffd-493f-88a1-cf14626b5249 | 35.692             | 57.718        | 1.62    |\r\n| 7c8d6cf2-13e4-4ae1-8cbe-a2f236ae6097 | 42.04              | 67.905        | 1.62    |\r\n| 5c6c8c76-2950-4fa6-98ad-c3a07c24d233 | 77.595             | 125.21        | 1.61    |\r\n| d9653990-3127-43b7-bac3-bc8cb52956b0 | 67.515             | 107.95        | 1.60    |\r\n| 5caaa0cd-fe14-4586-96cb-cc38a8408072 | 43.697             | 68.68         | 1.57    |\r\n| f94cbd2f-f534-48d2-93f9-38dfd31dbc68 | 14.536             | 22.574        | 1.55    |\r\n| d2f60369-d13c-4347-87db-8a1713263b86 | 57.051             | 88.124        | 1.54    |\r\n| 778f01c2-c774-4f7d-a10e-fb924e9c92f1 | 11.776             | 18.085        | 1.54    |\r\n| 064d78c6-fc4d-3548-b018-6479e9b78f55 | 46.765             | 71.662        | 1.53    |\r\n| a05f0547-fa22-40b5-aa11-fe33ddf7d4c6 | 16.603             | 24.84         | 1.50    |\r\n| dc3d361d-0dfa-43bd-8ea5-3c38944d7217 | 71.035             | 105.7         | 1.49    |\r\n| 064d78c6-fc4d-3528-b017-6479e9b78e54 | 16.469             | 24.306        | 1.48    |\r\n| 4e511949-4388-4933-9011-357d7fbce1c1 | 49.71              | 73.282        | 1.47    |\r\n| 266c7bbc-4fbc-4e6d-b850-dfbac1f605da | 61.477             | 90.383        | 1.47    |\r\n| 5d167ee0-5548-4e71-96b2-16efed0ca4e2 | 73.164             | 105.45        | 1.44    |\r\n| 1e099979-d0ec-4387-8284-5d85a8c71611 | 38.058             | 53.661        | 1.41    |\r\n| dd488716-3e04-419f-a2a6-a4a0c5ca90ce | 54.318             | 76.463        | 1.41    |\r\n| 6c5b3b40-a2f0-458d-b54c-0266a6502089 | 62.124             | 85.603        | 1.38    |\r\n| 50b3a275-5175-4b85-873c-758986121265 | 117.61             | 161.81        | 1.38    |\r\n| a446d6f6-3331-4cb1-b5a8-3b39b343b1e3 | 97.355             | 133.05        | 1.37    |\r\n| 068d78a8-fc4d-3549-b018-6479e9b78e55 | 8.1624             | 11.04         | 1.35    |\r\n| 58c245d6-a0af-41e9-bf4f-31652386df11 | 142.39             | 192.04        | 1.35    |\r\n| 2e32128b-a279-4959-a018-405919392301 | 82.283             | 110.83        | 1.35    |\r\n| 0cf89cb0-bc6e-42de-9a8b-ab85b0c4e18c | 120.88             | 162.08        | 1.34    |\r\n| 9a2df316-90da-4be2-b4cf-afffaccda358 | 84.468             | 112.82        | 1.34    |\r\n| 8ad81a8e-1d8f-4183-8a89-ca2455a6da10 | 37.671             | 49.3          | 1.31    |\r\n| a43a77a2-c93c-40c3-8cf4-77145d8ab77c | 21.382             | 27.79         | 1.30    |\r\n| cc889d2d-64ab-4209-a8fc-afbede11b94d | 82.721             | 106.65        | 1.29    |\r\n| 7f8b9899-4ef0-4546-95cb-36e2077229b0 | 5.1225             | 6.5779        | 1.28    |\r\n| 10d48ec3-811e-4eba-8049-f4dc8f3b5d1b | 102.05             | 130.35        | 1.28    |\r\n| 646c0409-d34d-448a-811a-9ff71e61f0ab | 104.91             | 133.35        | 1.27    |\r\n| b306a97b-bc6c-467d-95a6-03fa71c2c221 | 55.863             | 70.849        | 1.27    |\r\n| c3042d90-10a9-41a4-9f9c-4f74dbd67f05 | 123.48             | 155.9         | 1.26    |\r\n| 03f08506-6568-4fed-9bc4-f949bf6f880f | 123.3              | 154.69        | 1.25    |\r\n| 50c61824-0a0b-404b-aff7-bc68ca4e006a | 13.958             | 17.474        | 1.25    |\r\n| 953b7ea8-f5e4-48a4-80ff-1a47f6985015 | 23.536             | 29.307        | 1.25    |\r\n| 19003575-98d7-4a4b-8da2-e93c1546626e | 31.945             | 39.773        | 1.25    |\r\n| eac9d717-e24b-426d-b0c1-c84a29e12427 | 100.66             | 124.94        | 1.24    |\r\n| 067e76c6-fc4d-3a83-b068-6479e9b78e65 | 18.985             | 23.552        | 1.24    |\r\n| cbc9086f-9c3a-453d-8137-7539755d7603 | 63.384             | 78.539        | 1.24    |\r\n| 70cf482a-154c-4e88-a1af-4cb6a313c7be | 65.007             | 80.5          | 1.24    |\r\n| 9cb23525-a853-4c28-8eb5-ad7c79a0ac4a | 134.56             | 164.8         | 1.22    |\r\n| 50d29b2c-bca7-4cd2-be35-662cb30e29fd | 41.526             | 50.122        | 1.21    |\r\n| 99806da3-2eda-4f36-a551-c0b4c2123d1e | 90.796             | 109.5         | 1.21    |\r\n| 1f80d853-0b1f-4d47-a0f3-4d04752cb895 | 53.387             | 63.098        | 1.18    |\r\n| fcbec513-9701-4a39-8161-66e1e53ef1c2 | 40.488             | 47.807        | 1.18    |\r\n| 293e2742-3a9b-4dae-9ffb-7aef000d8429 | 85.96              | 100.97        | 1.17    |\r\n| a4b278ab-38d5-4ee3-800b-23939f342b41 | 41.406             | 48.112        | 1.16    |\r\n| d92c74b1-cdb9-4f06-a64b-0f02e09602c1 | 73.206             | 84.249        | 1.15    |\r\n| 0bae0d44-a1b7-492c-a374-0a572ff6637e | 34.127             | 39.272        | 1.15    |\r\n| 065d71c6-1d4d-35c8-b038-6279eab71f55 | 48.407             | 55.482        | 1.15    |\r\n| 068d78c6-fc4d-3549-b018-6479e9b78e55 | 47.316             | 54.213        | 1.15    |\r\n| 9720b198-4c79-4539-a3fb-d80c9a72e16a | 111.43             | 127.3         | 1.14    |\r\n| 9347482d-48c9-4429-b63e-b864d67cef93 | 52.937             | 60.12         | 1.14    |\r\n| 10ad20a6-18d0-4c88-a454-dd4458f3296d | 68.783             | 77.883        | 1.13    |\r\n| 067e79e6-fc4d-3a88-b0a8-6471ebb78e55 | 14.163             | 15.874        | 1.12    |\r\n| 39b1e516-b1de-476e-bf9b-d44e31d2dd65 | 53.725             | 60.054        | 1.12    |\r\n| 7ne6cbv4-12sd-25f3-a21d-vfdt7d8a32f1 | 175.29             | 195.55        | 1.12    |\r\n| 7765f60c-a3dc-40d6-bcc7-5d9aabb359e5 | 56.253             | 62.624        | 1.11    |\r\n| 7fc14122-48a3-4da3-8554-27a72de52f8a | 17.953             | 19.962        | 1.11    |\r\n| 60024e00-6ff5-4274-b4e7-1d98eead7db3 | 156.89             | 172.92        | 1.10    |\r\n| bdf1e9b2-649c-4233-aa7e-c3dbcf969464 | 158.52             | 174.54        | 1.10    |\r\n| f5d33440-fbbb-4663-b6d1-db2bc74e21b6 | 91.087             | 99.585        | 1.09    |\r\n| 6ca34b9d-cae5-4cff-ab7c-b1609dbfa888 | 78.086             | 85.08         | 1.09    |\r\n| b4a8c51f-b211-4967-825e-71cf9a3b856a | 109.44             | 115.45        | 1.05    |\r\n| 02aef7bc-6a70-487c-815d-6a3641aca1d9 | 223.69             | 233.35        | 1.04    |\r\n| e917c646-ee08-4ebc-8578-6f8a42af1511 | 76.56              | 79.799        | 1.04    |\r\n| 5f2b2b8e-63f3-48c9-ae25-8db1d320944a | 173.15             | 179.25        | 1.04    |\r\n| d5a15b44-ed4c-483d-a901-a78377b33f66 | 178.9              | 181.64        | 1.02    |\r\n| 782ce02b-dc4b-4c66-b85d-210ae8de1f3b | 124.68             | 124.31        | 1.00    |\r\n| 74d77206-86cb-480f-97bf-4162ddc5ea93 | 186.42             | 181.49        | 0.97    |\r\n| 8433f0e2-911b-4ea0-a4c4-7279a3e33951 | 285.83             | 274.7         | 0.96    |\r\n\r\n</details>\r\n\r\n\r\n## Is this a breaking change\r\n- [x] Yes, sadly it's not possible to make it non-breaking without using some advanced rust wizardry.\r\n- [ ] No\r\n\r\n## How did you test this PR?\r\nWe used included unit tests + we already used this change in our vector load-testing setup.\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [x] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [ ] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [x] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [ ] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1349/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1348",
        "id": 2927204937,
        "node_id": "I_kwDOJN63t86ueZpJ",
        "number": 1348,
        "title": "[feature request] path functions dirname and basename",
        "user": {
            "login": "shantanugadgil",
            "id": 2508915,
            "node_id": "MDQ6VXNlcjI1MDg5MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2508915?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shantanugadgil",
            "html_url": "https://github.com/shantanugadgil",
            "followers_url": "https://api.github.com/users/shantanugadgil/followers",
            "following_url": "https://api.github.com/users/shantanugadgil/following{/other_user}",
            "gists_url": "https://api.github.com/users/shantanugadgil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shantanugadgil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shantanugadgil/subscriptions",
            "organizations_url": "https://api.github.com/users/shantanugadgil/orgs",
            "repos_url": "https://api.github.com/users/shantanugadgil/repos",
            "events_url": "https://api.github.com/users/shantanugadgil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shantanugadgil/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-03-18T05:31:43Z",
        "updated_at": "2025-03-18T13:40:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment.\n<!-- Thank you for keeping this note for the community -->\n\nBased on the discussion at: \nhttps://github.com/vectordotdev/vector/discussions/22657\n\n### Use Cases\n\nBased on the discussion at https://github.com/vectordotdev/vector/discussions/22657 I want to be able to extract the \"name only\" part of a filename_with_extension. I want to use that extracted \"only name\" as a \"service label\" when forwarding the logs to Loki.\n\nHence I am requesting the path functions like dirname and basename\n\n### Attempted Solutions\n\nThe attempted solution is already at: \nhttps://github.com/vectordotdev/vector/discussions/22657\n\n### Proposal\n\nIn addition to the simple `basename`/`dirname` functions, if there was a function to directly yield the \"only file name\" part, it could be even-more-awesome! \ud83d\ude42 \n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1348/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1340",
        "id": 2923371983,
        "node_id": "I_kwDOJN63t86uPx3P",
        "number": 1340,
        "title": "Byte strings/encoded payloads",
        "user": {
            "login": "jimmystewpot",
            "id": 5865992,
            "node_id": "MDQ6VXNlcjU4NjU5OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5865992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimmystewpot",
            "html_url": "https://github.com/jimmystewpot",
            "followers_url": "https://api.github.com/users/jimmystewpot/followers",
            "following_url": "https://api.github.com/users/jimmystewpot/following{/other_user}",
            "gists_url": "https://api.github.com/users/jimmystewpot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jimmystewpot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jimmystewpot/subscriptions",
            "organizations_url": "https://api.github.com/users/jimmystewpot/orgs",
            "repos_url": "https://api.github.com/users/jimmystewpot/repos",
            "events_url": "https://api.github.com/users/jimmystewpot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jimmystewpot/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-03-16T22:53:58Z",
        "updated_at": "2025-04-07T17:17:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hello,\n\nWe currently have an observability pipeline using Go's `json.RawMessage` ([]byte) encoding on a stream coming in via a pub/sub queue. I was reading through the docs and couldn't find a clear answer regarding how this would or should be handled with vrl.\n\nI am keen to better understand how this use case could be done; if this is not currently possible, we are happy to contribute a feature, but I wanted to make sure that we didn't overlook 'the right way' to do this in the context of vector/vrl.\n\nThanks in advance,\n\nJames.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1340/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1334",
        "id": 2910038429,
        "node_id": "PR_kwDOJN63t86OI3Ym",
        "number": 1334,
        "title": "enhancement(match_datadog_query): add is_phrase flag to equals method",
        "user": {
            "login": "PSeitz",
            "id": 1109503,
            "node_id": "MDQ6VXNlcjExMDk1MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1109503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PSeitz",
            "html_url": "https://github.com/PSeitz",
            "followers_url": "https://api.github.com/users/PSeitz/followers",
            "following_url": "https://api.github.com/users/PSeitz/following{/other_user}",
            "gists_url": "https://api.github.com/users/PSeitz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PSeitz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PSeitz/subscriptions",
            "organizations_url": "https://api.github.com/users/PSeitz/orgs",
            "repos_url": "https://api.github.com/users/PSeitz/repos",
            "events_url": "https://api.github.com/users/PSeitz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PSeitz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-03-11T10:44:20Z",
        "updated_at": "2025-03-18T11:11:00Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1334",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1334",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1334.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1334.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nUpdate the Filter trait's equals signature to include an `is_phrase` boolean flag.\r\n\r\nWithout that information there is no way to distinguish between phrased and non-phrased queries. They behave differently in datadog on default fields\r\n\r\nThis is for matching on default fields (typically `message`) in datadog. The matching behavior for phrases is different than non-phrased. In a phrase the tokens need to be in the same order. E.g.\r\n`Hello nice world` => `\"Hello world\"` no match\r\n`Hello nice world` => `Hello world` matches\r\n\r\n### Alternative Options\r\n\r\nThere is an alternative solution where the tokenizer would emit multiple tokens (only for default fields):\r\n`Hello world` would expand to the equivalent of`_default_:Hello` AND `_default_:World`.\r\n`\"Hello world\"` would expand to the equivalent of`_default_:\"Hello World\"`\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [X] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [ ] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [X] Yes\r\n- [ ] No\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [ ] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [X] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [X] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [X] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [X] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1334/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1330",
        "id": 2907516226,
        "node_id": "I_kwDOJN63t86tTS1C",
        "number": 1330,
        "title": "Delete `string_path` feature",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-03-10T14:43:38Z",
        "updated_at": "2025-03-10T14:46:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": {
            "id": 2240168,
            "node_id": "IT_kwDOAQFeYs4AIi6o",
            "name": "Task",
            "description": "A specific piece of work",
            "color": "yellow",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This is no longer needed by Vector tests. Ideally, we don't want implicit conversion to paths.\n\nRef: https://github.com/vectordotdev/vector/pull/18188",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1330/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1313",
        "id": 2891971280,
        "node_id": "I_kwDOJN63t86sX_rQ",
        "number": 1313,
        "title": "Add option for VRL function parse_key_value to specify resulting key case",
        "user": {
            "login": "alexeynl",
            "id": 82229750,
            "node_id": "MDQ6VXNlcjgyMjI5NzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/82229750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexeynl",
            "html_url": "https://github.com/alexeynl",
            "followers_url": "https://api.github.com/users/alexeynl/followers",
            "following_url": "https://api.github.com/users/alexeynl/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexeynl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexeynl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexeynl/subscriptions",
            "organizations_url": "https://api.github.com/users/alexeynl/orgs",
            "repos_url": "https://api.github.com/users/alexeynl/repos",
            "events_url": "https://api.github.com/users/alexeynl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexeynl/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2025-03-03T16:48:00Z",
        "updated_at": "2025-03-04T11:02:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240173,
            "node_id": "IT_kwDOAQFeYs4AIi6t",
            "name": "Feature",
            "description": "A request, idea, or new functionality",
            "color": "blue",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-10-08T09:56:18Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\n<!-- Thank you for keeping this note for the community -->\n\n\n### Use Cases\n\n\nLets we have the following strings:\n```\nkey1=value1,key2=value2\nKey1=value1,Key2=value2\n```\nIn current implementation using \n```\nresult = parse_key_value(string)\n```\ni need check both\n```\nresult.key1\nresult.Key1\n```\nfor value.\n\n \n\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\nIf i have keys in key value string contains in different cases i need option to specify case of resulting field names like this:\n```\nresult = parse_key_value(string, key_case: \"low\")\n```\nresult.key1 must return value1 for both string:\n```\nkey1=value1,key2=value2\nKey1=value1,Key2=value2\n```\n### References\n\n_No response_\n\n### Version\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1313/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1297",
        "id": 2876889998,
        "node_id": "I_kwDOJN63t86reduO",
        "number": 1297,
        "title": "Introduce `break` for aborting iterations",
        "user": {
            "login": "enotspe",
            "id": 47488630,
            "node_id": "MDQ6VXNlcjQ3NDg4NjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47488630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/enotspe",
            "html_url": "https://github.com/enotspe",
            "followers_url": "https://api.github.com/users/enotspe/followers",
            "following_url": "https://api.github.com/users/enotspe/following{/other_user}",
            "gists_url": "https://api.github.com/users/enotspe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/enotspe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/enotspe/subscriptions",
            "organizations_url": "https://api.github.com/users/enotspe/orgs",
            "repos_url": "https://api.github.com/users/enotspe/repos",
            "events_url": "https://api.github.com/users/enotspe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/enotspe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-02-25T04:24:52Z",
        "updated_at": "2025-02-25T15:04:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "based on this [discussion](https://github.com/vectordotdev/vrl/discussions/1293#discussioncomment-12174840) \n\na nice feature would be to have a `break` instruction to finish an ongoing iteration, like when you iterate on a `for_each` instruction like in\n\n```\n      # Define a map of IP ranges and their classifications\n      range_map = {\n          \"10.0.0.0/8\": \"private\",\n          \"172.16.0.0/12\": \"private\",\n          \"192.168.0.0/16\": \"private\",\n          \"127.0.0.0/8\": \"loopback\",\n          \"169.254.0.0/16\": \"link_local\",\n          \"224.0.0.0/4\": \"multicast\",\n          \"100.64.0.0/10\": \"carrier_nat\",\n          \"192.0.0.0/24\": \"documentation\",\n          \"192.0.2.0/24\": \"documentation\",\n          \"198.51.100.0/24\": \"documentation\",\n          \"203.0.113.0/24\": \"documentation\",\n          \"240.0.0.0/4\": \"reserved\",\n          \n          # IPv6 Ranges\n          \"::1/128\": \"loopback\",\n          \"fc00::/7\": \"private\",  # Unique Local Addresses (ULA)\n          \"fe80::/10\": \"link_local\",\n          \"ff00::/8\": \"multicast\",\n          \"100::/64\": \"discard\",  # RFC 6666\n          \"2001:db8::/32\": \"documentation\",  # RFC 3849\n          \"2002::/16\": \"6to4_tunnel\",\n          \"::ffff:0:0/96\": \"ipv4_mapped\",\n          \"::/128\": \"unspecified\",\n          \"::ffff:0:0:0/96\": \"ipv4_translated\",\n          \"2001::/23\": \"reserved\",  # IANA reserved block\n          \"4000::/2\": \"reserved\"   # Reserved for future use\n      }\n      \n      # Default to \"public\"\n      .source.ip_type = \"public\"\n      \n      # Check which range the IP belongs to\n      for_each(range_map) -> |cidr, ip_type| {\n          if ip_cidr_contains!(cidr, to_string!(.source.ip)) {\n              .source.ip_type = ip_type\n          }\n      }\n```\n\nit would be more efficient for sure if there would be a way to break the `for_each` iteration\n```\n      for_each(range_map) -> |cidr, ip_type| {\n          if ip_cidr_contains!(cidr, to_string!(.source.ip)) {\n              .source.ip_type = ip_type\n              break\n          }\n      }\n```\n\nbut `break` is not supported and reserved for future use\n```\nerror[E205]: reserved keyword\n   \u250c\u2500 :46:9\n   \u2502\n46 \u2502         break\n   \u2502         ^^^^^\n   \u2502         \u2502\n   \u2502         this identifier name is reserved for future use in the language\n   \u2502         use a different name instead\n   \u2502\n   = see language documentation at https://vrl.dev\n   = try your code in the VRL REPL, learn more at https://vrl.dev/examples\n```\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1297/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1266",
        "id": 2848478984,
        "node_id": "I_kwDOJN63t86pyFcI",
        "number": 1266,
        "title": "Change `UnnecessaryCoalesce` error to a warning.",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5321068312,
                "node_id": "LA_kwDOJN63t88AAAABPSkPGA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20dev",
                "name": "domain: dev",
                "color": "343639",
                "default": false,
                "description": "Anything related to the development environment"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pront",
                "id": 1138161,
                "node_id": "MDQ6VXNlcjExMzgxNjE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pront",
                "html_url": "https://github.com/pront",
                "followers_url": "https://api.github.com/users/pront/followers",
                "following_url": "https://api.github.com/users/pront/following{/other_user}",
                "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
                "organizations_url": "https://api.github.com/users/pront/orgs",
                "repos_url": "https://api.github.com/users/pront/repos",
                "events_url": "https://api.github.com/users/pront/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pront/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-02-12T14:50:42Z",
        "updated_at": "2025-02-12T14:50:48Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": {
            "id": 2240168,
            "node_id": "IT_kwDOAQFeYs4AIi6o",
            "name": "Task",
            "description": "A specific piece of work",
            "color": "yellow",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The [UnnecessaryCoalesce](https://github.com/vectordotdev/vrl/blob/c286404006b73b6ad0e06400e9d093d5c1b383bf/src/compiler/expression/op.rs#L331) error can be downgraded to a warning.\n\nRef:\n* https://github.com/vectordotdev/vrl/issues/1143 (similar)\n* https://github.com/vectordotdev/vector/issues/13056",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1266/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1257",
        "id": 2830661284,
        "node_id": "I_kwDOJN63t86ouHak",
        "number": 1257,
        "title": "Unexpected behaviour of the object_from_array VRL fuction",
        "user": {
            "login": "usa4ev",
            "id": 28273517,
            "node_id": "MDQ6VXNlcjI4MjczNTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/28273517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/usa4ev",
            "html_url": "https://github.com/usa4ev",
            "followers_url": "https://api.github.com/users/usa4ev/followers",
            "following_url": "https://api.github.com/users/usa4ev/following{/other_user}",
            "gists_url": "https://api.github.com/users/usa4ev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/usa4ev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/usa4ev/subscriptions",
            "organizations_url": "https://api.github.com/users/usa4ev/orgs",
            "repos_url": "https://api.github.com/users/usa4ev/repos",
            "events_url": "https://api.github.com/users/usa4ev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/usa4ev/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-02-04T15:21:41Z",
        "updated_at": "2025-02-05T17:56:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240170,
            "node_id": "IT_kwDOAQFeYs4AIi6q",
            "name": "Bug",
            "description": "An unexpected problem or behavior",
            "color": "red",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n\nA note for the community\n\n    Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n    If you are interested in working on this issue or have submitted a pull request, please leave a comment\n\n### Problem\n\nVRL function **object_from_array** when used with a single parameter requires unnecessary push to that parameter to work properly. See VRL example in respective section.\n\nWhat I expect:\n```\n{\n  ...\n  \"foo\": \"bar\",\n  \"propstructLen\": 1,\n  ...\n}\n```\n\nWhat I get:\n```\n{\n  ...\n  \"propstructLen\": 0,\n  ...\n}\n```\n\nThe function is also not fallible depsite the [doc page](https://vector.dev/docs/reference/vrl/functions/#object_from_array).\n\n### Configuration\n\n```text\nconfig.toml:\n\n[sources.demo_logs]\n    type = \"demo_logs\"\n    format = \"json\"\n    lines = [ \"line1\" ]\n\n[transforms.remap_logs]\n\tinputs = [\"demo_logs\"]\n\ttype = \"remap\"\n\tfile = \"/Users/username/test/transform_tj.vrl\"\n\n[sinks.print_ok]\n    type = \"console\"\n    encoding.codec = \"json\"\n    encoding.json.pretty = true\n    inputs = [ \"remap_logs\" ]\n\n\ntransform_tj.vrl:\n\nproparr = [{\"key\":\"foo\", \"value\":\"bar\"}]\n\nkeyvalarr = []\nfor_each(proparr) -> |_index, item| {\n\n    PropKey = item.key\n    PropValue = item.value\n\n    if is_string(PropKey) {\n        keyvalarr = push(keyvalarr, [PropKey, PropValue])\n    }\n}\n\n# keyvalarr = push(keyvalarr, [null, null])  # <-- when this line is commented out or removed, the next line returns an empty object\n\npropstruct = object_from_array(keyvalarr)\n.propstructLen = length(propstruct)\n. = merge(., propstruct, deep: false)\n```\n\n### Version\n\nvector 0.44.0 (aarch64-apple-darwin 3cdc7c3 2025-01-13 21:26:04.735691656)\n\n### Debug Output\n\n```text\nTRACE WHEN object_from_array DOES NOT WORK AS EXPECTED:\n\n2025-02-04T14:55:47.266051Z TRACE vector: Beep.\n2025-02-04T14:55:47.266050Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::bytes_received: Bytes received. byte_size=0 protocol=none\n2025-02-04T14:55:47.266149Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector::internal_events::demo_logs: Received one event.\n2025-02-04T14:55:47.267182Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::events_received: Events received. count=1 byte_size=255\n2025-02-04T14:55:47.267257Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:55:47.267273Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=363 output=_default\n2025-02-04T14:55:47.267316Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:55:47.267339Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_core::fanout: Sent item to fanout.\n2025-02-04T14:55:47.267368Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_common::internal_event::events_received: Events received. count=1 byte_size=363\n2025-02-04T14:55:47.267614Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:55:47.267641Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_core::fanout: Sent item to fanout.\n2025-02-04T14:55:47.267651Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=381 output=_default\n2025-02-04T14:55:47.267679Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::events_received: Events received. count=1 byte_size=381\n2025-02-04T14:55:47.268045Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=379\n{\n  \"host\": \"localhost\",\n  \"message\": \"{\\\"user-identifier\\\":\\\"shaneIxD\\\",\\\"datetime\\\":\\\"04/Feb/2025:17:55:47\\\",\\\"method\\\":\\\"HEAD\\\",\\\"request\\\":\\\"/user/booperbot124\\\",\\\"protocol\\\":\\\"HTTP/2.0\\\",\\\"status\\\":\\\"300\\\",\\\"bytes\\\":21304,\\\"referer\\\":\\\"https://make.dealer/secret-info/open-sesame\\\"}\",\n  \"propstructLen\": 0,\n  \"service\": \"vector\",\n  \"source_type\": \"demo_logs\",\n  \"timestamp\": \"2025-02-04T14:55:47.267231Z\"\n}\n2025-02-04T14:55:47.268070Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::bytes_sent: Bytes sent. byte_size=439 protocol=console\n\n\nTRACE WHEN object_from_array WORKS AS EXPECTED:\n\n\n2025-02-04T14:56:16.860093Z TRACE vector: Beep.\n2025-02-04T14:56:16.860093Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::bytes_received: Bytes received. byte_size=0 protocol=none\n2025-02-04T14:56:16.860158Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector::internal_events::demo_logs: Received one event.\n2025-02-04T14:56:16.860525Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::events_received: Events received. count=1 byte_size=243\n2025-02-04T14:56:16.860576Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:56:16.860582Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=351 output=_default\n2025-02-04T14:56:16.860993Z DEBUG source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector::topology::builder: Source finished normally.\n2025-02-04T14:56:16.861042Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_core::fanout: Processing control message inside of send: None\n2025-02-04T14:56:16.861058Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:56:16.861070Z TRACE source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector_core::fanout: Sent item to fanout.\n2025-02-04T14:56:16.861075Z DEBUG source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector::topology::builder: Source pump finished normally.\n2025-02-04T14:56:16.861114Z DEBUG source{component_kind=\"source\" component_id=demo_logs component_type=demo_logs}: vector::topology::builder: Source pump supervisor task finished normally.\n2025-02-04T14:56:16.861149Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_common::internal_event::events_received: Events received. count=1 byte_size=351\n2025-02-04T14:56:16.861350Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_core::fanout: Processing control message inside of send: None\n2025-02-04T14:56:16.861367Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_buffers::topology::channel::limited_queue: Sent item.\n2025-02-04T14:56:16.861374Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_core::fanout: Sent item to fanout.\n2025-02-04T14:56:16.861379Z TRACE transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=381 output=_default\n2025-02-04T14:56:16.862045Z DEBUG transform{component_kind=\"transform\" component_id=remap_logs component_type=remap}: vector::topology::builder: Synchronous transform finished normally.\n2025-02-04T14:56:16.862093Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::events_received: Events received. count=1 byte_size=381\n2025-02-04T14:56:16.862200Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=379\n2025-02-04T14:56:16.862208Z TRACE sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector_common::internal_event::bytes_sent: Bytes sent. byte_size=443 protocol=console\n{\n  \"foo\": \"bar\",\n  \"host\": \"localhost\",\n  \"message\": \"{\\\"user-identifier\\\":\\\"KarimMove\\\",\\\"datetime\\\":\\\"04/Feb/2025:17:56:16\\\",\\\"method\\\":\\\"HEAD\\\",\\\"request\\\":\\\"/apps/deploy\\\",\\\"protocol\\\":\\\"HTTP/2.0\\\",\\\"status\\\":\\\"307\\\",\\\"bytes\\\":47336,\\\"referer\\\":\\\"https://names.sbs/user/booperbot124\\\"}\",\n  \"propstructLen\": 1,\n  \"service\": \"vector\",\n  \"source_type\": \"demo_logs\",\n  \"timestamp\": \"2025-02-04T14:56:16.860549Z\"\n}\n2025-02-04T14:56:16.862686Z DEBUG sink{component_kind=\"sink\" component_id=print_ok component_type=console}: vector::topology::builder: Sink finished normally.\n```\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\nvectordotdev/vector#22294 ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1257/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1244",
        "id": 2822095499,
        "node_id": "I_kwDOJN63t86oNcKL",
        "number": 1244,
        "title": "parse_json in VRL doesn't support json-like strings (with single quotes)",
        "user": {
            "login": "nomalord",
            "id": 105173207,
            "node_id": "U_kgDOBkTQ1w",
            "avatar_url": "https://avatars.githubusercontent.com/u/105173207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nomalord",
            "html_url": "https://github.com/nomalord",
            "followers_url": "https://api.github.com/users/nomalord/followers",
            "following_url": "https://api.github.com/users/nomalord/following{/other_user}",
            "gists_url": "https://api.github.com/users/nomalord/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nomalord/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nomalord/subscriptions",
            "organizations_url": "https://api.github.com/users/nomalord/orgs",
            "repos_url": "https://api.github.com/users/nomalord/repos",
            "events_url": "https://api.github.com/users/nomalord/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nomalord/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-01-30T23:26:44Z",
        "updated_at": "2025-01-31T20:32:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": {
            "id": 2240170,
            "node_id": "IT_kwDOAQFeYs4AIi6q",
            "name": "Bug",
            "description": "An unexpected problem or behavior",
            "color": "red",
            "created_at": "2024-01-25T17:24:43Z",
            "updated_at": "2024-07-26T10:38:11Z",
            "is_enabled": true
        },
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\n<!-- Thank you for keeping this note for the community -->\n\n\n### Problem\n\nI have encountered an issue with parsing json strings with single quotes:\nthe following VRL expression:\n```\n.bad = parse_json!(.bad)\n```\nparsing the following event:\n```\n{\n    bad: \"{'test': 'hello'}\"\n}\n```\n\nreturns an error saying the json is invalid...\n\nI also tested in the VRL playground\nPlease help :)\nThanks in advance\n\nhttps://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiLmJhZCA9IHBhcnNlX2pzb24hKC5iYWQpIiwiZXZlbnQiOm51bGwsImlzX2pzb25sIjpmYWxzZSwiZXJyb3IiOiJDb3VsZCBub3QgcGFyc2UgSlNPTiBldmVudDpcbntcbiAgICBiYWQ6IFwieyd0ZXN0JzogJ2hlbGxvJ31cIlxufSJ9\n\n### Configuration\n\n```text\n\n```\n\n### Version\n\n0.38\n\n### Debug Output\n\n```text\n\n```\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1226",
        "id": 2812054211,
        "node_id": "PR_kwDOJN63t86JCJA8",
        "number": 1226,
        "title": "chore(deps): bump nom from 7.1.3 to 8.0.0",
        "user": {
            "login": "dependabot[bot]",
            "id": 49699333,
            "node_id": "MDM6Qm90NDk2OTkzMzM=",
            "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot",
            "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
            "type": "Bot",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5325596133,
                "node_id": "LA_kwDOJN63t88AAAABPW4l5Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20deps",
                "name": "domain: deps",
                "color": "343639",
                "default": false,
                "description": "Anything related to dependencies"
            },
            {
                "id": 6384981771,
                "node_id": "LA_kwDOJN63t88AAAABfJMXCw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/no-changelog",
                "name": "no-changelog",
                "color": "4FC887",
                "default": false,
                "description": "Changes in this PR do not need user-facing explanations in the release changelog"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-01-27T04:26:12Z",
        "updated_at": "2025-03-24T19:45:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1226",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1226",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1226.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1226.patch",
            "merged_at": null
        },
        "body": "Bumps [nom](https://github.com/rust-bakery/nom) from 7.1.3 to 8.0.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/rust-bakery/nom/blob/main/CHANGELOG.md\">nom's changelog</a>.</em></p>\n<blockquote>\n<h2>8.0.0 2025-01-25</h2>\n<p>This versions represents a significant refactoring of nom to reduce the amount of code generated by prsers, and reduce the API surface. As such, it comes with some breaking changes, mostly around the move from closure based combinators to trait based ones. In practice, it means that instead of writing <code>combinator(arg)(input)</code>, we now write <code>combinator(arg).parse(input)</code>.</p>\n<p>This release also marks th introduction of the <a href=\"https://crates.io/crates/nom-language\">nom-language</a> crate, which will hold tools more focused on language parsing than the rest of nom, like the <code>VerboseError</code> type and the newly added precedence parsing combinators.</p>\n<h3>Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/cky\"><code>@\u200bcky</code></a></li>\n<li><a href=\"https://github.com/5c077m4n\"><code>@\u200b5c077m4n</code></a></li>\n<li><a href=\"https://github.com/epage\"><code>@\u200bepage</code></a></li>\n<li><a href=\"https://github.com/Fumon\"><code>@\u200bFumon</code></a></li>\n<li><a href=\"https://github.com/jtracey\"><code>@\u200bjtracey</code></a></li>\n<li><a href=\"https://github.com/OliveIsAWord\"><code>@\u200bOliveIsAWord</code></a></li>\n<li><a href=\"https://github.com/Xiretza\"><code>@\u200bXiretza</code></a></li>\n<li><a href=\"https://github.com/flier\"><code>@\u200bflier</code></a></li>\n<li><a href=\"https://github.com/cenodis\"><code>@\u200bcenodis</code></a></li>\n<li><a href=\"https://github.com/Shadow53\"><code>@\u200bShadow53</code></a></li>\n<li>@<a href=\"https://github.com/jmmaa\"><code>@\u200bjmmaa</code></a></li>\n<li><a href=\"https://github.com/terror\"><code>@\u200bterror</code></a></li>\n<li><a href=\"https://github.com/zanedp\"><code>@\u200bzanedp</code></a></li>\n<li><a href=\"https://github.com/atouchet\"><code>@\u200batouchet</code></a></li>\n<li><a href=\"https://github.com/CMDJojo\"><code>@\u200bCMDJojo</code></a></li>\n<li><a href=\"https://github.com/ackxolotl\"><code>@\u200backxolotl</code></a></li>\n<li><a href=\"https://github.com/xmakro\"><code>@\u200bxmakro</code></a></li>\n<li><a href=\"https://github.com/tfpk\"><code>@\u200btfpk</code></a></li>\n<li><a href=\"https://github.com/WhyNotHugo\"><code>@\u200bWhyNotHugo</code></a></li>\n<li><a href=\"https://github.com/brollb\"><code>@\u200bbrollb</code></a></li>\n<li><a href=\"https://github.com/smheidrich\"><code>@\u200bsmheidrich</code></a></li>\n<li><a href=\"https://github.com/glittershark\"><code>@\u200bglittershark</code></a></li>\n<li><a href=\"https://github.com/GuillaumeGomez\"><code>@\u200bGuillaumeGomez</code></a></li>\n<li><a href=\"https://github.com/LeoDog896\"><code>@\u200bLeoDog896</code></a></li>\n<li><a href=\"https://github.com/fmiras\"><code>@\u200bfmiras</code></a></li>\n<li><a href=\"https://github.com/ttsugriy\"><code>@\u200bttsugriy</code></a></li>\n<li><a href=\"https://github.com/McDostone\"><code>@\u200bMcDostone</code></a></li>\n<li><a href=\"https://github.com/superboum\"><code>@\u200bsuperboum</code></a></li>\n<li><a href=\"https://github.com/rruppy\"><code>@\u200brruppy</code></a></li>\n<li><a href=\"https://github.com/thssuck\"><code>@\u200bthssuck</code></a></li>\n<li><a href=\"https://github.com/Chasing1020\"><code>@\u200bChasing1020</code></a></li>\n<li><a href=\"https://github.com/thatmarkenglishguy\"><code>@\u200bthatmarkenglishguy</code></a></li>\n<li><a href=\"https://github.com/ambiso\"><code>@\u200bambiso</code></a></li>\n<li><a href=\"https://github.com/boxdot\"><code>@\u200bboxdot</code></a></li>\n<li><a href=\"https://github.com/krtab\"><code>@\u200bkrtab</code></a></li>\n<li><a href=\"https://github.com/code10129\"><code>@\u200bcode10129</code></a></li>\n<li><a href=\"https://github.com/manunio\"><code>@\u200bmanunio</code></a></li>\n<li><a href=\"https://github.com/stuarth\"><code>@\u200bstuarth</code></a></li>\n<li><a href=\"https://github.com/mindeng\"><code>@\u200bmindeng</code></a></li>\n<li><a href=\"https://github.com/JonathanPlasse\"><code>@\u200bJonathanPlasse</code></a></li>\n<li><a href=\"https://github.com/nabilwadih\"><code>@\u200bnabilwadih</code></a></li>\n<li><a href=\"https://github.com/phoenixr-codes\"><code>@\u200bphoenixr-codes</code></a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/2cec1b3e4c9ccac62c902d60c00de6d1549ccbe1\"><code>2cec1b3</code></a> v8.0.0 (<a href=\"https://redirect.github.com/rust-bakery/nom/issues/1797\">#1797</a>)</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/7afe3a8c4021871a8647d3bbf928aecd551c9b62\"><code>7afe3a8</code></a> Merge pull request <a href=\"https://redirect.github.com/rust-bakery/nom/issues/1793\">#1793</a> from rust-bakery/beta.1</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/84af9e79216462cf00fc7c85cbbbdb67d6897110\"><code>84af9e7</code></a> nom 8.0.0-beta.1</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/555eab9ddcbd6665626150ed14d17106eb85ad5f\"><code>555eab9</code></a> Merge pull request <a href=\"https://redirect.github.com/rust-bakery/nom/issues/1792\">#1792</a> from rust-bakery/nom-language</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/6a25312dbf4df8fe0ad1f1dc5de19843139d381e\"><code>6a25312</code></a> fix nom-language tests</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/bcc1b0cb64bcbf82ab3f35e32eec1429129e5d02\"><code>bcc1b0c</code></a> move the left_assoc combinator to nom-language</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/9b0e18cf5a75964a3d4a841292c0aacf6a513c39\"><code>9b0e18c</code></a> Implement new parser <code>left_assoc</code>. (<a href=\"https://redirect.github.com/rust-bakery/nom/issues/1775\">#1775</a>)</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/cb3b5b8ebbbca2efe81ae4089541bab322bc3bfe\"><code>cb3b5b8</code></a> move precedence parsing to nom-language</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/f1abba64a7384a29602ee0df00b4809e1fd39f2a\"><code>f1abba6</code></a> fix precedence parsing</li>\n<li><a href=\"https://github.com/rust-bakery/nom/commit/6c124693c10dd3e932013fdfa0e1690af8b53af7\"><code>6c12469</code></a> Precedence parsing (<a href=\"https://redirect.github.com/rust-bakery/nom/issues/1362\">#1362</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/rust-bakery/nom/compare/7.1.3...8.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nom&package-manager=cargo&previous-version=7.1.3&new-version=8.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1226/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1216",
        "id": 2778526120,
        "node_id": "I_kwDOJN63t86lnPGo",
        "number": 1216,
        "title": "Unused expression checker improvements",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-01-09T18:39:21Z",
        "updated_at": "2025-01-09T18:39:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "At the time of writing there are two areas of improvement:\r\n* closure support \r\n* variable shadowing\r\n\r\nThese are listed in the module docs:\r\nhttps://github.com/vectordotdev/vrl/blob/main/src/compiler/unused_expression_checker.rs#L18\r\n\r\nRef: https://github.com/vectordotdev/vrl/issues/1214",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1216/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1200",
        "id": 2764547916,
        "node_id": "I_kwDOJN63t86kx6dM",
        "number": 1200,
        "title": "Parsing function for binary data (struct)",
        "user": {
            "login": "nomalord",
            "id": 105173207,
            "node_id": "U_kgDOBkTQ1w",
            "avatar_url": "https://avatars.githubusercontent.com/u/105173207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nomalord",
            "html_url": "https://github.com/nomalord",
            "followers_url": "https://api.github.com/users/nomalord/followers",
            "following_url": "https://api.github.com/users/nomalord/following{/other_user}",
            "gists_url": "https://api.github.com/users/nomalord/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nomalord/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nomalord/subscriptions",
            "organizations_url": "https://api.github.com/users/nomalord/orgs",
            "repos_url": "https://api.github.com/users/nomalord/repos",
            "events_url": "https://api.github.com/users/nomalord/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nomalord/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-12-31T17:04:32Z",
        "updated_at": "2025-01-31T15:26:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I would love it if a parser for binary data (basically struct parser) would be added\ud83d\ude01\n\nI personally used the struct library in python a lot so I'm most comfortable with it, and would love it if the implementation followed a similar syntax:\n\nhttps://docs.python.org/3/library/struct.html#format-characters\n\nSomething important to note is the ability to parse a struct of a fixed length and a repeating struct.\nThanks in advance \ud83d\ude01\ud83d\ude01\ud83d\ude01",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1200/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1193",
        "id": 2751551075,
        "node_id": "I_kwDOJN63t86kAVZj",
        "number": 1193,
        "title": "parse_aws_alb_log function error failed to get field `client_host`",
        "user": {
            "login": "mdesouky",
            "id": 21052421,
            "node_id": "MDQ6VXNlcjIxMDUyNDIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/21052421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdesouky",
            "html_url": "https://github.com/mdesouky",
            "followers_url": "https://api.github.com/users/mdesouky/followers",
            "following_url": "https://api.github.com/users/mdesouky/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdesouky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdesouky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdesouky/subscriptions",
            "organizations_url": "https://api.github.com/users/mdesouky/orgs",
            "repos_url": "https://api.github.com/users/mdesouky/repos",
            "events_url": "https://api.github.com/users/mdesouky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdesouky/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-12-19T22:36:17Z",
        "updated_at": "2024-12-20T01:06:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We're trying to ingest AWS alb logs from s3 buckets using the `parse_aws_alb_logs` function but on some logs we get this error message:\r\n```ERROR transform{component_kind=\"transform\" component_id=parse_alb_logs component_type=remap}: vector::internal_events::remap: Mapping failed with event. error=\"function call error for \\\"parse_aws_alb_log\\\" at (13:41): failed to get field `client_host`: Parsing Error: (\\\"net/nginx-staging-au-1/xxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxx xx.xx.xx.xx:xxxxx xx.xx.xxx.x:xxx 100 6 161 8144 - arn:aws:acm:ap-southeast-2:xxxxxxxxxxxx:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx - XXXXX-XXX-XXX000-XXX-XXX000 tlsv12 - xxxxx-xxxxxxx.xxxxxxxx.com - - - 2024-12-19T20:20:28\\\", TakeWhile1)\" error_type=\"conversion_failed\" stage=\"processing\" internal_log_rate_limit=true```\r\n\r\nI'm suspecting it's the `TakeWhile1` at the end but not sure\r\nWe've deployed vector as a helm chart\r\nVector version: `0.38.1`",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1193/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1192",
        "id": 2744252328,
        "node_id": "PR_kwDOJN63t86FdQDJ",
        "number": 1192,
        "title": "feat(stdlib): add fold function",
        "user": {
            "login": "jakedipity",
            "id": 29671917,
            "node_id": "MDQ6VXNlcjI5NjcxOTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29671917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakedipity",
            "html_url": "https://github.com/jakedipity",
            "followers_url": "https://api.github.com/users/jakedipity/followers",
            "following_url": "https://api.github.com/users/jakedipity/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakedipity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakedipity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakedipity/subscriptions",
            "organizations_url": "https://api.github.com/users/jakedipity/orgs",
            "repos_url": "https://api.github.com/users/jakedipity/repos",
            "events_url": "https://api.github.com/users/jakedipity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakedipity/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pront",
                "id": 1138161,
                "node_id": "MDQ6VXNlcjExMzgxNjE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pront",
                "html_url": "https://github.com/pront",
                "followers_url": "https://api.github.com/users/pront/followers",
                "following_url": "https://api.github.com/users/pront/following{/other_user}",
                "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
                "organizations_url": "https://api.github.com/users/pront/orgs",
                "repos_url": "https://api.github.com/users/pront/repos",
                "events_url": "https://api.github.com/users/pront/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pront/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-12-17T08:28:27Z",
        "updated_at": "2025-03-03T16:03:30Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1192",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1192",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1192.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1192.patch",
            "merged_at": null
        },
        "body": "<!--\r\n  Your PR title must conform to the conventional commit spec:\r\n  https://www.conventionalcommits.org/en/v1.0.0/\r\n\r\n  <type>(<scope>)!: <description>\r\n\r\n  * `type` = chore, enhancement, feat, fix, docs, revert\r\n  * `!` = OPTIONAL: signals a breaking change\r\n  * `scope` = Optional when `type` is \"chore\" or \"docs\"\r\n  * `description` = short description of the change\r\n\r\nExamples:\r\n\r\n  * enhancement(file source): Add `sort` option to sort discovered files\r\n  * feat(new source): Initial `statsd` source\r\n  * fix(file source): Fix a bug discovering new files\r\n  * chore(external docs): Clarify `batch_size` option\r\n-->\r\n\r\n## Summary\r\n\r\nAdds a new fold function to reduce objects and arrays into a single value based on a closure and initial value.\r\n\r\n<!-- Please provide a brief summary about what this PR does.\r\nThis should help the reviewers give feedback faster and with higher quality. -->\r\n\r\n## Change Type\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Non-functional (chore, refactoring, docs)\r\n- [ ] Performance\r\n\r\n## Is this a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## How did you test this PR?\r\n\r\nTest examples in the fold function definition, existing function testing macros don't support functions with closures.\r\n\r\n<!-- Please describe your testing plan here.\r\nProviding this information upfront will facilitate a smoother review process. -->\r\n\r\n## Does this PR include user facing changes?\r\n\r\n- [x] Yes. Please add a changelog fragment based on\r\n  our [guidelines](https://github.com/vectordotdev/vector/blob/master/changelog.d/README.md).\r\n- [ ] No. A maintainer will apply the \"no-changelog\" label to this PR.\r\n\r\n## Checklist\r\n\r\n- [x] Our [CONTRIBUTING.md](https://github.com/vectordotdev/vrl/blob/main/CONTRIBUTING.md) is a good starting place.\r\n- [ ] If this PR introduces changes to [LICENSE-3rdparty.csv](https://github.com/vectordotdev/vrl/blob/main/LICENSE-3rdparty.csv), please\r\n  run `dd-rust-license-tool write` and commit the changes. More details [here](https://crates.io/crates/dd-rust-license-tool).\r\n- [x] For new VRL functions, please also create a sibling PR in Vector to document the new function.\r\n\r\n<!-- Examples for the above:\r\n  PR adding new VRL function: https://github.com/vectordotdev/vrl/pull/993\r\n  PR adding documentation: https://github.com/vectordotdev/vector/pull/21142\r\n  \r\n  We are working towards improving this workflow.\r\n-->\r\n\r\n## References\r\n\r\n<!-- Please list any issues closed by this PR. -->\r\n\r\n<!--\r\n- Closes: <issue link>\r\n-->\r\n\r\n<!-- Any other issues or PRs relevant to this PR? Feel free to list them here. -->\r\ncloses: https://github.com/vectordotdev/vrl/issues/1139",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1192/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1189",
        "id": 2736859982,
        "node_id": "I_kwDOJN63t86jIStO",
        "number": 1189,
        "title": "Refactor compiler error codes",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-12-12T20:52:33Z",
        "updated_at": "2024-12-12T20:52:40Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### The Problem\r\n\r\nCurrently we assign arbitrary error codes in different modules e.g.\r\n\r\n```\r\n    fn code(&self) -> usize {\r\n        // ...\r\n        match self {\r\n            Undefined { .. } => 105,\r\n            WrongNumberOfArgs { .. } => 106,\r\n            UnknownKeyword { .. } => 108,\r\n            Compilation { .. } => 610,\r\n            // ...\r\n        }\r\n    }\r\n```\r\n\r\nThese codes are scattered across different files and there's nothing preventing us from reusing them. \r\n\r\n### Solution\r\nWe should aggregate these under a single enum in `src/compiler/errors`. \r\n\r\nWithout giving this too much thought (might revisit later), we can have static arrays of codes:\r\n```\r\nconst FUNCTION_CALL_ERROR_CODES: &[(FunctionCallError, usize)] = &[\r\n    (Undefined, 105),\r\n    (WrongNumberOfArgs, 106),\r\n    (UnknownKeyword, 108),\r\n    (Compilation, 610),\r\n    // ...\r\n];\r\n```\r\n\r\nand then use them like so:\r\n```\r\nimpl DiagnosticMessage for FunctionCallError {\r\n    fn code(&self) -> usize {\r\n        use FunctionCallError::*;\r\n\r\n        FUNCTION_CALL_ERROR_CODES\r\n            .iter()\r\n            .find(|&&(ref variant, _)| variant == self)\r\n            .map(|&(_, code)| code)\r\n            .expect(\"Error code not found for FunctionCallError variant\")\r\n    }\r\n}\r\n```\r\n\r\n### Docs\r\n\r\nIf we find duplicates and have to re-assign codes, we will also need to update:\r\nhttps://vector.dev/docs/reference/vrl/errors/#compile-time-errors\r\n\r\nChanging codes assigned to errors IMO isn't a breaking change. \r\n\r\n> To VRL users, if you use these codes, please comment in this ticket!\r\n\r\n### References\r\nIdeally these should be generated from code, see https://github.com/vectordotdev/vrl/issues/280.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1189/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1154",
        "id": 2706422259,
        "node_id": "I_kwDOJN63t86hULnz",
        "number": 1154,
        "title": "VRL error message for field assignment to non-object has a one-off typo in it",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-11-30T00:02:41Z",
        "updated_at": "2024-12-02T21:22:13Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Given the VRL code:\r\n```\r\nfoo = {}\r\nfoo.bar.baz = 12\r\n```\r\nthe error message suggestions are missing the leading `.`:\r\n```\r\nerror[E642]: parent path segment rejects this mutation\r\n  \u250c\u2500 :2:9\r\n  \u2502\r\n2 \u2502 foo.bar.baz = 12\r\n  \u2502 ------- ^^^ querying a field of a non-object type is unsupported\r\n  \u2502 \u2502\r\n  \u2502 this path resolves to a value of type undefined\r\n  \u2502\r\n  = try: change parent value to object, before assignment\r\n  =\r\n  =     foobar = {}\r\n  =     foobar.baz = 12\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1154/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1140",
        "id": 2692869066,
        "node_id": "I_kwDOJN63t86ggevK",
        "number": 1140,
        "title": "Introduce Community Repository for VRL scripts",
        "user": {
            "login": "sonnens",
            "id": 6529513,
            "node_id": "MDQ6VXNlcjY1Mjk1MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6529513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sonnens",
            "html_url": "https://github.com/sonnens",
            "followers_url": "https://api.github.com/users/sonnens/followers",
            "following_url": "https://api.github.com/users/sonnens/following{/other_user}",
            "gists_url": "https://api.github.com/users/sonnens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sonnens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sonnens/subscriptions",
            "organizations_url": "https://api.github.com/users/sonnens/orgs",
            "repos_url": "https://api.github.com/users/sonnens/repos",
            "events_url": "https://api.github.com/users/sonnens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sonnens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-11-26T02:39:31Z",
        "updated_at": "2025-02-24T14:47:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "there's a bunch of scripts scattered around the internet for coercing log data in to various useful formats ( OCSF , ECS , etc ) \r\n\r\nHere's one example : https://github.com/crowdalert/ocsf-vrl ( this one is from us )\r\n\r\nAnother: https://github.com/matanolabs/matano/tree/main/data/managed/log_sources\r\n\r\nIt would be great to have a central repository in the vectordotdev org to contribute these to so the community can use & share instead of duplicating work",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140/reactions",
            "total_count": 4,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1139",
        "id": 2691779409,
        "node_id": "I_kwDOJN63t86gcUtR",
        "number": 1139,
        "title": "Fold enumeration function",
        "user": {
            "login": "jakedipity",
            "id": 29671917,
            "node_id": "MDQ6VXNlcjI5NjcxOTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29671917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakedipity",
            "html_url": "https://github.com/jakedipity",
            "followers_url": "https://api.github.com/users/jakedipity/followers",
            "following_url": "https://api.github.com/users/jakedipity/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakedipity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakedipity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakedipity/subscriptions",
            "organizations_url": "https://api.github.com/users/jakedipity/orgs",
            "repos_url": "https://api.github.com/users/jakedipity/repos",
            "events_url": "https://api.github.com/users/jakedipity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakedipity/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-11-25T18:27:05Z",
        "updated_at": "2025-01-31T15:19:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Having a fold function like the rust's [Iterator::fold](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold) would be a nice-to-have for compacting objects array into a single value.\r\n\r\nConsider the contrived issue of trying to tally the total count of elements parsed out of a line\r\n```\r\ncount(25) count(3) count(42) count(1);\r\n```\r\n\r\nThis is currently possible but requires side effects to accomplish:\r\n```\r\nmatches = parse_regex_all!(.message, r'count\\((?<count>\\d+)\\)')\r\n.count = 0\r\nfor_each(matches) -> |_index, value| {\r\n  .count = .count + (to_int(value.count) ?? 0)\r\n}\r\n```\r\n\r\nA fold function provides a slightly more terse way to accomplish this.\r\n```\r\nmatches = parse_regex_all!(.message, r'count\\((?<count>\\d+)\\)')\r\n.count = fold(matches, 0) -> |accum, _index, value| {\r\n  accum + (to_int(value.count) ?? 0)\r\n}\r\n```\r\n\r\nI got ahead of myself and already started working on an [implementation](https://github.com/jakedipity/vrl/commit/e374bd27f7cbf5623cff7f42b48073ebdbf10f23). Assuming you think this function is useful to include in the stdlib, the only thing I'm unsure of now is how to type the accumulator value of the closure.\r\n\r\n* The simplest answer is to treat it as `Kind::ANY` but this always requires type assertions and handling within the function.\r\n* My current implementation treats it as the same type as `initial_value`, with some small changes to the internals.\r\n* The ideal seems to be a union between the `initial_value` and closure return type - although this probably requires further changes to the internals",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1139/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1119",
        "id": 2649689222,
        "node_id": "I_kwDOJN63t86d7wyG",
        "number": 1119,
        "title": "`FailedToApplyFilter` Error in `parse_grok()` improvements",
        "user": {
            "login": "neuronull",
            "id": 9162534,
            "node_id": "MDQ6VXNlcjkxNjI1MzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9162534?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neuronull",
            "html_url": "https://github.com/neuronull",
            "followers_url": "https://api.github.com/users/neuronull/followers",
            "following_url": "https://api.github.com/users/neuronull/following{/other_user}",
            "gists_url": "https://api.github.com/users/neuronull/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neuronull/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neuronull/subscriptions",
            "organizations_url": "https://api.github.com/users/neuronull/orgs",
            "repos_url": "https://api.github.com/users/neuronull/repos",
            "events_url": "https://api.github.com/users/neuronull/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neuronull/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-11-11T15:34:53Z",
        "updated_at": "2024-11-11T15:35:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "During #1113 , some changes were proposed to the Error types and it was observed that the FailedToApply filter covers a lot of distinct cases and also hides the underlying error.\r\n\r\nWe should consider:\r\n- surfacing the underlying error\r\n- expanding the catch all type to distinct variants that cover each scenario.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1105",
        "id": 2627432532,
        "node_id": "I_kwDOJN63t86cm3BU",
        "number": 1105,
        "title": "`del` does not compact objects when the requested path does not exist",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-10-31T17:29:33Z",
        "updated_at": "2024-10-31T17:30:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "When using `del` with `compact: true`, [the docs say](https://vector.dev/docs/reference/vrl/functions/#del):\r\n> After deletion, if `compact` is `true` and there is an empty object or array left, the empty object or array is also removed\r\n\r\nHowever, if the path that is given does not exist, no compaction of the parents is done.\r\n\r\nFor example, given the VRL program `del(.foo.bar, compact: true)` and an input object of `{\"foo\": {\"bar\":true}}`, the result is an empty object. However, with an input object of `{\"foo\": {}}`, the result is unchanged, even though the implication is that `\"foo\"` would be compacted.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1096",
        "id": 2614705806,
        "node_id": "I_kwDOJN63t86b2T6O",
        "number": 1096,
        "title": "Having a `match` expression syntax would be useful for inline lookups",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-10-25T17:24:44Z",
        "updated_at": "2024-10-25T17:24:45Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I am writing some event mapping code that does a number of what are effectively inline table lookups. For example:\r\n\r\n```\r\nactivity_name = if activity_id == 0 { \"Unknown\" } else\r\n                if activity_id == 1 { \"Open\" } else\r\n                if activity_id == 2 { \"Close\" } else\r\n                if activity_id == 3 { \"Reset\" } else\r\n                if activity_id == 4 { \"Fail\" } else\r\n                if activity_id == 5 { \"Refuse\" } else\r\n                if activity_id == 6 { \"Traffic\" } else\r\n                { \"Other\" }\r\n```\r\n\r\nI cannot use an object with `get` for this, as sometimes the key is string, integer, or `null`, but objects only have string keys. Also, doing a quick command-line microbenchmark seems to indicate that the above scaffolding is faster than using `get` when the average branch chosen is less than about 7-8 when using strings.\r\n\r\nIt would be handy to have some way of expressing the above as a series of cases, analogous to C's `switch` statement or Rust's `match` expression:\r\n\r\n```\r\nactivity_name = match activity_id {\r\n  0 => \"Unknown\",\r\n  1 => \"Open\",\r\n  2 => \"Close\",\r\n  3 => \"Reset\",\r\n  4 => \"Fail\",\r\n  5 => \"Refuse\",\r\n  6 => \"Traffic\",\r\n  else => \"Other\",\r\n}\r\n```\r\n\r\nObviously, in C you can't easily do string matches which would be highly desirable, and Rust's syntax is much more sophisticated than would likely be useful for VRL, so some balance would be desirable.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1095",
        "id": 2614492980,
        "node_id": "I_kwDOJN63t86b1f80",
        "number": 1095,
        "title": "JIT compilation",
        "user": {
            "login": "tontinton",
            "id": 19514176,
            "node_id": "MDQ6VXNlcjE5NTE0MTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19514176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tontinton",
            "html_url": "https://github.com/tontinton",
            "followers_url": "https://api.github.com/users/tontinton/followers",
            "following_url": "https://api.github.com/users/tontinton/following{/other_user}",
            "gists_url": "https://api.github.com/users/tontinton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tontinton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tontinton/subscriptions",
            "organizations_url": "https://api.github.com/users/tontinton/orgs",
            "repos_url": "https://api.github.com/users/tontinton/repos",
            "events_url": "https://api.github.com/users/tontinton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tontinton/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-10-25T15:52:32Z",
        "updated_at": "2024-10-28T14:23:00Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Wondering if there are plans to compile into machine code.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1088",
        "id": 2608821471,
        "node_id": "I_kwDOJN63t86bf3Tf",
        "number": 1088,
        "title": "parse_key_value parses first field when accept_standalone_key=false",
        "user": {
            "login": "pikeas",
            "id": 686573,
            "node_id": "MDQ6VXNlcjY4NjU3Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/686573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pikeas",
            "html_url": "https://github.com/pikeas",
            "followers_url": "https://api.github.com/users/pikeas/followers",
            "following_url": "https://api.github.com/users/pikeas/following{/other_user}",
            "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions",
            "organizations_url": "https://api.github.com/users/pikeas/orgs",
            "repos_url": "https://api.github.com/users/pikeas/repos",
            "events_url": "https://api.github.com/users/pikeas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pikeas/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-10-23T14:17:25Z",
        "updated_at": "2024-10-23T14:28:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\n```\r\nparse_key_value(\"aaa=bbb ccc\", accept_standalone_key: false)\r\n```\r\n\r\n\u2705 `could not parse whole line successfully`\r\n\r\n```\r\nparse_key_value(\"aaa bbb=ccc\", accept_standalone_key: false)\r\n```\r\n\r\n\u274c `{\"aaa bbb\": \"ccc\"}`\r\n\r\n```\r\nparse_key_value(\"aaa= bbb=ccc\", accept_standalone_key: false)\r\n```\r\n\r\n\u274c `{\"aaa\": \"bbb=ccc\"}`\r\n\r\nContext: unexpected output when using `parse_logfmt()`, which is a thin wrapper around `parse_key_value()`.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1088/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1084",
        "id": 2605820987,
        "node_id": "I_kwDOJN63t86bUaw7",
        "number": 1084,
        "title": "Whitespace required around `!=` operator",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-10-22T15:38:37Z",
        "updated_at": "2024-10-22T15:38:38Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The following:\r\n\r\n```\r\n .ddtags.kube_namespace==\"kong\" &&  .message!=\"[notice] 2383#0:4 [lua] init.lua:272:\"\r\n```\r\n\r\nGives the error:\r\n\r\n```\r\n\r\nerror[E203]: syntax error\r\n  \u250c\u2500 :1:38\r\n  \u2502\r\n1 \u2502  .ddtags.kube_namespace==\"kong\" &&  .message!=\"[notice] 2383#0:4 [lua] init.lua:272:\"\r\n  \u2502                                      ^^^^^^^\r\n  \u2502                                      \u2502\r\n  \u2502                                      unexpected syntax token: \"FunctionCall\"\r\n  \u2502                                      expected one of: \".\", \"[\", \"abort\", \"identifier\", \"path field\", \"return\", \"string literal\", RQuery\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\nAdding whitespace around the `!=` seems to fix it:\r\n\r\n```\r\n .ddtags.kube_namespace==\"kong\" &&  .message != \"[notice] 2383#0:4 [lua] init.lua:272:\"\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1084/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1075",
        "id": 2590897094,
        "node_id": "I_kwDOJN63t86abfPG",
        "number": 1075,
        "title": "Parsing functions for openvpn logs",
        "user": {
            "login": "manickamk",
            "id": 20439001,
            "node_id": "MDQ6VXNlcjIwNDM5MDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20439001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manickamk",
            "html_url": "https://github.com/manickamk",
            "followers_url": "https://api.github.com/users/manickamk/followers",
            "following_url": "https://api.github.com/users/manickamk/following{/other_user}",
            "gists_url": "https://api.github.com/users/manickamk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manickamk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manickamk/subscriptions",
            "organizations_url": "https://api.github.com/users/manickamk/orgs",
            "repos_url": "https://api.github.com/users/manickamk/repos",
            "events_url": "https://api.github.com/users/manickamk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manickamk/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-10-16T07:19:54Z",
        "updated_at": "2024-10-16T14:00:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I would like to get parse function for openvpn log ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1075/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1067",
        "id": 2579677335,
        "node_id": "I_kwDOJN63t86ZwsCX",
        "number": 1067,
        "title": "String literal cannot produce a single backslash `\\`",
        "user": {
            "login": "darinspivey",
            "id": 1874788,
            "node_id": "MDQ6VXNlcjE4NzQ3ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1874788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darinspivey",
            "html_url": "https://github.com/darinspivey",
            "followers_url": "https://api.github.com/users/darinspivey/followers",
            "following_url": "https://api.github.com/users/darinspivey/following{/other_user}",
            "gists_url": "https://api.github.com/users/darinspivey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darinspivey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darinspivey/subscriptions",
            "organizations_url": "https://api.github.com/users/darinspivey/orgs",
            "repos_url": "https://api.github.com/users/darinspivey/repos",
            "events_url": "https://api.github.com/users/darinspivey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darinspivey/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-10-10T19:37:37Z",
        "updated_at": "2024-10-10T19:48:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "## Problem\r\n\r\nAccording to [the documentation](https://vector.dev/docs/reference/vrl/expressions/#string-characteristics), a string literal of `s'\\\\'` should produce a single backslash, given that you have to escape backslash as a special character.  The result of this should be `\"\\\\\"`.  Something seems off in the lexer where the escaped backslash is being literally interpreted, and the output becomes `\"\\\\\\\\\"`.\r\n\r\n## Example\r\n\r\n`.nope = s'\\\\'` --> `\"\\\\\\\\\"`\r\n\r\n## Version\r\nTested on the latest version as of this writing, `version = \"0.19.0\"`\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1061",
        "id": 2561074460,
        "node_id": "I_kwDOJN63t86YpuUc",
        "number": 1061,
        "title": "Support for Additional Data Type Conversion in Grok Patterns",
        "user": {
            "login": "Anton0C",
            "id": 171003811,
            "node_id": "U_kgDOCjFPow",
            "avatar_url": "https://avatars.githubusercontent.com/u/171003811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anton0C",
            "html_url": "https://github.com/Anton0C",
            "followers_url": "https://api.github.com/users/Anton0C/followers",
            "following_url": "https://api.github.com/users/Anton0C/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anton0C/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anton0C/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anton0C/subscriptions",
            "organizations_url": "https://api.github.com/users/Anton0C/orgs",
            "repos_url": "https://api.github.com/users/Anton0C/repos",
            "events_url": "https://api.github.com/users/Anton0C/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anton0C/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-10-02T09:30:13Z",
        "updated_at": "2024-10-02T14:16:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Description:\r\nIt would be beneficial to extend Grok\u2019s current functionality by allowing users to specify the type of attribute value to extract. At present, all semantic values are stored as strings by default. However, users might want to convert the extracted values into different data types for further processing.\r\n\r\n### Proposed Enhancement:\r\nAdd support for additional data type conversions within Grok patterns. Users can specify the target data type by suffixing the semantic in the pattern, such as `%{NUMBER:num:int}` to convert the num semantic from a string to an integer.\r\n\r\nFor instance, this pattern:\r\n```\r\n%{NUMBER:Basic:float} %{NUMBER:Basic_long:long}\r\n```\r\nwould convert the Basic semantic to a float and Basic_long to a long integer \ud83c\udf1f ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1061/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1053",
        "id": 2550867695,
        "node_id": "PR_kwDOJN63t858z-T_",
        "number": 1053,
        "title": "enhancement(parse_grok): Add Datadog filter `url`",
        "user": {
            "login": "tessneau",
            "id": 25751624,
            "node_id": "MDQ6VXNlcjI1NzUxNjI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/25751624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tessneau",
            "html_url": "https://github.com/tessneau",
            "followers_url": "https://api.github.com/users/tessneau/followers",
            "following_url": "https://api.github.com/users/tessneau/following{/other_user}",
            "gists_url": "https://api.github.com/users/tessneau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tessneau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tessneau/subscriptions",
            "organizations_url": "https://api.github.com/users/tessneau/orgs",
            "repos_url": "https://api.github.com/users/tessneau/repos",
            "events_url": "https://api.github.com/users/tessneau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tessneau/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-26T15:03:09Z",
        "updated_at": "2024-09-26T15:03:09Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1053",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1053",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1053.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1053.patch",
            "merged_at": null
        },
        "body": null,
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1053/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1051",
        "id": 2547956938,
        "node_id": "PR_kwDOJN63t858p-Ic",
        "number": 1051,
        "title": "Add optional argument forcing syslog parcing to one of both RFCs",
        "user": {
            "login": "itkovian",
            "id": 196619,
            "node_id": "MDQ6VXNlcjE5NjYxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/196619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itkovian",
            "html_url": "https://github.com/itkovian",
            "followers_url": "https://api.github.com/users/itkovian/followers",
            "following_url": "https://api.github.com/users/itkovian/following{/other_user}",
            "gists_url": "https://api.github.com/users/itkovian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itkovian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itkovian/subscriptions",
            "organizations_url": "https://api.github.com/users/itkovian/orgs",
            "repos_url": "https://api.github.com/users/itkovian/repos",
            "events_url": "https://api.github.com/users/itkovian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itkovian/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-25T13:10:28Z",
        "updated_at": "2025-03-04T14:25:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1051",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1051",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1051.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1051.patch",
            "merged_at": null
        },
        "body": "Allows giving priority to the older RFC 3164 over the newer RFC 5424. Defaults to the original behaviour of using the newer format over the older.\r\n\r\nThis PR address #1043.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1051/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1043",
        "id": 2537078856,
        "node_id": "I_kwDOJN63t86XOMBI",
        "number": 1043,
        "title": "parse_syslog follows RFC 5425 even with empty structured data, lacking key-value pairs.",
        "user": {
            "login": "itkovian",
            "id": 196619,
            "node_id": "MDQ6VXNlcjE5NjYxOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/196619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/itkovian",
            "html_url": "https://github.com/itkovian",
            "followers_url": "https://api.github.com/users/itkovian/followers",
            "following_url": "https://api.github.com/users/itkovian/following{/other_user}",
            "gists_url": "https://api.github.com/users/itkovian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/itkovian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/itkovian/subscriptions",
            "organizations_url": "https://api.github.com/users/itkovian/orgs",
            "repos_url": "https://api.github.com/users/itkovian/repos",
            "events_url": "https://api.github.com/users/itkovian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/itkovian/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-19T18:24:12Z",
        "updated_at": "2024-09-25T17:10:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We're getting a bit of junk when processing syslog lines from several applications that implement the old syslog format (RFC 3164) but are actually putting something in `[]` without key-value pairs.\r\n\r\nI see in the tests that\r\n\r\n~~~~\r\n        empty_sd_element {\r\n            args: func_args![value: r#\"<13>1 2019-02-13T19:48:34+00:00 74794bfb6795 root 8449 - [empty] qwerty\"#],\r\n            want: Ok(btreemap!{\r\n                \"message\" => \"qwerty\",\r\n                \"appname\" => \"root\",\r\n                \"facility\" => \"user\",\r\n                \"hostname\" => \"74794bfb6795\",\r\n                \"message\" => \"qwerty\",\r\n                \"procid\" => 8449,\r\n                \"severity\" => \"notice\",\r\n                \"timestamp\" => chrono::Utc.ymd(2019, 2, 13).and_hms_milli(19, 48, 34, 0),\r\n                \"version\" => 1,\r\n                \"empty\" => btreemap! {},\r\n            }),\r\n            tdef: TypeDef::object(inner_kind()).fallible(),\r\n        }\r\n~~~~\r\n\r\nI am wondering if this is actually the expected behaviour. What would be the rationale behind having empty structured data? Is it not more logical that these kinds of messages actually follow RFC 3164 instead of RFC 5424?\r\n\r\nAn empty structured message with information that varies wildly (e.g., a job ID (from slurm), some GC time (from Kafka)) means that the data that is shipped off to e.g. Elasticsearch will pollute the fields, as the object key may be interpreted as a fieldname with dynamic mapping turned on. \r\n\r\nIs there a way to control this behaviour?\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1040",
        "id": 2533831075,
        "node_id": "I_kwDOJN63t86XBzGj",
        "number": 1040,
        "title": "Determining if redact has redacted",
        "user": {
            "login": "byronwolfman",
            "id": 11906832,
            "node_id": "MDQ6VXNlcjExOTA2ODMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11906832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byronwolfman",
            "html_url": "https://github.com/byronwolfman",
            "followers_url": "https://api.github.com/users/byronwolfman/followers",
            "following_url": "https://api.github.com/users/byronwolfman/following{/other_user}",
            "gists_url": "https://api.github.com/users/byronwolfman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byronwolfman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byronwolfman/subscriptions",
            "organizations_url": "https://api.github.com/users/byronwolfman/orgs",
            "repos_url": "https://api.github.com/users/byronwolfman/repos",
            "events_url": "https://api.github.com/users/byronwolfman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byronwolfman/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-18T13:58:31Z",
        "updated_at": "2024-09-23T17:09:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Our team has been playing around with `redact` and something we're trying to wrap our heads around is how to determine if `redact` has modified the input. This is straightforward when the input is a string, but we're not sure what to do with objects. We've tried abusing `assert_eq` but the docs recommend against using assertions outside of unit tests.\r\n\r\nAn \"easy\" way around this problem would be if `redact` could return two values:\r\n\r\n1. The `<string | object | array>` output as usual\r\n2. A `<boolean>` indicating whether or not the output has changed\r\n\r\nThe workaround I can see for now is something along the lines of\r\n\r\n```\r\nredacted = redact(., [r'\\d+'])\r\n\r\nif encode_json(.) != encode_json(redacted) {\r\n    . = redacted\r\n    .tags = [\"redacted:number\"]\r\n}\r\n```\r\n\r\nMy hesitation is that I'm not sure how expensive it is to marshal JSON twice on every log event, especially as we're operating at a decently large scale. On the other hand, Vector has made me into a Rust true believer, and maybe I'm over-thinking the performance implications.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1040/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1033",
        "id": 2516625519,
        "node_id": "I_kwDOJN63t86WAKhv",
        "number": 1033,
        "title": "Refactor error codes",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-10T14:22:49Z",
        "updated_at": "2024-09-10T14:23:13Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Introduce a central code provider to avoid code reuse. This might also help with other ideas such as https://github.com/vectordotdev/vector/issues/978.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1033/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1021",
        "id": 2510644645,
        "node_id": "I_kwDOJN63t86VpWWl",
        "number": 1021,
        "title": "idea: Optimize `Bytes` to `String` conversion in the `Value` type",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-09-06T15:05:02Z",
        "updated_at": "2024-09-06T15:05:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The VRL type `enum Value` uses `bytes::Bytes` as its store of string values, since the originating data may not in fact be valid UTF-8 strings. However, we frequently want to _use_ these bytes as a string, which leads to repeated calls to `String::from_utf8_lossy` on these bytes value. It may be preferable to avoid repeating this conversion by caching the result in some form in a new `Bytes` wrapper type.\r\n\r\nWhile discussing this idea, we came up with several possible ways of doing this:\r\n\r\n0. Add an additional `Value::String` variant for when we can prove the source data is a valid `String`. This, unfortunately, breaks all kinds of assumptions about the `Bytes` variant being the only place string data is stored, and so is most likely to lead to bugs.\r\n1. Make a new `Bytes` enum and parse the incoming bytes when it is created to determine if it is valid UTF-8 or not. Conversion from `str` values would, of course, not need parsing and could be stored directly. Replace calls to `String::from_utf8_lossy(&bytes)` with new member functions on that type that intelligently return without re-parsing the data.\r\n2. Make a new `Bytes` struct containing a `OnceLock` or `ArcSwap` sidecar to store the cached value of the conversion that will be initialized on demand instead of at creation time (except for when the source is statically known to be a valid string, of course). Replace calls as above. Note that we can't use a straight `Option` to cache the conversion as that would require any function using `Bytes` to borrow the value mutably which will require far too many code changes and may even be impossible where multiple immutable borrows are required.\r\n\r\nSince most values that will be stored in the `Bytes` variant will be valid UTF-8 strings, there was some debate over whether storing the resulting conversion in the case of invalid bytes would be worth the overhead of the additional data size. The `Bytes` is already the largest variant in the `Value` type and any addition to its size will grow memory requirements, and so must be considered carefully.\r\n\r\nIt would be good to spend some time profiling how often this conversion happens and benchmarking to ensure the benefits are not outweighed by the additional memory overheads. However, the string conversions are scattered throughout the code bases, making it very difficult to identify any of them as a hot spot. One thought for profiling would be to set up counters for how often `Bytes` are created and converted and then log these values before exit.\r\n\r\nWork on this idea has started in [the `bruceg/vrl-bytes-idea` branch](https://github.com/vectordotdev/vrl/tree/bruceg/vrl-bytes-idea). Expect this to be rebased frequently if any further progress is made.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/1020",
        "id": 2510340419,
        "node_id": "I_kwDOJN63t86VoMFD",
        "number": 1020,
        "title": "User-defined VRL modules",
        "user": {
            "login": "uralmetal",
            "id": 43093017,
            "node_id": "MDQ6VXNlcjQzMDkzMDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/43093017?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uralmetal",
            "html_url": "https://github.com/uralmetal",
            "followers_url": "https://api.github.com/users/uralmetal/followers",
            "following_url": "https://api.github.com/users/uralmetal/following{/other_user}",
            "gists_url": "https://api.github.com/users/uralmetal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uralmetal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uralmetal/subscriptions",
            "organizations_url": "https://api.github.com/users/uralmetal/orgs",
            "repos_url": "https://api.github.com/users/uralmetal/repos",
            "events_url": "https://api.github.com/users/uralmetal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uralmetal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-06T12:38:05Z",
        "updated_at": "2024-12-03T03:50:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This is an idea for improving reuse and code style VRL. I suggest to realize mechanism like python `import` or Jinja `include`. tthis is necessary to use user vrl code in different pipelines without using the Pipeline to Pipeline communication\r\nFor example:\r\n\r\nuser library\r\n```\r\nfunction set_http_status_code() {\r\n    http_status_code = parse_int!(.http_status)\r\n    del(.http_status)\r\n\r\n    if http_status_code >= 200 && http_status_code <= 299 {\r\n        .status = \"success\"\r\n    } else {\r\n        .status = \"error\"\r\n    }\r\n}\r\n```\r\n\r\npipeline code\r\n```\r\nfrom library import set_http_status_code\r\n\r\ndel(.foo)\r\n\r\n.timestamp = now()\r\n\r\nset_http_status_code()\r\n\r\n```\r\n ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/1010",
        "id": 2497913612,
        "node_id": "PR_kwDOJN63t856AnR_",
        "number": 1010,
        "title": "feat(stdlib): Add `parse_auditd` vrl function",
        "user": {
            "login": "jorgehermo9",
            "id": 23034060,
            "node_id": "MDQ6VXNlcjIzMDM0MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/23034060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgehermo9",
            "html_url": "https://github.com/jorgehermo9",
            "followers_url": "https://api.github.com/users/jorgehermo9/followers",
            "following_url": "https://api.github.com/users/jorgehermo9/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgehermo9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgehermo9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgehermo9/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgehermo9/orgs",
            "repos_url": "https://api.github.com/users/jorgehermo9/repos",
            "events_url": "https://api.github.com/users/jorgehermo9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgehermo9/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-08-30T18:06:27Z",
        "updated_at": "2025-04-17T19:23:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/1010",
            "html_url": "https://github.com/vectordotdev/vrl/pull/1010",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/1010.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/1010.patch",
            "merged_at": null
        },
        "body": "Closes #66\r\n\r\nI have a few things left (that I'm aware of):\r\n\r\n- [ ] Changelog\r\n- [ ] Documentation PR in Vector repo\r\n- [ ] Add this function to benchmarks\r\n- [ ] `linux-auditd-parse` crate should have a license compatible with Vector (see https://github.com/hillu/linux-audit-parser-rs/issues/1)\r\n- [ ] Better examples \r\n- [ ] Contribute to `linux-auditd-parse` for a few things that are left as TODOs\r\n\r\n\r\nI added a few TODOs in the code for some things I had doubts. I'll appreciate feedback on those. \r\n\r\nCurrently, logs are parsed into something similar to \r\n```json\r\n{\r\n    \"body\": {\r\n        \"auid\": 1000,\r\n        \"format\": \"enriched\",\r\n        \"kernel\": \"6.10.4-arch2-1\",\r\n        \"op\": \"start\",\r\n        \"pid\": 1240242,\r\n        \"res\": \"success\",\r\n        \"ses\": 2,\r\n        \"uid\": 0,\r\n        \"ver\": \"4.0.2\"\r\n    },\r\n    \"enrichment\": {\r\n        \"AUID\": \"vrl\",\r\n        \"UID\": \"root\"\r\n    },\r\n    \"sequence\": 6439,\r\n    \"timestamp\": \"2024-08-23T14:27:54.618Z\",\r\n    \"type\": \"DAEMON_START\"\r\n}\r\n```\r\nWhich is a bit more structured from what has been proposed in #66, but I'm open to any suggestion about this format",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/1010/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/964",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/964/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/964/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/964/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/964",
        "id": 2438926683,
        "node_id": "I_kwDOJN63t86RXxFb",
        "number": 964,
        "title": "Tree Sitter parser and nvim-treesitter support",
        "user": {
            "login": "belltoy",
            "id": 225309,
            "node_id": "MDQ6VXNlcjIyNTMwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/225309?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/belltoy",
            "html_url": "https://github.com/belltoy",
            "followers_url": "https://api.github.com/users/belltoy/followers",
            "following_url": "https://api.github.com/users/belltoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/belltoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/belltoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/belltoy/subscriptions",
            "organizations_url": "https://api.github.com/users/belltoy/orgs",
            "repos_url": "https://api.github.com/users/belltoy/repos",
            "events_url": "https://api.github.com/users/belltoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/belltoy/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            },
            {
                "id": 5321068312,
                "node_id": "LA_kwDOJN63t88AAAABPSkPGA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20dev",
                "name": "domain: dev",
                "color": "343639",
                "default": false,
                "description": "Anything related to the development environment"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-31T01:28:58Z",
        "updated_at": "2025-01-31T16:21:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm using and following vector for years. There is a missing part since the VRL was introduced till now, the syntax support in editors. I found some people were trying to build tree-sitter parse few years ago but not finished at the end.\r\n\r\nEarlier, I've written a simple [vim plugin](https://github.com/belltoy/vrl.vim) via the original vim syntax match to highlight VRL codes. But that's not good enough for the modern develop environment.\r\n\r\nRecently, I wrote a [VRL parser](https://github.com/belltoy/tree-sitter-vrl) and integrated it into [neovim](https://github.com/nvim-treesitter/nvim-treesitter).\r\n\r\nFinally, we have a better syntax highlighting and something more provided by the power of tree-sitter, such as **code folding**, **auto indentation**, **variable references**, and **code injections** in YAML/TOML files. Other editor than neovim could be easily adding VRL support via tree-sitter support.\r\n\r\nHope that helps.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/964/reactions",
            "total_count": 6,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/946",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/946/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/946/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/946/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/946",
        "id": 2417437123,
        "node_id": "I_kwDOJN63t86QFynD",
        "number": 946,
        "title": "parse_vector VRL function?",
        "user": {
            "login": "davidpellcb",
            "id": 92184793,
            "node_id": "U_kgDOBX6g2Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/92184793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidpellcb",
            "html_url": "https://github.com/davidpellcb",
            "followers_url": "https://api.github.com/users/davidpellcb/followers",
            "following_url": "https://api.github.com/users/davidpellcb/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidpellcb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidpellcb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidpellcb/subscriptions",
            "organizations_url": "https://api.github.com/users/davidpellcb/orgs",
            "repos_url": "https://api.github.com/users/davidpellcb/repos",
            "events_url": "https://api.github.com/users/davidpellcb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidpellcb/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-16T01:28:15Z",
        "updated_at": "2024-07-18T21:17:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm looking for a way to parse the logs emitted by Vector itself. AFAICT there isn't a `parse_*` function for this.\r\n\r\nExample log:\r\n```\r\n2024-07-11T17:56:52.024579Z  WARN vector::kubernetes::reflector: Watcher Stream received an error. Retrying. error=InitialListFailed(Api(ErrorResponse { status: \"Failure\", message: \"pods is forbidden: User \\\"system:serviceaccount:local-utility:vector-agent\\\" cannot list resource \\\"pods\\\" in API group \\\"\\\" at the cluster scope: RBAC: clusterrole.rbac.authorization.k8s.io \\\"vector-agent\\\" not found\", reason: \"Forbidden\", code: 403 })\r\n```\r\n\r\nIs there a recommended approach for parsing Vector's logs? Just `parse_grok` or `parse_regex`? Seems like this may be hard to do. Compare this other WARN log:\r\n\r\n```\r\n2024-07-16T02:01:33.917564Z  WARN sink{component_kind=\"sink\" component_id=proxy component_type=http}:request{request_id=1532040}: vector::sinks::util::retries: Retrying after response. reason=Http Status: 500 Internal Server Error internal_log_rate_limit=true\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/941",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/941/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/941/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/941/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/941",
        "id": 2409530829,
        "node_id": "I_kwDOJN63t86PnoXN",
        "number": 941,
        "title": "Extract iv from ciphertext",
        "user": {
            "login": "vaboston",
            "id": 16226034,
            "node_id": "MDQ6VXNlcjE2MjI2MDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16226034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vaboston",
            "html_url": "https://github.com/vaboston",
            "followers_url": "https://api.github.com/users/vaboston/followers",
            "following_url": "https://api.github.com/users/vaboston/following{/other_user}",
            "gists_url": "https://api.github.com/users/vaboston/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vaboston/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vaboston/subscriptions",
            "organizations_url": "https://api.github.com/users/vaboston/orgs",
            "repos_url": "https://api.github.com/users/vaboston/repos",
            "events_url": "https://api.github.com/users/vaboston/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vaboston/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-11T19:15:03Z",
        "updated_at": "2024-12-16T13:23:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Based on what the following Logstash plugin does:\r\nhttps://github.com/logstash-plugins/logstash-filter-cipher/blob/main/lib/logstash/filters/cipher.rb#L179\r\n```ruby\r\n  def do_decrypt(ciphertext_with_iv)\r\n    ciphertext_with_iv = Base64.strict_decode64(ciphertext_with_iv) if @base64 == true\r\n    encoded_iv = ciphertext_with_iv.byteslice(0..@iv_random_length)\r\n    ciphertext = ciphertext_with_iv.byteslice(@iv_random_length..-1)\r\n\r\n    with_cipher do |cipher|\r\n      cipher.iv = encoded_iv\r\n      plaintext = cipher.update(ciphertext) + cipher.final\r\n      plaintext.force_encoding(\"UTF-8\")\r\n      plaintext\r\n    end\r\n  end\r\n``` \r\n\r\nWould it be possible to add an option to specify the IV size, and do the extraction in the code? Currently, I am extracting via slices, but it would be much more convenient to have a dedicated option.\r\nThanks !\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/914",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/914/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/914/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/914/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/914",
        "id": 2378289140,
        "node_id": "I_kwDOJN63t86Nwc_0",
        "number": 914,
        "title": "Add caching option to get_env_var()",
        "user": {
            "login": "kaarolch",
            "id": 16565131,
            "node_id": "MDQ6VXNlcjE2NTY1MTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16565131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaarolch",
            "html_url": "https://github.com/kaarolch",
            "followers_url": "https://api.github.com/users/kaarolch/followers",
            "following_url": "https://api.github.com/users/kaarolch/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaarolch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaarolch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaarolch/subscriptions",
            "organizations_url": "https://api.github.com/users/kaarolch/orgs",
            "repos_url": "https://api.github.com/users/kaarolch/repos",
            "events_url": "https://api.github.com/users/kaarolch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaarolch/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-27T12:47:39Z",
        "updated_at": "2025-03-21T10:35:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nDuring metric processing, we started using Vector VRL's get_env_var() to pull environment variables and use them as feature flags. Unfortunately, we observed a significant spike in CPU and vector utilization when we used the following configuration:\r\n```\r\ntype: \"remap\"\r\ninputs:\r\n  - metrics_ingestion\r\nsource: |\r\n  cardinality_limit, err = get_env_var(\"CARDINALITY_LIMIT\")\r\n      if err == null {\r\n        .tags.cardinality_limit = cardinality_limit\r\n      } else {\r\n        .tags.cardinality_limit = \"false\"\r\n      }\r\n  metrics_processor, err = get_env_var(\"METRICS_PROCESSOR\")\r\n      if err == null {\r\n        .tags.metrics_processor = metrics_processor\r\n      } else {\r\n        .tags.metrics_processor = \"false\"\r\n      }\r\n  tags_filter, err = get_env_var(\"TAGS_FILTER\")\r\n      if err == null {\r\n        .tags.tags_filter = tags_filter\r\n      } else {\r\n        .tags.tags_filter = \"false\"\r\n      }\r\n```\r\nThis was applied to every metric. Now, we have decided to add this transformation only to the metrics that really need it (around 30% of all processed metrics), and we were able to save about 2-3 Kubernetes vCPUs (a drop from ~10 vCPUs to 7-8 vCPUs). Transform change was deployed around 13:15.\r\n![image](https://github.com/vectordotdev/vector/assets/16565131/04d69e9d-7aae-40cf-98cb-1519ed445b1d)\r\n\r\nThe problem started increasing when we added more than two environment variable checks.\r\n\r\n### Attempted Solutions\r\n\r\nAs I mentioned, we are currently trying to minimize the use of environment variable checks. Now, we are also experimenting with [data enrichment](https://vector.dev/guides/level-up/csv-enrichment-guide/). During container startup, we will render an enrichment table and add the data as extra tags during metric remapping.\r\n\r\n### Proposal\r\n\r\nIs there any chance to support environment variable caching with a TTL? When using remap to check for very static environment variables like ENV and VERSION, which do not change during runtime, we could set a TTL to avoid querying the system each time we set the same variable. [Reference](https://github.com/vectordotdev/vector/blob/476016b28890df879789c5408dfab5c4eb80c33e/build.rs#L16).\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n0.37.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/914/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/911",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/911/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/911/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/911/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/911",
        "id": 2374058971,
        "node_id": "I_kwDOJN63t86NgUPb",
        "number": 911,
        "title": "Support for type widening",
        "user": {
            "login": "DylanRJohnston",
            "id": 5708800,
            "node_id": "MDQ6VXNlcjU3MDg4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5708800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanRJohnston",
            "html_url": "https://github.com/DylanRJohnston",
            "followers_url": "https://api.github.com/users/DylanRJohnston/followers",
            "following_url": "https://api.github.com/users/DylanRJohnston/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanRJohnston/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanRJohnston/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanRJohnston/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanRJohnston/orgs",
            "repos_url": "https://api.github.com/users/DylanRJohnston/repos",
            "events_url": "https://api.github.com/users/DylanRJohnston/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanRJohnston/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-26T02:40:59Z",
        "updated_at": "2024-07-03T20:43:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hey all, I'm currently working on a transpiler from another data processing language to VRL. Unfortunately due to a NDA I can't go into more specifics but a common problem I've encountered is VRL's strict error handling based on type information that is not possible to know at transpilation time.\r\n\r\nFor example taking a common operator from most other languages\r\n\r\n```\r\nstatic_query += expr\r\n```\r\n\r\nthe equivalent VRL is\r\n\r\n```vrl\r\nstatic_query = static_query + expr\r\n```\r\n\r\nhowever this often fails to compile due to strict error handling around types, unless both `static_query` and `expr` are known to be integers, this expression can fail, and requires error handling\r\n\r\n```vrl\r\nstatic_query, err = static_query + expr\r\n```\r\n\r\nHowever, you can't just use this in the transpiler as often there are times when the types are well known enough for this expression to not fail, which then causes the compiler to fail as VRL does not allow superfluous error handling. Using type assertions does not work for the same reason.\r\n\r\nA workaround I've taken to using is using dead code paths to trick the compiler into widening the type and therefore allowing the superfluous type assertion e.g.\r\n\r\n```vrl\r\nif false {\r\n  static_query = null\r\n}\r\nstatic_query = int!(static_query) + expr\r\n```\r\n\r\nHowever `expr` can also sometimes have a known type, and sometimes not, if `expr` is another static query into the event, it doesn't have a known type, if expr is a literal, or a reference to a variable with a known type it does. Which requires in the most general case something like.\r\n\r\n\r\n```vrl\r\nstatic_query = int!({\r\n    tmp = static_query\r\n    if false {\r\n      tmp = null\r\n    }\r\n    tmp\r\n  }) + int!({\r\n    tmp = expr\r\n    if false {\r\n      tmp = null\r\n    }\r\n    tmp\r\n  })\r\n```\r\n\r\nAs you can see this becomes very noisy very quickly. I was wondering how you'd feel about the introduction of a type assertion that widens types, e.g. `any()` similar to `int()` or `string()`, it would be infailable as it's always safe to map any type to `any` and would help greatly in these cases where the transpiler is needing to output code without enough type information. e.g.\r\n\r\n```vrl\r\nstatic_query = int!(any(static_query)) + int!(any(expr))\r\n```\r\n\r\nWhat do you think?",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/901",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/901/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/901/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/901/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/901",
        "id": 2366883619,
        "node_id": "PR_kwDOJN63t85zNBQe",
        "number": 901,
        "title": "enhancement(codecs)!: Use DescriptorPool from ProtobufDeserializer",
        "user": {
            "login": "nb-mouse",
            "id": 172585518,
            "node_id": "U_kgDOCklyLg",
            "avatar_url": "https://avatars.githubusercontent.com/u/172585518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nb-mouse",
            "html_url": "https://github.com/nb-mouse",
            "followers_url": "https://api.github.com/users/nb-mouse/followers",
            "following_url": "https://api.github.com/users/nb-mouse/following{/other_user}",
            "gists_url": "https://api.github.com/users/nb-mouse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nb-mouse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nb-mouse/subscriptions",
            "organizations_url": "https://api.github.com/users/nb-mouse/orgs",
            "repos_url": "https://api.github.com/users/nb-mouse/repos",
            "events_url": "https://api.github.com/users/nb-mouse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nb-mouse/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-21T16:33:46Z",
        "updated_at": "2025-03-05T14:25:55Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/901",
            "html_url": "https://github.com/vectordotdev/vrl/pull/901",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/901.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/901.patch",
            "merged_at": null
        },
        "body": "This change allows to recursively handle `google.protobuf.Any` messages from a shared DescriptorPool loaded via `decoding.protobuf.desc_file` at best effort.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/900",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/900/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/900/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/900/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/900",
        "id": 2365094876,
        "node_id": "PR_kwDOJN63t85zG85R",
        "number": 900,
        "title": "Allow expressions as file_desc and message_type args",
        "user": {
            "login": "nb-mouse",
            "id": 172585518,
            "node_id": "U_kgDOCklyLg",
            "avatar_url": "https://avatars.githubusercontent.com/u/172585518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nb-mouse",
            "html_url": "https://github.com/nb-mouse",
            "followers_url": "https://api.github.com/users/nb-mouse/followers",
            "following_url": "https://api.github.com/users/nb-mouse/following{/other_user}",
            "gists_url": "https://api.github.com/users/nb-mouse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nb-mouse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nb-mouse/subscriptions",
            "organizations_url": "https://api.github.com/users/nb-mouse/orgs",
            "repos_url": "https://api.github.com/users/nb-mouse/repos",
            "events_url": "https://api.github.com/users/nb-mouse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nb-mouse/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-06-20T19:17:36Z",
        "updated_at": "2025-03-05T14:26:02Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/900",
            "html_url": "https://github.com/vectordotdev/vrl/pull/900",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/900.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/900.patch",
            "merged_at": null
        },
        "body": "This might be handy to dynamically load a protobuf description files and specifying message type based on payload being transformed.\r\n\r\nThis implementation allows to pass expressions instead of literal-only (constant) arguments.\r\n\r\nUse case:\r\n\r\n```toml\r\n[sources.protobuf]\r\ntype = \"stdin\"\r\ndecoding.codec = \"protobuf\"\r\ndecoding.protobuf.desc_file = \"event.desc\"\r\ndecoding.protobuf.message_type = \"EventLog\"\r\n\r\n[transforms.transform]\r\ntype = \"remap\"\r\ninputs = [\"protobuf\"]\r\nsource = \"\"\"\r\nmessage_type = replace(.event.proto_data.type_url, \"type.googleapis.com/\", \"\") ?? \"\"\r\nfile_desc = sha1(message_type) + \".desc\"\r\n. = {\r\n  \"id\": .event.id,\r\n  \"type\": message_type,\r\n  \"name\": parse_proto(.event.proto_data.value, file_desc, message_type)\r\n} ?? {}\r\n\"\"\"\r\n```\r\n\r\nPS. I have a follow-up for recursive handling Any messages when processing source configuration.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/880",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/880/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/880/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/880/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/880",
        "id": 2339834502,
        "node_id": "I_kwDOJN63t86LdwqG",
        "number": 880,
        "title": "Install release-plz to simplify release procedure",
        "user": {
            "login": "jdrouet",
            "id": 6329508,
            "node_id": "MDQ6VXNlcjYzMjk1MDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6329508?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdrouet",
            "html_url": "https://github.com/jdrouet",
            "followers_url": "https://api.github.com/users/jdrouet/followers",
            "following_url": "https://api.github.com/users/jdrouet/following{/other_user}",
            "gists_url": "https://api.github.com/users/jdrouet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jdrouet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jdrouet/subscriptions",
            "organizations_url": "https://api.github.com/users/jdrouet/orgs",
            "repos_url": "https://api.github.com/users/jdrouet/repos",
            "events_url": "https://api.github.com/users/jdrouet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jdrouet/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5322109271,
                "node_id": "LA_kwDOJN63t88AAAABPTjxVw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20ci",
                "name": "domain: ci",
                "color": "343639",
                "default": false,
                "description": "Anything related to Vector's CI environment"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-07T07:58:31Z",
        "updated_at": "2024-06-10T12:36:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "In order to simplify the release workflow, we should create a github action with [release-plz](https://github.com/MarcoIeni/release-plz).\r\nThis way, it will automagically open a PR to release with the adequate version.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/865",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/865/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/865/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/865/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/865",
        "id": 2331753474,
        "node_id": "I_kwDOJN63t86K-7wC",
        "number": 865,
        "title": "Add `encode_xml` function",
        "user": {
            "login": "akshadagrawal",
            "id": 52493253,
            "node_id": "MDQ6VXNlcjUyNDkzMjUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/52493253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshadagrawal",
            "html_url": "https://github.com/akshadagrawal",
            "followers_url": "https://api.github.com/users/akshadagrawal/followers",
            "following_url": "https://api.github.com/users/akshadagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshadagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshadagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshadagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/akshadagrawal/orgs",
            "repos_url": "https://api.github.com/users/akshadagrawal/repos",
            "events_url": "https://api.github.com/users/akshadagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshadagrawal/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-03T17:11:57Z",
        "updated_at": "2024-06-03T18:08:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": null,
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/854",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/854/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/854/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/854/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/854",
        "id": 2313925662,
        "node_id": "I_kwDOJN63t86J67Qe",
        "number": 854,
        "title": "Multiline expressions",
        "user": {
            "login": "hamishforbes",
            "id": 1282135,
            "node_id": "MDQ6VXNlcjEyODIxMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1282135?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hamishforbes",
            "html_url": "https://github.com/hamishforbes",
            "followers_url": "https://api.github.com/users/hamishforbes/followers",
            "following_url": "https://api.github.com/users/hamishforbes/following{/other_user}",
            "gists_url": "https://api.github.com/users/hamishforbes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hamishforbes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hamishforbes/subscriptions",
            "organizations_url": "https://api.github.com/users/hamishforbes/orgs",
            "repos_url": "https://api.github.com/users/hamishforbes/repos",
            "events_url": "https://api.github.com/users/hamishforbes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hamishforbes/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-23T22:01:42Z",
        "updated_at": "2024-05-24T14:12:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm just getting starting with Vector and I'm struggling with just laying out complex if statements over multiple lines.\r\n\r\nThis is I guess part doc request, I haven't found anything in the docs that describes how to split expressions over multiple lines\r\nand part feature request to improve the support here\r\n\r\nAs an example I have a vrl remap to drop noisy/useless log lines\r\none of the statements in that program is this, which works\r\n\r\n```\r\nif .kubernetes.pod_labels.\"common.k8s.elastic.co/type\" == \"elasticsearch\" &&\r\n  (contains(.message, \"cname_in_publish_address\") ||\r\n  contains(.message, \"Fielddata access on the \")) { abort }\r\n```\r\n\r\nbut this syntax feels a bit awkward and ideally I'd like to do something like this\r\n\r\n```\r\nif .kubernetes.pod_labels.\"common.k8s.elastic.co/type\" == \"elasticsearch\"\r\n  && (\r\n    contains(.message, \"cname_in_publish_address\")\r\n    || contains(.message, \"Fielddata access on the \")\r\n  )\r\n{ abort }\r\n```\r\n\r\nWhich is invalid but I don't really understand why.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/854/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/850",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/850/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/850/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/850/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/850",
        "id": 2307492021,
        "node_id": "I_kwDOJN63t86JiYi1",
        "number": 850,
        "title": "for_each doesn't affect type",
        "user": {
            "login": "Rajin9601",
            "id": 7630229,
            "node_id": "MDQ6VXNlcjc2MzAyMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7630229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rajin9601",
            "html_url": "https://github.com/Rajin9601",
            "followers_url": "https://api.github.com/users/Rajin9601/followers",
            "following_url": "https://api.github.com/users/Rajin9601/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rajin9601/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rajin9601/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rajin9601/subscriptions",
            "organizations_url": "https://api.github.com/users/Rajin9601/orgs",
            "repos_url": "https://api.github.com/users/Rajin9601/repos",
            "events_url": "https://api.github.com/users/Rajin9601/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rajin9601/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-21T07:02:50Z",
        "updated_at": "2024-05-21T13:29:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "```\r\nbody = del(.)\r\nfor_each([\"test1\"]) -> |key, path| {\r\n  ., err = set(., [\"new\", path], \"test1\")\r\n}\r\n.new.test2 = \"test2\"\r\n```\r\nthis VRL program fails in compiling because of type of `.new`. ([VRL Playground Link](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiYm9keSA9IGRlbCguKVxuZm9yX2VhY2goW1widGVzdDFcIl0pIC0%2BIHxrZXksIHBhdGh8IHtcbiAgLiwgZXJyID0gc2V0KC4sIFtcIm5ld1wiLCBwYXRoXSwgXCJ0ZXN0MVwiKVxufVxuLm5ldy50ZXN0MiA9IFwidGVzdDJcIiIsImV2ZW50Ijp7Im1lc3NhZ2UiOiJIZWxsbyBWUkwiLCJmb28iOiJkZWxldGUgbWUiLCJodHRwX3N0YXR1cyI6IjIwMCJ9LCJpc19qc29ubCI6ZmFsc2UsImVycm9yIjpudWxsfQ%3D%3D))\r\n\r\nError Log\r\n```\r\nerror[E642]: parent path segment rejects this mutation\r\n  \u250c\u2500 :5:6\r\n  \u2502\r\n5 \u2502 .new.test2 = \"test2\"\r\n  \u2502 ---- ^^^^^ querying a field of a non-object type is unsupported\r\n  \u2502 \u2502\r\n  \u2502 this path resolves to a value of type undefined\r\n  \u2502\r\n  = try: change parent value to object, before assignment\r\n  =\r\n  =     .new = {}\r\n  =     .new.test2 = \"test2\"\r\n  =\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\nHowever, if it's inside an if statement instead of for_each, this vrl program can be compiled.\r\n```\r\nbody = del(.)\r\nif is_boolean(body.message) {\r\n    ., err = set(., [\"new\", \"test1\"], \"test1\")\r\n}\r\n.new.test2 = \"test2\"\r\n```\r\n[VRL Playground link](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiYm9keSA9IGRlbCguKVxuaWYgaXNfYm9vbGVhbihib2R5Lm1lc3NhZ2UpIHtcbiAgICAuLCBlcnIgPSBzZXQoLiwgW1wibmV3XCIsIFwidGVzdDFcIl0sIFwidGVzdDFcIilcbn1cbi5uZXcudGVzdDIgPSBcInRlc3QyXCIiLCJldmVudCI6eyJtZXNzYWdlIjoiSGVsbG8gVlJMIiwiZm9vIjoiZGVsZXRlIG1lIiwiaHR0cF9zdGF0dXMiOiIyMDAifSwiaXNfanNvbmwiOmZhbHNlLCJlcnJvciI6bnVsbH0%3D)\r\n\r\nMy theory is that `.`'s type is not changed by the for_each statement, which looks like a bug.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/853",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/853/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/853/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/853/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/853",
        "id": 2311165853,
        "node_id": "I_kwDOJN63t86JwZed",
        "number": 853,
        "title": "parse_syslog function ignores timezone when rfc3164",
        "user": {
            "login": "timansky",
            "id": 1217278,
            "node_id": "MDQ6VXNlcjEyMTcyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timansky",
            "html_url": "https://github.com/timansky",
            "followers_url": "https://api.github.com/users/timansky/followers",
            "following_url": "https://api.github.com/users/timansky/following{/other_user}",
            "gists_url": "https://api.github.com/users/timansky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timansky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timansky/subscriptions",
            "organizations_url": "https://api.github.com/users/timansky/orgs",
            "repos_url": "https://api.github.com/users/timansky/repos",
            "events_url": "https://api.github.com/users/timansky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timansky/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-19T01:06:36Z",
        "updated_at": "2024-05-22T18:03:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n### Problem\r\n\r\nMost devices are sending logs in [rfc3164](https://blog.datalust.co/seq-input-syslog/#rfc3164) format, which does not contain timezone.\r\nWhen syslog message in rfc3164 format, parse_syslog function always using UTC [timezone](https://vector.dev/docs/reference/configuration/transforms/remap/#timezone) when parsing timestamp\r\n\r\n### Configuration\r\n\r\n```text\r\ntransform:\r\n  adapt_syslog:\r\n    type: remap\r\n    timezone: \"Asia/Almaty\" # Apply this timezone when parsing timestamp\r\n    inputs:\r\n    - syslog\r\n    source:  |\r\n      d = parse_timestamp!(\"May 19 2024 12:00:00\", format: \"%h %d %Y %T\")\r\n      log(\"debug1:\" + format_timestamp!(d, format: \"%+\"))\r\n\r\n      d = parse_syslog!(s'<180>May 19 2024 12:00:00 hostname message')\r\n      log(\"debug2:\" + format_timestamp!(d.timestamp, format: \"%+\"))\r\n```\r\n\r\n\r\n### Version\r\n\r\n 0.38.0\r\n\r\n### Debug Output\r\n\r\n```text\r\nINFO transform{component_kind=\"transform\" component_id=adapt_syslog component_type=remap}: vrl::stdlib::log: Internal log [debug1:2024-05-19T07:00:00+00:00] is being suppressed to avoid flooding.\r\n\r\nINFO transform{component_kind=\"transform\" component_id=adapt_syslog component_type=remap}: vrl::stdlib::log: Internal log [debug2:2024-05-19T12:00:00+00:00] is being suppressed to avoid flooding.\r\n```\r\n\r\n\r\n### Example Data\r\n\r\n<180>May 19 2024 12:12:12 hostname message\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/853/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/853/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/843",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/843/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/843/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/843/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/843",
        "id": 2303677494,
        "node_id": "I_kwDOJN63t86JT1Q2",
        "number": 843,
        "title": "Nonstandard klog / glog severity levels",
        "user": {
            "login": "srstrickland",
            "id": 11576127,
            "node_id": "MDQ6VXNlcjExNTc2MTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11576127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srstrickland",
            "html_url": "https://github.com/srstrickland",
            "followers_url": "https://api.github.com/users/srstrickland/followers",
            "following_url": "https://api.github.com/users/srstrickland/following{/other_user}",
            "gists_url": "https://api.github.com/users/srstrickland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srstrickland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srstrickland/subscriptions",
            "organizations_url": "https://api.github.com/users/srstrickland/orgs",
            "repos_url": "https://api.github.com/users/srstrickland/repos",
            "events_url": "https://api.github.com/users/srstrickland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srstrickland/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-17T23:16:17Z",
        "updated_at": "2024-05-20T18:16:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We have some applications which use klog or glog format with \"nonstandard\" log levels (generally common, but technically not part of either spec), namely \"D\" for debug and \"T\" for trace.  In my parsing code, I can apply VRL workarounds, but I'm wondering what the appetite would be for the 2-line change ([here](https://github.com/vectordotdev/vrl/blob/main/src/stdlib/parse_klog.rs#L16) and [here](https://github.com/vectordotdev/vrl/blob/main/src/stdlib/parse_glog.rs#L16)) to support parsing these?  I'm happy to submit a PR, but I realize it's a bit esoteric and perhaps I should just keep my VRL hack.\r\n\r\n```\r\nD0505 17:59:40.692994   28133 klog.go:70] hello from klog  # level = debug\r\nT0505 17:59:40.692994   28133 klog.go:70] hello from klog  # level = trace\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/830",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/830/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/830/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/830/events",
        "html_url": "https://github.com/vectordotdev/vrl/pull/830",
        "id": 2282499037,
        "node_id": "PR_kwDOJN63t85uuPOY",
        "number": 830,
        "title": "Fix `std::fmt::Display` for abort expressions",
        "user": {
            "login": "DylanRJohnston",
            "id": 5708800,
            "node_id": "MDQ6VXNlcjU3MDg4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5708800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanRJohnston",
            "html_url": "https://github.com/DylanRJohnston",
            "followers_url": "https://api.github.com/users/DylanRJohnston/followers",
            "following_url": "https://api.github.com/users/DylanRJohnston/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanRJohnston/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanRJohnston/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanRJohnston/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanRJohnston/orgs",
            "repos_url": "https://api.github.com/users/DylanRJohnston/repos",
            "events_url": "https://api.github.com/users/DylanRJohnston/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanRJohnston/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6019192772,
                "node_id": "LA_kwDOJN63t88AAAABZsWXxA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20awaiting%20author",
                "name": "meta: awaiting author",
                "color": "DBE0E9",
                "default": false,
                "description": "Pull requests that are awaiting their author."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-05-07T07:24:44Z",
        "updated_at": "2025-03-05T14:26:11Z",
        "closed_at": null,
        "author_association": "FIRST_TIME_CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/pulls/830",
            "html_url": "https://github.com/vectordotdev/vrl/pull/830",
            "diff_url": "https://github.com/vectordotdev/vrl/pull/830.diff",
            "patch_url": "https://github.com/vectordotdev/vrl/pull/830.patch",
            "merged_at": null
        },
        "body": "Fixes #829. I couldn't see any tests for this code, but a very simply one exists as I wrote in the issue. Let me know if you want that included and where it should live.\r\n\r\n```rs\r\n    #[test]\r\n    fn abort_display_isomorphism() {\r\n        let expression = r#\"abort \"error message\"\"#;\r\n\r\n        assert_eq!(\r\n            format!(\"{expression}\\n\"),\r\n            vrl::parser::parse(expression).unwrap().to_string()\r\n        )\r\n    }\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/829",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/829/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/829/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/829/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/829",
        "id": 2282471207,
        "node_id": "I_kwDOJN63t86IC78n",
        "number": 829,
        "title": "Abort expression formats incorrectly",
        "user": {
            "login": "DylanRJohnston",
            "id": 5708800,
            "node_id": "MDQ6VXNlcjU3MDg4MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5708800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanRJohnston",
            "html_url": "https://github.com/DylanRJohnston",
            "followers_url": "https://api.github.com/users/DylanRJohnston/followers",
            "following_url": "https://api.github.com/users/DylanRJohnston/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanRJohnston/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanRJohnston/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanRJohnston/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanRJohnston/orgs",
            "repos_url": "https://api.github.com/users/DylanRJohnston/repos",
            "events_url": "https://api.github.com/users/DylanRJohnston/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanRJohnston/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-07T07:13:05Z",
        "updated_at": "2024-05-07T07:15:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hey all,\r\n\r\nI'm currently working on a transpiler from another language into VRL. All other parts of the AST implement Display in a way that is valid syntactically to parse it again i.e. parse <-> display (formatting not withstanding). However the implementation of Display for `abort` incorrectly places a colon in its output.\r\n\r\nhttps://github.com/vectordotdev/vrl/blame/b6fd5ecf3e4d75ccc5a822dcebe8a0fe7d04ef78/src/parser/ast.rs#L1199\r\n\r\nThe following kind of test succeeds for all other expressions in VRL.\r\n\r\n```rs\r\n    #[test]\r\n    fn abort_isomorphism_failure() {\r\n        let expression = r#\"abort \"error message\"\"#;\r\n\r\n        assert_eq!(\r\n            format!(\"{expression}\\n\"),\r\n            vrl::parser::parse(expression).unwrap().to_string()\r\n        )\r\n    }\r\n```\r\n\r\nI don't know if this kind of isomorphism via `std::fmt::Display` is a guarantee the project is looking to provide, but beyond transpilers it's also very useful for pretty printers since printing from the parsed AST canonicalizes the formatting.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/823",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/823/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/823/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/823/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/823",
        "id": 2280904971,
        "node_id": "I_kwDOJN63t86H89kL",
        "number": 823,
        "title": "from_unix_timestamp float support",
        "user": {
            "login": "jpds",
            "id": 29158971,
            "node_id": "MDQ6VXNlcjI5MTU4OTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29158971?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpds",
            "html_url": "https://github.com/jpds",
            "followers_url": "https://api.github.com/users/jpds/followers",
            "following_url": "https://api.github.com/users/jpds/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpds/subscriptions",
            "organizations_url": "https://api.github.com/users/jpds/orgs",
            "repos_url": "https://api.github.com/users/jpds/repos",
            "events_url": "https://api.github.com/users/jpds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpds/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-05-06T09:38:04Z",
        "updated_at": "2024-05-06T13:37:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nCaddy logs timestamps as floats: `\"ts\":1714987958.264331` - however the `from_unix_timestamp` only takes integers.\n\n### Attempted Solutions\n\nI've worked around this by calling `to_int!(.ts)`, however it'd be nice to keep the sub-second accuracy for request order sorting.\n\n### Proposal\n\n_No response_\n\n### References\n\n_No response_\n\n### Version\n\n0.37.1",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/790",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/790/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/790/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/790/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/790",
        "id": 2235670598,
        "node_id": "I_kwDOJN63t86FQaBG",
        "number": 790,
        "title": "parse_timestamp Invalid timestamp error",
        "user": {
            "login": "DimDroll",
            "id": 20089177,
            "node_id": "MDQ6VXNlcjIwMDg5MTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20089177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DimDroll",
            "html_url": "https://github.com/DimDroll",
            "followers_url": "https://api.github.com/users/DimDroll/followers",
            "following_url": "https://api.github.com/users/DimDroll/following{/other_user}",
            "gists_url": "https://api.github.com/users/DimDroll/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DimDroll/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DimDroll/subscriptions",
            "organizations_url": "https://api.github.com/users/DimDroll/orgs",
            "repos_url": "https://api.github.com/users/DimDroll/repos",
            "events_url": "https://api.github.com/users/DimDroll/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DimDroll/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-04-10T02:21:27Z",
        "updated_at": "2024-04-14T15:22:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nHello,\r\n\r\nWe have a case when we need to parse nanoseconds timestamp like 1712312062676735437 using parse_timestamp function:\r\n`.2_timestamp = parse_timestamp!(\"1712312062676735437\", \"%s%f\")`\r\nWhich gives error:\r\n```\r\nerror[E000]: function call error for \"parse_timestamp\" at (152:199): Invalid timestamp \"1712312062676735437\": premature end of input\r\n  \u250c\u2500 :5:16\r\n  \u2502\r\n5 \u2502 .2_timestamp = parse_timestamp!(\"1712312062676735437\", \"%s%f\")\r\n  \u2502                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Invalid timestamp \"1712312062676735437\": premature end of input\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\nThe workaround is to add space in between timestamp and nanoseconds part:\r\n`.4_timestamp = parse_timestamp!(\"1712312062 676735437\", \"%s %f\")`\r\n\r\nFollowing is VRL code that can be executed in [playground](https://playground.vrl.dev/):\r\n```\r\nVector Version:\t5ffb1a55\r\nVRL Version:\t0.13.0\r\n```\r\nI assume same happens during real-time run.\r\n\r\n```\r\n# does not parse nanoseconds timestamp\r\n# error: premature end of input\r\n#.1_timestamp = parse_timestamp!(\"1712312062676735437\", \"%s%9f\")\r\n#.2_timestamp = parse_timestamp!(\"1712312062676735437\", \"%s%f\")\r\n\r\n# does parse\r\n# by adding space in-between\r\n# unix timestamp and nanoseconds\r\n.3_timestamp = parse_timestamp!(\"1712312062 676735437\", \"%s %9f\")\r\n.4_timestamp = parse_timestamp!(\"1712312062 676735437\", \"%s %f\")\r\n\r\n# workaround\r\nfull_timestamp = \"1712312062676735437\"\r\ntimestamp_slice = slice!(full_timestamp, 0, 10)\r\nnanoseconds_slice = slice!(full_timestamp, 10)\r\n.5_timestamp = parse_timestamp!(timestamp_slice + \" \" + nanoseconds_slice, \"%s %f\")\r\n\r\n# another obeservation\r\n# following results in strange concatenation error\r\n# error: trailing input\r\n#.6_timestamp = parse_timestamp!(\"1712312062\" + \" \", \"%s \")\r\n# but following works fine:\r\n#.7_timestamp = parse_timestamp!(\"1712312062\" + \" A\", \"%s A\")\r\n\r\n# dirty workaround\r\n#full_timestamp = \"1712312062676735437\"\r\n#timestamp_slice = slice!(full_timestamp, 0, 10)\r\n#nanoseconds_slice = slice!(full_timestamp, 10)\r\n# parse timestamp and add nanoseconds post-factum\r\n#.8_timestamp = parse_timestamp!(timestamp_slice, \"%s\")\r\n#.8_timestamp = replace(to_string(.9_timestamp), \"Z\", \".\" + nanoseconds_slice + \"Z\")\r\n```\r\n\r\n\n\n### Configuration\n\n_No response_\n\n### Version\n\nVRL Version:\t0.13.0\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/893",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/893/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/893/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/893/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/893",
        "id": 2352105694,
        "node_id": "I_kwDOJN63t86MMkje",
        "number": 893,
        "title": "Add `parse_iana_protocol_number` and `parse_iana_protocol` function to VRL functions.",
        "user": {
            "login": "AlexYangYu",
            "id": 1251300,
            "node_id": "MDQ6VXNlcjEyNTEzMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1251300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexYangYu",
            "html_url": "https://github.com/AlexYangYu",
            "followers_url": "https://api.github.com/users/AlexYangYu/followers",
            "following_url": "https://api.github.com/users/AlexYangYu/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexYangYu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexYangYu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexYangYu/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexYangYu/orgs",
            "repos_url": "https://api.github.com/users/AlexYangYu/repos",
            "events_url": "https://api.github.com/users/AlexYangYu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexYangYu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-04-06T03:16:26Z",
        "updated_at": "2024-06-13T21:35:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nIn scenarios that parsing network device logs, it is necessary to translate the protocol number in the logs into protocol, a conversion that should be done in accordance with the [IANA Protocol Number ](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) standards.\r\n\r\nFor example: \r\n- `1` - > ` ICMP`\r\n- `6` -> `TCP`\n\n### Attempted Solutions\n\nCurrently, I only have two choice:\r\n- handle number and protocol mapping at app later;\r\n- wirte long sentence of `if` and `else` in remap transform, because I can not found vrl support map struct.\n\n### Proposal\n\nadd function in vrl for parsing the protocol num and protocol\n\n### References\n\n_No response_\n\n### Version\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/893/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/784",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/784/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/784/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/784/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/784",
        "id": 2226953692,
        "node_id": "I_kwDOJN63t86EvJ3c",
        "number": 784,
        "title": "parse_cef where extension value contains an unescaped \"=\" character",
        "user": {
            "login": "aacgood",
            "id": 28122532,
            "node_id": "MDQ6VXNlcjI4MTIyNTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/28122532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aacgood",
            "html_url": "https://github.com/aacgood",
            "followers_url": "https://api.github.com/users/aacgood/followers",
            "following_url": "https://api.github.com/users/aacgood/following{/other_user}",
            "gists_url": "https://api.github.com/users/aacgood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aacgood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aacgood/subscriptions",
            "organizations_url": "https://api.github.com/users/aacgood/orgs",
            "repos_url": "https://api.github.com/users/aacgood/repos",
            "events_url": "https://api.github.com/users/aacgood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aacgood/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-04-05T04:00:15Z",
        "updated_at": "2024-04-05T13:02:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hi,\r\n\r\nI am trying to parse the following using the `parse_cef` function however it returns error[E000]: function call error for \"parse_cef\" at (15:35): Could not parse whole line successfully\r\n\r\nNote: I've stripped and anon'd the log but the offending part seems to be is in cs67 as it contains a url with an unescaped equals character.\r\n\r\n```\r\n{\"message\":\"<114>2024-01-01T00:00:00.000Z MYHOST01 CEF:0|Vendor|Product|2024.7.0.2|DETECT_AND_RESPOND|ENDPOINT|9|cat=\\\"Endpoint\\\" cs2Label=incidentID cs2=00000000-0000-0000-0000-000000000000\\\" cs67Label=callbackURL cs67=\\\"https://my.domain.goes.here.com/#/incidents?incidentID=000000000-0000-0000-0000-000000000000\\\" cs68Label=tenantID cs68=INTERNAL \"}\r\n```\r\n\r\nWhen I manually update `incidentId=` to be `incidentId\\\\=` then the parse_cef function works as expected, Whilst the value for cs67 is contained within quotes, it appears to be a bug where it doesnt parse.\r\n\r\nAs a side note, using the parse_key_value() function is able to extract the unescaped value correctly.  This was tested using Vector 0.36.1 and can be replicated in [VRL playground](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiIyBOYXRpdmUgZnVuY3Rpb24gZmFpbHNcbi50ZXN0MSA9IHBhcnNlX2NlZiEoLm1lc3NhZ2UpXG5cblxuXG5cblxuIyByZXBsYWNpbmcgPSB3aXRoIFxcXFw9IHdvcmtzXG5tYXRjaGVyID0gbWF0Y2goLm1lc3NhZ2UsIHInaW5jaWRlbnRJRD0nKSA%2FPyBmYWxzZVxuXG4jaWYgbWF0Y2hlciB7XG4jICAubWVzc2FnZSwgZXJyID0gcmVwbGFjZSgubWVzc2FnZSwgXCJpbmNpZGVudElEPVwiLCBcImluY2lkZW50SURcXFxcPVwiKVxuI31cbiMudGVzdDIgPSBwYXJzZV9jZWYhKC5tZXNzYWdlKVxuXG5cblxuXG5cblxuIyBUaGUgcGFyc2Vfa2V5X3ZhbHVlIGZ1bmN0aW9uIGFsc28gd29ya3NcbiMudGVzdDMgPSBwYXJzZV9rZXlfdmFsdWUhKC5tZXNzYWdlKSIsImV2ZW50Ijp7Im1lc3NhZ2UiOiI8MTE0PjIwMjQtMDEtMDFUMDA6MDA6MDAuMDAwWiBNWUhPU1QwMSBDRUY6MHxWZW5kb3J8UHJvZHVjdHwyMDI0LjcuMC4yfERFVEVDVF9BTkRfUkVTUE9ORHxFTkRQT0lOVHw5fGNhdD1cIkVuZHBvaW50XCIgY3MyTGFiZWw9aW5jaWRlbnRJRCBjczI9MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwXCIgY3M2N0xhYmVsPWNhbGxiYWNrVVJMIGNzNjc9XCJodHRwczovL215LmRvbWFpbi5nb2VzLmhlcmUuY29tLyMvaW5jaWRlbnRzP2luY2lkZW50SUQ9MDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMFwiIGNzNjhMYWJlbD10ZW5hbnRJRCBjczY4PUlOVEVSTkFMICJ9LCJpc19qc29ubCI6ZmFsc2UsImVycm9yIjpudWxsfQ%3D%3D)\r\n\r\nCheers\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/784/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/781",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/781/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/781/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/781/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/781",
        "id": 2219751345,
        "node_id": "I_kwDOJN63t86ETrex",
        "number": 781,
        "title": "parse_cef() bug",
        "user": {
            "login": "manickamk",
            "id": 20439001,
            "node_id": "MDQ6VXNlcjIwNDM5MDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/20439001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manickamk",
            "html_url": "https://github.com/manickamk",
            "followers_url": "https://api.github.com/users/manickamk/followers",
            "following_url": "https://api.github.com/users/manickamk/following{/other_user}",
            "gists_url": "https://api.github.com/users/manickamk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manickamk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manickamk/subscriptions",
            "organizations_url": "https://api.github.com/users/manickamk/orgs",
            "repos_url": "https://api.github.com/users/manickamk/repos",
            "events_url": "https://api.github.com/users/manickamk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manickamk/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2024-04-02T07:20:51Z",
        "updated_at": "2024-04-08T16:44:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hello team,\r\n\r\nWe have identified the bug on parse_cef() function below is the sample log if we remove the space the function is working properly \r\n![image](https://github.com/vectordotdev/vrl/assets/20439001/ae006372-4a63-4530-bac5-1da1b44703cc)\r\n\r\nPlease look the below url VRL playground \r\n\r\nhttps://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiLiA9IHBhcnNlX2NlZiEoLm1lc3NhZ2UpIiwiZXZlbnQiOnsibWVzc2FnZSI6IkNFRjowfEluY2Fwc3VsYXxTSUVNaW50ZWdyYXRpb258MXwxfElsbGVnYWwgUmVzb3VyY2UgQWNjZXNzfDN8IGZpbGVJZD0xODQwMDAwMTAwMDQzNzMxNjMgc291cmNlU2VydmljZU5hbWU9YXNzZXRzLnNiLmRhbnNrZXNwaWwuZGsgc2l0ZWlkPTc1MzQ0OTYgc3VpZD0yMDY2NjEyIHJlcXVlc3RDbGllbnRBcHBsaWNhdGlvbj1Nb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTkuMC4zMDcxLjExNSBTYWZhcmkvNTM3LjM2IGRldmljZUZhY2lsaXR5PWZyYSBjczI9ZmFsc2UgY3MyTGFiZWw9SmF2YXNjcmlwdCBTdXBwb3J0IGNzMz1mYWxzZSBjczNMYWJlbD1DTyBTdXBwb3J0IGNzMT1OQSBjczFMYWJlbD1DYXAgU3VwcG9ydCBjczQ9YTkzZDVjODktODZiMC00NzdiLTk4OGItYTJlMzhhYmU0N2Y4IGNzNExhYmVsPVZJRCBjczU9OWVjZmFlY2Q1NjM3ODk1YWExMDA2MDRjMWVlZGZmMGY4NDE3NzExYTNmZmI2OGQzZTI0NzdlZDI4MzMxOWNjYmQ0YWU0NzhlNmU5MTI1NjJlNmY1YTllMGNmZGRmMzFiZGE5OGM1NWJmY2Q2YWFlNzExYzBhYTI0YzMwYTFhOTQ4MmE2NGM2YTBkY2MxZTk0NjY4NjI1NDNmYzA4YzQyMDJlZmZmZTA0MmU4MTdjNTMzYmE2YzQ5YmYxNWI4M2M3MTExNDI1NDVjZmRlNzgwYjFjZjQ4MzM4YjJkM2Q3YjA3ODU2YWRhNThkY2E5NWI2YjllN2Q2NWI5OTFjYjE4MiBjczVMYWJlbD1jbGFwcHNpZyBkcHJvYz1Ccm93c2VyIGNzNj1DaHJvbWUgY3M2TGFiZWw9Y2xhcHAgY2NvZGU9QVQgY2ljb2RlPVZpZW5uYSBjczc9NDguMjA0OSBjczdMYWJlbD1sYXRpdHVkZSBjczg9MTYuMzY2MiBjczhMYWJlbD1sb25naXR1ZGUgQ3VzdG9tZXI9RGFuc2tlIFNwaWwgc3RhcnQ9MTcxMjA0MTY2MzUxNiByZXF1ZXN0PWFzc2V0cy5zYi5kYW5za2VzcGlsLmRrL2V0Yy9wcm9maWxlIHJlcXVlc3RNZXRob2Q9R0VUIGFwcD1IVFRQIGFjdD1SRVFfQkxPQ0tFRF9DT09LSUVMRVNTX1NFU1NJT04gZGV2aWNlRXh0ZXJuYWxJZD03MzExMTQyNDUxNDEzMDY1IGNwdD0zODg0NiBzcmM9ODEuMTgxLjU2LjEyMyBlbmQ9MTcxMjA0MTY2MzUxNyBmaWxlVHlwZT0zMDcwNDEgZmlsZVBlcm1pc3Npb249MCBjczk9IGNzOUxhYmVsPVJ1bGUgbmFtZSJ9LCJpc19qc29ubCI6ZmFsc2UsImVycm9yIjpudWxsfQ%3D%3D\r\n\r\nPlease advise how to fix it ?",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/777",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/777/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/777/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/777/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/777",
        "id": 2216146052,
        "node_id": "I_kwDOJN63t86EF7SE",
        "number": 777,
        "title": "Parse/Encode logfmt is not idempotent when values have double quotes",
        "user": {
            "login": "srstrickland",
            "id": 11576127,
            "node_id": "MDQ6VXNlcjExNTc2MTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11576127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srstrickland",
            "html_url": "https://github.com/srstrickland",
            "followers_url": "https://api.github.com/users/srstrickland/followers",
            "following_url": "https://api.github.com/users/srstrickland/following{/other_user}",
            "gists_url": "https://api.github.com/users/srstrickland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/srstrickland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/srstrickland/subscriptions",
            "organizations_url": "https://api.github.com/users/srstrickland/orgs",
            "repos_url": "https://api.github.com/users/srstrickland/repos",
            "events_url": "https://api.github.com/users/srstrickland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/srstrickland/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-03-30T01:57:46Z",
        "updated_at": "2024-08-09T18:45:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "In general, any encode/decode function pairs should be idempotent; that is, this should always be true:\r\n\r\n```\r\nx == decode(encode(x))\r\n```\r\n\r\nIt appears to not be the case with `encode_logfmt` and `parse_logfmt`, as [demonstrated here](https://playground.vrl.dev/?state=eyJwcm9ncmFtIjoiLm9iai5rZXkgPSBzJ3RoaXMgaGFzIGEgXCIgcXVvdGUnXG4ucmVzdWx0ID0gcGFyc2VfbG9nZm10IShlbmNvZGVfbG9nZm10KC5vYmopKSIsImV2ZW50Ijp7fSwiaXNfanNvbmwiOmZhbHNlLCJlcnJvciI6bnVsbH0%3D), where `result.key` has additional escape characters.\r\n\r\nTaken to the extreme:\r\n\r\n```\r\n.obj.key = s'this has a \" quote'\r\nparse_logfmt!(encode_logfmt(parse_logfmt!(encode_logfmt(parse_logfmt!(encode_logfmt(parse_logfmt!(encode_logfmt(parse_logfmt!(encode_logfmt(.obj))))))))))\r\n```\r\n\r\nyields:\r\n\r\n```\r\n{ \"key\": \"this has a \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" quote\" }\r\n```\r\n\r\nThis isn't really causing me any headaches, and the fact that it hasn't been raised yet probably indicates the same for other folks, just thought it was worth bringing up, as I stumbled on it today.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/777/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/777/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/771",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/771/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/771/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/771/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/771",
        "id": 2211214197,
        "node_id": "I_kwDOJN63t86DzHN1",
        "number": 771,
        "title": "[feature] tag parse_groks with the pattern that matched",
        "user": {
            "login": "ipsi",
            "id": 667984,
            "node_id": "MDQ6VXNlcjY2Nzk4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/667984?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ipsi",
            "html_url": "https://github.com/ipsi",
            "followers_url": "https://api.github.com/users/ipsi/followers",
            "following_url": "https://api.github.com/users/ipsi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ipsi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ipsi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ipsi/subscriptions",
            "organizations_url": "https://api.github.com/users/ipsi/orgs",
            "repos_url": "https://api.github.com/users/ipsi/repos",
            "events_url": "https://api.github.com/users/ipsi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ipsi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-03-27T16:12:26Z",
        "updated_at": "2024-05-27T12:36:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Per the [discussion on the Vector repo](https://github.com/vectordotdev/vector/discussions/20174), I would like it if VRL would tag the matching pattern, so that it's possible to, for example, route to different transformers or sinks based on which pattern was matched.\r\n\r\nThis is particularly relevant when hosting third-party software on Docker, for example, where you get might application logs mixed in with Apache Access & Error logs, and need to use something like Grok to detect the type and send to a different destination, or do post-processing on, for example.\r\n\r\nI'm not sure what form this would take. For example, would a configuration like this:\r\n\r\n```\r\nparse_groks!(\r\n\t\"2020-10-02T23:22:12.223222Z info Hello world\",\r\n\tpatterns: [\r\n\t\t\"%{common_prefix} %{_status} %{_message}\",\r\n\t\t\"%{common_prefix} %{_message}\",\r\n\t],\r\n\taliases: {\r\n\t\t\"common_prefix\": \"%{_timestamp} %{_loglevel}\",\r\n\t\t\"_timestamp\": \"%{TIMESTAMP_ISO8601:timestamp}\",\r\n\t\t\"_loglevel\": \"%{LOGLEVEL:level}\",\r\n\t\t\"_status\": \"%{POSINT:status}\",\r\n\t\t\"_message\": \"%{GREEDYDATA:message}\"\r\n\t},\r\n        tag_field: \"grok_pattern\"\r\n)\r\n```\r\n\r\nAdd the field `grok_pattern=%{common_prefix} %{_status} %{_message}` to the output, or `grok_pattern=0`, or would it be better to allow `patterns` to accept an object of named patterns, like so:\r\n\r\n```\r\nparse_groks!(\r\n\t\"2020-10-02T23:22:12.223222Z info Hello world\",\r\n\tpatterns: {\r\n\t\t\"status_pattern\": \"%{common_prefix} %{_status} %{_message}\",\r\n\t\t\"simple_pattern\": \"%{common_prefix} %{_message}\",\r\n\t},\r\n\taliases: {\r\n\t\t\"common_prefix\": \"%{_timestamp} %{_loglevel}\",\r\n\t\t\"_timestamp\": \"%{TIMESTAMP_ISO8601:timestamp}\",\r\n\t\t\"_loglevel\": \"%{LOGLEVEL:level}\",\r\n\t\t\"_status\": \"%{POSINT:status}\",\r\n\t\t\"_message\": \"%{GREEDYDATA:message}\"\r\n\t}\r\n)\r\n```\r\n\r\nAnd (assuming VRL supports passing arrays OR objects like that), the output would automatically include `grok_pattern=status_pattern\" if it's an object.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/771/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/771/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/757",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/757/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/757/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/757/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/757",
        "id": 2198245398,
        "node_id": "I_kwDOJN63t86DBpAW",
        "number": 757,
        "title": "[feature enhancement] Additional merge strategies",
        "user": {
            "login": "prein",
            "id": 835151,
            "node_id": "MDQ6VXNlcjgzNTE1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/835151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prein",
            "html_url": "https://github.com/prein",
            "followers_url": "https://api.github.com/users/prein/followers",
            "following_url": "https://api.github.com/users/prein/following{/other_user}",
            "gists_url": "https://api.github.com/users/prein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prein/subscriptions",
            "organizations_url": "https://api.github.com/users/prein/orgs",
            "repos_url": "https://api.github.com/users/prein/repos",
            "events_url": "https://api.github.com/users/prein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prein/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-03-20T18:19:15Z",
        "updated_at": "2024-03-21T12:52:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "It would be great to be able to control merge function behavior when there are keys with the same name in \"to\" and \"from\" objects.\r\nCurrent behavior for simple values is to use the value from object that enjoys higher precedence.\r\nWhat I think could be sometimes helpful to be able to do instead:\r\n* rename the key\r\n* merge / concatenate the values from both keys\r\n* store the conflicting keys in some other object\r\n\r\nExample:\r\n\r\nevent:\r\n```\r\n{\r\n  \"json\": {\r\n    \"msg\": \"bar\"\r\n  },\r\n  \"msg\": \"foo\"\r\n}\r\n```\r\nprogram:\r\n```\r\n. = merge!(del(.json), .)\r\n```\r\noutput:\r\n```\r\n{\r\n    \"msg\": \"foo\"\r\n}\r\n```\r\n\r\nchanging the precedence\r\nprogram:\r\n```\r\n. = merge!(.,del(.json))\r\n```\r\noutput:\r\n```\r\n{\r\n    \"msg\": \"bar\"\r\n}\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/757/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/755",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/755/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/755/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/755/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/755",
        "id": 2197607240,
        "node_id": "I_kwDOJN63t86C_NNI",
        "number": 755,
        "title": "parse_json - differs parsing floats",
        "user": {
            "login": "guusvw",
            "id": 2501084,
            "node_id": "MDQ6VXNlcjI1MDEwODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2501084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guusvw",
            "html_url": "https://github.com/guusvw",
            "followers_url": "https://api.github.com/users/guusvw/followers",
            "following_url": "https://api.github.com/users/guusvw/following{/other_user}",
            "gists_url": "https://api.github.com/users/guusvw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guusvw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guusvw/subscriptions",
            "organizations_url": "https://api.github.com/users/guusvw/orgs",
            "repos_url": "https://api.github.com/users/guusvw/repos",
            "events_url": "https://api.github.com/users/guusvw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guusvw/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-03-20T13:57:33Z",
        "updated_at": "2024-03-26T20:47:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hey dear VRL-folks \ud83d\udc4b \r\nI hope this is not a double posting, I only found issues regards `parse_json` for large ints, I'm having an issues as well for floats.\r\n\r\nWe're getting a JSON which contains the field `ts` and has in our test case the value `1626175065.5934923`\r\nafter passing it to `parse_json` the object has the value of `1626175065.5934925`, the last digit differs by 2.\r\nI know, floats are hard & annoying, but is there some way to avoid/fix it?\r\n\r\n```\r\n$ message = \"{\\\"level\\\":\\\"info\\\",\\\"ts\\\":1626175065.5934923,\\\"msg\\\":\\\"|200|   32.603\u00b5s /healthcheck\\\",\\\"statusCode\\\":200,\\\"request\\\":306,\\\"latency\\\":0.000032603,\\\"avgLatency\\\":0.004298489,\\\"ipPort\\\":\\\"1.1.1.1:12345\\\",\\\"method\\\":\\\"GET\\\",\\\"host\\\":\\\"1.1.1.1:8080\\\",\\\"path\\\":\\\"/healthcheck\\\",\\\"referer\\\":\\\"\\\"}\"\r\n\"{\\\"level\\\":\\\"info\\\",\\\"ts\\\":1626175065.5934923,\\\"msg\\\":\\\"|200|   32.603\u00b5s /healthcheck\\\",\\\"statusCode\\\":200,\\\"request\\\":306,\\\"latency\\\":0.000032603,\\\"avgLatency\\\":0.004298489,\\\"ipPort\\\":\\\"1.1.1.1:12345\\\",\\\"method\\\":\\\"GET\\\",\\\"host\\\":\\\"1.1.1.1:8080\\\",\\\"path\\\":\\\"/healthcheck\\\",\\\"referer\\\":\\\"\\\"}\"\r\n\r\n$ obj, err = parse_json(message)\r\n\r\n{ \"avgLatency\": 0.004298489, \"host\": \"1.1.1.1:8080\", \"ipPort\": \"1.1.1.1:12345\", \"latency\": 0.000032603, \"level\": \"info\", \"method\": \"GET\", \"msg\": \"|200|   32.603\u00b5s /healthcheck\", \"path\": \"/healthcheck\", \"referer\": \"\", \"request\": 306, \"statusCode\": 200, \"ts\": 1626175065.5934925 }\r\n```\r\n\r\n```\r\n\u276f bin/vector-0.36.1 --version\r\nvector 0.36.1 (x86_64-apple-darwin 2857180 2024-03-11 14:32:52.417737479)\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/641",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/641/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/641/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/641/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/641",
        "id": 2079821073,
        "node_id": "I_kwDOJN63t857940R",
        "number": 641,
        "title": "`parse_syslog` incorrectly adds the previous year for RFC3464 timestamps when close to the new year and the system timezone is not UTC",
        "user": {
            "login": "yangshike",
            "id": 13585274,
            "node_id": "MDQ6VXNlcjEzNTg1Mjc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13585274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yangshike",
            "html_url": "https://github.com/yangshike",
            "followers_url": "https://api.github.com/users/yangshike/followers",
            "following_url": "https://api.github.com/users/yangshike/following{/other_user}",
            "gists_url": "https://api.github.com/users/yangshike/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yangshike/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yangshike/subscriptions",
            "organizations_url": "https://api.github.com/users/yangshike/orgs",
            "repos_url": "https://api.github.com/users/yangshike/repos",
            "events_url": "https://api.github.com/users/yangshike/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yangshike/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-01-11T02:02:21Z",
        "updated_at": "2024-05-22T18:02:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nWhen the system time is (+800) 2024-01-01 00:00:00 - 2024-01-01 08:00\r\n\r\nThe timestamp field parsed through parse_syslog becomes 2022, this bug  is reproducible\r\n\r\nscreenshot\uff1a\r\n\r\n![image](https://github.com/vectordotdev/vector/assets/13585274/a6b72eb6-94a0-4cc3-89a4-6356bb92c075)\r\n![image](https://github.com/vectordotdev/vector/assets/13585274/8582f280-f1cd-4522-be1e-69ffa5e629fc)\r\n\n\n### Configuration\n\n```text\n[sources.message_log]\r\ntype = \"file\"\r\ninclude = [\"/var/log/messages\"]\r\nstart_at_beginning = true\r\n[transforms.modify_message_log]\r\ntype = \"remap\"\r\ninputs = [ \"message_log\" ]\r\nsource = '''\r\n. = parse_syslog!(.message)\r\n'''\r\n[sinks.console]\r\ntype = \"console\"\r\ninputs = [\"modify_message_log\"]\r\nencoding.codec = \"json\"\n```\n\n\n### Version\n\n0.33\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\nComparison of original log and log processed by vector\uff1a\r\n![image](https://github.com/vectordotdev/vector/assets/13585274/fc4df82e-b329-4bd5-9313-8712b5124ac5)\r\n\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/641/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/602",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/602/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/602/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/602/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/602",
        "id": 2048916451,
        "node_id": "I_kwDOJN63t856H_vj",
        "number": 602,
        "title": "Add a safe mode that disable functions who have access to more than event data",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-12-19T15:40:54Z",
        "updated_at": "2023-12-22T16:39:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Related to https://github.com/vectordotdev/vrl/issues/348.\r\n\r\nFunctions such as `get_env_var` and `get_hostname` should be disabled in safe mode.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/578",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/578/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/578/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/578/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/578",
        "id": 2007506643,
        "node_id": "I_kwDOJN63t853qB7T",
        "number": 578,
        "title": "Add support for parsing ndjson",
        "user": {
            "login": "dekelpilli",
            "id": 11293359,
            "node_id": "MDQ6VXNlcjExMjkzMzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11293359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dekelpilli",
            "html_url": "https://github.com/dekelpilli",
            "followers_url": "https://api.github.com/users/dekelpilli/followers",
            "following_url": "https://api.github.com/users/dekelpilli/following{/other_user}",
            "gists_url": "https://api.github.com/users/dekelpilli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dekelpilli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dekelpilli/subscriptions",
            "organizations_url": "https://api.github.com/users/dekelpilli/orgs",
            "repos_url": "https://api.github.com/users/dekelpilli/repos",
            "events_url": "https://api.github.com/users/dekelpilli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dekelpilli/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-23T05:24:11Z",
        "updated_at": "2024-06-14T02:53:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I've recently come across a problem that would be more conveniently solved if I could parse ndjson strings within VRL. This could also extend to concatenated JSONs (e.g. `{\"a\":1}{\"a\":2}`), or JSONs with a delimiter other than newlines.\r\n\r\nI'm not sure exactly what would be the best approach for this feature would be, but I guess it would likely be one of the following:\r\n```coffee\r\ns = s'{\"a\":1}\\n{\"a\":2}\\n0'\r\n\r\nparse_json!(s, format: 'ndjson') # [{\"a\":1}, {\"a\": 2}, 0]\r\n\r\n# or \r\n\r\nparse_json_stream!(s, delimiter: '\\n') # [{\"a\":1}, {\"a\": 2}, 0]\r\nparse_json_stream!(s'{\"a\":3}{\"a\":4}0') # [{\"a\":3}, {\"a\": 4}, 0]\r\n```\r\n\r\nYou can achieve something similar with the `split` +`parse_json` function, but that doesn't fail fast on JSONs across lines: `{\"a\":\"sentence\"}\\n{\"a\":\"sentence\\nwith\\nnewlines\"}`, and doesn't help with parsing JSON streams with no delimiter (e.g. `{\"a\":1}{\"a\":2}`)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/578/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/571",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/571/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/571/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/571/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/571",
        "id": 2005191942,
        "node_id": "I_kwDOJN63t853hM0G",
        "number": 571,
        "title": "parse_json: Provide opt-in configuration options for lossless number conversion ",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-21T21:44:57Z",
        "updated_at": "2023-11-21T21:45:27Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Related to issue #544 and PR https://github.com/vectordotdev/vrl/pull/570.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/503",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/503/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/503/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/503/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/503",
        "id": 1936488282,
        "node_id": "I_kwDOJN63t85zbHda",
        "number": 503,
        "title": "Add formats parameter to parse_timestamp",
        "user": {
            "login": "mattnthat",
            "id": 4960832,
            "node_id": "MDQ6VXNlcjQ5NjA4MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4960832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattnthat",
            "html_url": "https://github.com/mattnthat",
            "followers_url": "https://api.github.com/users/mattnthat/followers",
            "following_url": "https://api.github.com/users/mattnthat/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattnthat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattnthat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattnthat/subscriptions",
            "organizations_url": "https://api.github.com/users/mattnthat/orgs",
            "repos_url": "https://api.github.com/users/mattnthat/repos",
            "events_url": "https://api.github.com/users/mattnthat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattnthat/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-10T23:56:26Z",
        "updated_at": "2023-10-11T21:47:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "\r\n\r\nAs per conversation on [this thread](https://github.com/vectordotdev/vrl/issues/189#issuecomment-1755753131)\r\n\r\nWith the removal of the `to_timestamp` function, it's become harder to handle / normalise unknown timestamps in input data.\r\n\r\nThe feature as suggested by @jszwedko is to extend `parse_timestamp` to accept a 'format' parameter which can be an array of timestamp formats to try to match.\r\nThis puts control of the timestamp format array onto the user (vector.dev team don't have to hardcode and constantly extend acceptable formats) but gives the user a simple way to match a wide variery of timestamp formats in the incoming data.\r\n\r\nWork around suggested in the comment thread above gives some good structure around how the feature could work:\r\n\r\n```\r\nformats = [\"%+c\", \"some other format\"]\r\nt1 = now() # default\r\nfor_each(formats) -> |_index, format| {\r\n  t2, err = parse_timestamp(.timestamp, \"some other format\")\r\n  if err == null {\r\n    t1 = t2\r\n  }\r\n}\r\n.timestamp = t1\r\n```\r\n\r\n\r\n",
        "closed_by": {
            "login": "mattnthat",
            "id": 4960832,
            "node_id": "MDQ6VXNlcjQ5NjA4MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4960832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattnthat",
            "html_url": "https://github.com/mattnthat",
            "followers_url": "https://api.github.com/users/mattnthat/followers",
            "following_url": "https://api.github.com/users/mattnthat/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattnthat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattnthat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattnthat/subscriptions",
            "organizations_url": "https://api.github.com/users/mattnthat/orgs",
            "repos_url": "https://api.github.com/users/mattnthat/repos",
            "events_url": "https://api.github.com/users/mattnthat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattnthat/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/503/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/501",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/501/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/501/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/501/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/501",
        "id": 1936036272,
        "node_id": "I_kwDOJN63t85zZZGw",
        "number": 501,
        "title": "Make is_json more permissive",
        "user": {
            "login": "shend-block",
            "id": 96143612,
            "node_id": "U_kgDOBbsI_A",
            "avatar_url": "https://avatars.githubusercontent.com/u/96143612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shend-block",
            "html_url": "https://github.com/shend-block",
            "followers_url": "https://api.github.com/users/shend-block/followers",
            "following_url": "https://api.github.com/users/shend-block/following{/other_user}",
            "gists_url": "https://api.github.com/users/shend-block/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shend-block/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shend-block/subscriptions",
            "organizations_url": "https://api.github.com/users/shend-block/orgs",
            "repos_url": "https://api.github.com/users/shend-block/repos",
            "events_url": "https://api.github.com/users/shend-block/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shend-block/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-10T19:07:10Z",
        "updated_at": "2023-10-12T14:57:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Currently the documentation states `is_json` is a infallible function call. However passing in a argument without casting as a  string will fail\r\n```~/Development/ccd-security-lake shend/okta *+ env DATADOG_API_KEY_ENV_VAR=TEST vector test /Users/shend/Development/ccd-security-lake/generated/staging/okta.yaml\r\nRunning tests\r\n2023-10-10T18:25:59.580454Z ERROR vector::unit_test: Failed to execute tests:\r\nFailed to build test 'test_transforms':\r\n  failed to create test condition '0': \r\n  error[E630]: fallible argument\r\n    \u250c\u2500 :1:9\r\n    \u2502\r\n  1 \u2502 assert!(is_json(.actor))\r\n    \u2502         ^^^^^^^^^^^^^^^\r\n    \u2502         \u2502\r\n    \u2502         this expression can fail\r\n    \u2502         handle the error before passing it in as an argument\r\n    \u2502\r\n    = see documentation about error handling at https://errors.vrl.dev/#handling\r\n    = see language documentation at https://vrl.dev\r\n    = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n  .\r\n~/Development/ccd-security-lake shend/okta *+ vector --version\r\nvector 0.33.0 (x86_64-apple-darwin 89605fb 2023-09-27 14:18:24.180809939)\r\n```\r\n\r\nWhen casting the argument as a string using `string!` it passes\r\n```\r\nassert!(is_json(string!(.actor)))\r\n```\r\n\r\nWould it make sense to have is_json() check if the argument as a string and return false if its not? ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/502",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/502/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/502/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/502/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/502",
        "id": 1936349130,
        "node_id": "I_kwDOJN63t85zalfK",
        "number": 502,
        "title": "Parsing auditd logs has issues due to a 0x1D character",
        "user": {
            "login": "alex-rowe",
            "id": 1534918,
            "node_id": "MDQ6VXNlcjE1MzQ5MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1534918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alex-rowe",
            "html_url": "https://github.com/alex-rowe",
            "followers_url": "https://api.github.com/users/alex-rowe/followers",
            "following_url": "https://api.github.com/users/alex-rowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/alex-rowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alex-rowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alex-rowe/subscriptions",
            "organizations_url": "https://api.github.com/users/alex-rowe/orgs",
            "repos_url": "https://api.github.com/users/alex-rowe/repos",
            "events_url": "https://api.github.com/users/alex-rowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alex-rowe/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-04T01:04:32Z",
        "updated_at": "2023-10-10T22:06:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Discussed in https://github.com/vectordotdev/vector/discussions/18712\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **alex-rowe** September 29, 2023</sup>\r\nWhen using `auditd` set to `log_format = ENRICHED` there is a \"group separator\" character between the existing fields and unenriched fields.\r\n\r\nThis causes Vector to not split on this field when using `parse_key_value`.\r\n\r\nWhen attempting to use `strip_ansi_escape_codes`, this only removes the value, but we need to split on it.\r\n\r\nWhen attempting to use `replace`, we get errors for `unexpected error: invalid escape character: \\u`\r\n\r\nAn example log line would be:\r\n\r\n```\r\ntype=SYSCALL msg=audit(1695946364.453:9863): arch=c000003e syscall=257 success=yes exit=8 a0=ffffff9c a1=7f8f9b31cd80 a2=80002 a3=0 items=1 ppid=8221 pid=9287 auid=4294967295 uid=0 gid=1002 euid=0 suid=0 fsuid=0 egid=1002 sgid=1002 fsgid=1002 tty=pts0 ses=4294967295 comm=\"sudo\" exe=\"/usr/bin/sudo\" key=\"logins\"ARCH=x86_64 SYSCALL=openat AUID=\"unset\" UID=\"root\" GID=\"ssm-user\" EUID=\"root\" SUID=\"root\" FSUID=\"root\" EGID=\"ssm-user\" SGID=\"ssm-user\" FSGID=\"ssm-user\"\r\n```\r\n\r\nAnd `key=\"logins\"ARCH=x86_64` are shown as joined when viewing using `cat` or `tail` etc.\r\n\r\nWhen using the transform `.message = parse_key_value!(string!(.message))` we get the following:\r\n\r\n```\r\n\"key\": \"(null)\\u001dARCH=x86_64\",\r\n```\r\n\r\nIs there a recommended way we can replace `\\u001d` with a whitespace before we send it to `parse_key_value` so that it properly gets picked up a two fields, not one?\r\n\r\nI see this related issue from VRL https://github.com/vectordotdev/vrl/issues/148, can we get unicode escapes (https://doc.rust-lang.org/reference/tokens.html#unicode-escapes) added as options?\r\n\r\nA separate question may be the possibility of a `parse_auditd` function.\r\n\r\nExtra information here:\r\n* https://github.com/linux-audit/audit-userspace/issues/140\r\n* https://github.com/linux-audit/audit-documentation/wiki/SPEC-Audit-Event-Enrichment</div>",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/483",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/483/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/483/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/483/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/483",
        "id": 1919428735,
        "node_id": "I_kwDOJN63t85yaCh_",
        "number": 483,
        "title": "Add element type to `kind::ARRAY` ",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-29T14:59:55Z",
        "updated_at": "2023-09-29T14:59:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "VRL functions that have array arguments might expect all elements to have the same type. In this case, the function fallibility changes based on the actual element types. \r\n\r\nRead this comment for more context: https://github.com/vectordotdev/vrl/pull/468#discussion_r1336368806",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/483/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/471",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/471/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/471/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/471/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/471",
        "id": 1910034177,
        "node_id": "I_kwDOJN63t85x2M8B",
        "number": 471,
        "title": "parse_klog always parse the timestamp as UTC timezone",
        "user": {
            "login": "Leo1003",
            "id": 14937593,
            "node_id": "MDQ6VXNlcjE0OTM3NTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/14937593?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Leo1003",
            "html_url": "https://github.com/Leo1003",
            "followers_url": "https://api.github.com/users/Leo1003/followers",
            "following_url": "https://api.github.com/users/Leo1003/following{/other_user}",
            "gists_url": "https://api.github.com/users/Leo1003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Leo1003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Leo1003/subscriptions",
            "organizations_url": "https://api.github.com/users/Leo1003/orgs",
            "repos_url": "https://api.github.com/users/Leo1003/repos",
            "events_url": "https://api.github.com/users/Leo1003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Leo1003/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-23T23:38:27Z",
        "updated_at": "2023-10-11T14:26:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The logs outputs from kubelet are emitted with local timezone timestamp, however, the `parse_klog()` (and maybe also `parse_glog()`) function always parses them as UTC timestamp. This leads to hours of time shifting in the parsed log.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/464",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/464/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/464/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/464/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/464",
        "id": 1903763199,
        "node_id": "I_kwDOJN63t85xeR7_",
        "number": 464,
        "title": "Fuzzer additional work",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5496651489,
                "node_id": "LA_kwDOJN63t88AAAABR6A-4Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/fuzz",
                "name": "fuzz",
                "color": "1D76DB",
                "default": false,
                "description": "Issues found from fuzz testing"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-19T21:36:29Z",
        "updated_at": "2023-09-28T13:49:26Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "```[tasklist]\r\n### Tasks\r\n- [ ] Fix [bugs](https://github.com/vectordotdev/vrl/issues?q=is%3Aopen+is%3Aissue+label%3Afuzz) discovered by the fuzzer\r\n- [ ] Add more seeds/inputs.\r\n- [ ] Identify known failures and ignore them so that we can keep discovering new bugs.\r\n- [ ] On failure, the fuzzer will provide the input that caused a failure. We can improve this error report to reduce debugging time. A simple idea is to re-evaluate the VRL failed program.\r\n- [ ] Add a Github workflow that runs the fuzzer X times/week for Y hours/run.\r\n- [ ] (Optional) Automatically open Github issues for newly discovered bugs. This requires assigning IDs to failures.\r\n```\r\n\r\nThe above list is not exhaustive but a good starting point.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/464/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/464/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/458",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/458/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/458/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/458/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/458",
        "id": 1901585161,
        "node_id": "I_kwDOJN63t85xV-MJ",
        "number": 458,
        "title": "Explore support for a native code transform ",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-18T19:14:32Z",
        "updated_at": "2023-09-18T19:15:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The following is not a formal proposal/design but just an idea that could be explored in the future.\r\n \r\nToday Vector supports the [Lua transform](https://vector.dev/docs/reference/configuration/transforms/lua/). This issue is a suggestion to explore something similar for native code either as part of VRL or standalone. I am adding this issue as placeholder for potential future work.\r\n\r\n\r\nLet's use string manipulation as a motivating example.\r\n\r\nImagine a user wants to determine whether a string contains all the following substrings [\"abc\", \"xyz\"]. This can be done today by using multiple VRL functions and combining their results. See the following VRL snippet:\r\n\r\n```\r\nsentence = \"A needle in the haystack\"\r\ncontains_needle = contains(sentence, \"needle\")\r\ncontains_haystack = contains(sentence, \"haystack\")\r\ncontains_both = contains_needle && contains_haystack\r\n\r\nif contains_both {\r\n    # do A\r\n} else {\r\n    # do B\r\n}\r\n```\r\n\r\nIf VRL had a transform that supported Rust code it would look like:\r\n```\r\nsentence = \"A needle in the haystack\"\r\ncontains_both = contains_all_native(sentence, \"needle\", \"haystack\")\r\n\r\nif contains_both {\r\n    # do A\r\n} else {\r\n    # do B\r\n}\r\n```\r\n\r\nThis allows for tremendous flexibility and reduces engineering efforts since we don't need to introduce a new VRL function for each string manipulation that needs optimization.\r\n\r\nNote that the user would also need to implement `contains_all_native` and that would need to be compiled first and then invoked. There are several unanswered design questions here. ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/458/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/458/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/453",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/453/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/453/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/453/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/453",
        "id": 1898026717,
        "node_id": "I_kwDOJN63t85xIZbd",
        "number": 453,
        "title": "Error message loop with variables in closures",
        "user": {
            "login": "lukesteensen",
            "id": 333505,
            "node_id": "MDQ6VXNlcjMzMzUwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/333505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lukesteensen",
            "html_url": "https://github.com/lukesteensen",
            "followers_url": "https://api.github.com/users/lukesteensen/followers",
            "following_url": "https://api.github.com/users/lukesteensen/following{/other_user}",
            "gists_url": "https://api.github.com/users/lukesteensen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lukesteensen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lukesteensen/subscriptions",
            "organizations_url": "https://api.github.com/users/lukesteensen/orgs",
            "repos_url": "https://api.github.com/users/lukesteensen/repos",
            "events_url": "https://api.github.com/users/lukesteensen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lukesteensen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-15T09:10:08Z",
        "updated_at": "2023-11-09T15:19:38Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nIt appears that the compiler is unable to reason about types vs fallibility for variables in closures. It returns an error message saying something is fallible, then when the corresponding change is made it then shows an error that it is infallible. It's not clear how to work around these errors and satisfy the compiler.\r\n\r\n### Configuration\r\n\r\n```text\r\nhttps://playground.vrl.dev/?state=eyJwcm9ncmFtIjoib3V0cHV0ID0gW11cbmZvcl9lYWNoKC4pIC0%2BIHxrZXksIHZhbHVlfCB7XG4gICAgZSA9IHt9XG4gICAgc2V0KGUsIFtrZXldLCB2YWx1ZSlcbiAgICBvdXRwdXQgPSBwdXNoKG91dHB1dCwgZSlcbn1cbi4gPSBvdXRwdXQiLCJldmVudCI6eyJmb28iOiJvbmUiLCJiYXIiOiJ0d28iLCJiYXoiOiJ0aHJlZSJ9LCJpc19qc29ubCI6ZmFsc2UsImVycm9yIjpudWxsfQ%3D%3D\r\n\r\noutput = []\r\nfor_each(.) -> |key, value| {\r\n    e = {}\r\n    set(e, [key], value)\r\n    output = push(output, e)\r\n}\r\n. = output\r\n```\r\n\r\n\r\n### Version\r\n\r\nVector 0.32.0\r\nVRL 0.6.0\r\n\r\n### Debug Output\r\n\r\n```text\r\nerror[E103]: unhandled fallible assignment\r\n  \u250c\u2500 :5:14\r\n  \u2502\r\n5 \u2502     output = push(output, e)\r\n  \u2502     -------- ^^^^^^^^^^^^^^^\r\n  \u2502     \u2502        \u2502\r\n  \u2502     \u2502        this expression is fallible\r\n  \u2502     \u2502        update the expression to be infallible\r\n  \u2502     or change this to an infallible assignment:\r\n  \u2502     output, err = push(output, e)\r\n  \u2502\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = learn more about error code 103 at https://errors.vrl.dev/103\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\n\r\n### Example Data\r\n\r\n```\r\n{\r\n    \"foo\": \"one\",\r\n    \"bar\": \"two\",\r\n    \"baz\": \"three\"\r\n}\r\n```\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/437",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/437/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/437/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/437/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/437",
        "id": 1883879514,
        "node_id": "I_kwDOJN63t85wSbha",
        "number": 437,
        "title": "Docs for `parse_groks` links to a page that doesn't seem to exist any more",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-06T12:09:38Z",
        "updated_at": "2023-10-10T14:24:05Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "[`parse_grok`](https://vector.dev/docs/reference/vrl/functions/#parse_grok) links to https://grokdebug.herokuapp.com/. \r\n\r\nThat site doesn't seem to work anymore. This may be temporary, but if it doesn't seem to work in a few days, we should probably look at linking to a new page.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/435",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/435/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/435/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/435/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/435",
        "id": 1883099053,
        "node_id": "I_kwDOJN63t85wPc-t",
        "number": 435,
        "title": "Hope vrl supports obtaining host IP addresses",
        "user": {
            "login": "XSWClevo",
            "id": 39268560,
            "node_id": "MDQ6VXNlcjM5MjY4NTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39268560?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XSWClevo",
            "html_url": "https://github.com/XSWClevo",
            "followers_url": "https://api.github.com/users/XSWClevo/followers",
            "following_url": "https://api.github.com/users/XSWClevo/following{/other_user}",
            "gists_url": "https://api.github.com/users/XSWClevo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XSWClevo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XSWClevo/subscriptions",
            "organizations_url": "https://api.github.com/users/XSWClevo/orgs",
            "repos_url": "https://api.github.com/users/XSWClevo/repos",
            "events_url": "https://api.github.com/users/XSWClevo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XSWClevo/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-06T03:12:50Z",
        "updated_at": "2024-04-28T07:44:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "After using to obtain host_Metrics related information, the host address cannot be obtained, so I think it is most suitable to obtain the IP address in VRL",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/435/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/406",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/406/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/406/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/406/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/406",
        "id": 1858987392,
        "node_id": "I_kwDOJN63t85uzeWA",
        "number": 406,
        "title": "Restore `parse_nginx_log` parsing of the request string, optionally",
        "user": {
            "login": "rbarrois",
            "id": 694541,
            "node_id": "MDQ6VXNlcjY5NDU0MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/694541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rbarrois",
            "html_url": "https://github.com/rbarrois",
            "followers_url": "https://api.github.com/users/rbarrois/followers",
            "following_url": "https://api.github.com/users/rbarrois/following{/other_user}",
            "gists_url": "https://api.github.com/users/rbarrois/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rbarrois/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rbarrois/subscriptions",
            "organizations_url": "https://api.github.com/users/rbarrois/orgs",
            "repos_url": "https://api.github.com/users/rbarrois/repos",
            "events_url": "https://api.github.com/users/rbarrois/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rbarrois/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-21T09:36:10Z",
        "updated_at": "2023-09-15T07:47:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The change in #249 has removed the fields `method`, `path` and `protocol` from the result of `parse_nginx_log`, as the request string might not be parsed.\r\n\r\nHowever, that data is often useful; instead of forcing users of Vector to reimplement that feature as a custom regex, I suggest restoring the parsing of those fields, as an optional behaviour.\r\n\r\nThis could either be done through returning `null` values for those fields, or through a dedicated `parse_http_request` VRL function.\r\n\r\nIf there is interest for one of those options, I would happily provide the related changes.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/406/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/379",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/379/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/379/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/379/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/379",
        "id": 1846867937,
        "node_id": "I_kwDOJN63t85uFPfh",
        "number": 379,
        "title": "Provide binary search for sorted arrays",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "pront",
                "id": 1138161,
                "node_id": "MDQ6VXNlcjExMzgxNjE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/pront",
                "html_url": "https://github.com/pront",
                "followers_url": "https://api.github.com/users/pront/followers",
                "following_url": "https://api.github.com/users/pront/following{/other_user}",
                "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
                "organizations_url": "https://api.github.com/users/pront/orgs",
                "repos_url": "https://api.github.com/users/pront/repos",
                "events_url": "https://api.github.com/users/pront/events{/privacy}",
                "received_events_url": "https://api.github.com/users/pront/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-11T13:53:15Z",
        "updated_at": "2023-09-28T14:57:13Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The https://vector.dev/docs/reference/vrl/functions/#includes function has `O(n)` time complexity.\r\nSome users who are operating on sorted arrays, can benefit from a more efficient search.\r\n\r\nDiscord: https://discord.com/channels/742820443487993987/1139499804985151499/1139499804985151499",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/379/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/379/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/348",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/348/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/348/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/348/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/348",
        "id": 1820966712,
        "node_id": "I_kwDOJN63t85sib84",
        "number": 348,
        "title": "VRL is not a \"safe\" language in some environments",
        "user": {
            "login": "collimarco",
            "id": 90962,
            "node_id": "MDQ6VXNlcjkwOTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/90962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/collimarco",
            "html_url": "https://github.com/collimarco",
            "followers_url": "https://api.github.com/users/collimarco/followers",
            "following_url": "https://api.github.com/users/collimarco/following{/other_user}",
            "gists_url": "https://api.github.com/users/collimarco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/collimarco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/collimarco/subscriptions",
            "organizations_url": "https://api.github.com/users/collimarco/orgs",
            "repos_url": "https://api.github.com/users/collimarco/repos",
            "events_url": "https://api.github.com/users/collimarco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/collimarco/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-25T18:58:34Z",
        "updated_at": "2023-12-19T15:41:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nI have a service that receives some logs and I was thinking about using VRL for allowing customers of the service to apply transformations to the logs (which is the goal of this project).\r\n\r\nIn the official documentation I read sentences like this:\r\n\r\n> VRL is a safe language in several senses: VRL scripts have access only to the event data that they handle and not, for example, to the Internet or the host;\r\n\r\nThen I found functions like `get_env_var` which is definitely not safe in a shared environment (e.g. a multi-tenant SaaS). That function **allows sensitive information of the host to leak in the logs**. A similar issue is related to `get_hostname`. I think that these functions are not \"safe\" because they allow access to some inputs (e.g. ENV, hostname) that are not present in the logs, escaping the isolation that someone expects when running a VRL on the logs. \n\n### Configuration\n\n_No response_\n\n### Version\n\nlatest\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/348/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/348/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/324",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/324/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/324/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/324/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/324",
        "id": 1805026665,
        "node_id": "I_kwDOJN63t85rloVp",
        "number": 324,
        "title": "parse_key_value vs backslash",
        "user": {
            "login": "grinapo",
            "id": 1056054,
            "node_id": "MDQ6VXNlcjEwNTYwNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1056054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grinapo",
            "html_url": "https://github.com/grinapo",
            "followers_url": "https://api.github.com/users/grinapo/followers",
            "following_url": "https://api.github.com/users/grinapo/following{/other_user}",
            "gists_url": "https://api.github.com/users/grinapo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grinapo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grinapo/subscriptions",
            "organizations_url": "https://api.github.com/users/grinapo/orgs",
            "repos_url": "https://api.github.com/users/grinapo/repos",
            "events_url": "https://api.github.com/users/grinapo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grinapo/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5778029757,
                "node_id": "LA_kwDOJN63t88AAAABWGW8vQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:confirmed",
                "name": "meta:confirmed",
                "color": "F9D0C4",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-13T17:11:27Z",
        "updated_at": "2024-03-22T18:11:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nIt seems `parse_key_value` gets confused when the first character of the string is `\\\\`\r\n\r\n```\r\nvector vrl\r\n$ a=\"foo=11 T=\\\"p\\\\ip pap pop\\\"\"\r\n$ b=\"foo=11 T=\\\"\\\\ip pap pop\\\"\"\r\n$ a\r\n\"foo=11 T=\\\"p\\\\ip pap pop\\\"\"\r\n\r\n$ b\r\n\"foo=11 T=\\\"\\\\ip pap pop\\\"\"\r\n\r\n$ parse_key_value!(a)\r\n{ \"T\": \"p\\\\ip pap pop\", \"foo\": \"11\" }\r\n\r\n$ parse_key_value!(b)\r\n{ \"T\": \"\\\"\\\\ip\", \"foo\": \"11\", \"pap\": true, \"pop\"\": true }\r\n```\r\n\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nvector 0.30.0 (x86_64-unknown-linux-gnu 38c3f0b 2023-05-22 17:38:48.655488673)\r\n\r\n### Debug Output\r\n\r\n_No response_\r\n\r\n### Example Data\r\n\r\n_No response_\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_\r\n\r\nHmm, maybe this issue shall be moved under https://github.com/vectordotdev/vrl - I am not yet familar about how you prefer collecting issues.",
        "closed_by": {
            "login": "grinapo",
            "id": 1056054,
            "node_id": "MDQ6VXNlcjEwNTYwNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1056054?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/grinapo",
            "html_url": "https://github.com/grinapo",
            "followers_url": "https://api.github.com/users/grinapo/followers",
            "following_url": "https://api.github.com/users/grinapo/following{/other_user}",
            "gists_url": "https://api.github.com/users/grinapo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/grinapo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/grinapo/subscriptions",
            "organizations_url": "https://api.github.com/users/grinapo/orgs",
            "repos_url": "https://api.github.com/users/grinapo/repos",
            "events_url": "https://api.github.com/users/grinapo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/grinapo/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/324/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/324/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/301",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/301/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/301/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/301/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/301",
        "id": 1791951253,
        "node_id": "I_kwDOJN63t85qzwGV",
        "number": 301,
        "title": "Deprecate \"AES-*-CTR\" encryption/decryption options",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-06T17:25:25Z",
        "updated_at": "2023-07-07T14:46:09Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "List of options to be deprecated:\r\n```\r\n\"AES-128-CTR\"\r\n\"AES-192-CTR\"\r\n\"AES-256-CTR\"\r\n```\r\n\r\nTo be replaced by \"AES-*-CTR-LE\".",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/301/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/284",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/284/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/284/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/284/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/284",
        "id": 1779789952,
        "node_id": "I_kwDOJN63t85qFXCA",
        "number": 284,
        "title": "Change how test runner handles deprecations",
        "user": {
            "login": "pront",
            "id": 1138161,
            "node_id": "MDQ6VXNlcjExMzgxNjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1138161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pront",
            "html_url": "https://github.com/pront",
            "followers_url": "https://api.github.com/users/pront/followers",
            "following_url": "https://api.github.com/users/pront/following{/other_user}",
            "gists_url": "https://api.github.com/users/pront/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pront/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pront/subscriptions",
            "organizations_url": "https://api.github.com/users/pront/orgs",
            "repos_url": "https://api.github.com/users/pront/repos",
            "events_url": "https://api.github.com/users/pront/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pront/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-28T21:18:35Z",
        "updated_at": "2023-07-20T15:42:47Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "## Problem\r\nFor deprecated VRL functions we emit deprecation warnings (diagnostic) and this is reflected in the output. Currently, the test runner in `lib/tests/src/main.rs` treats the presence of warnings as a test failure. \r\n\r\nWe also define some examples for each VRL function. These examples are used to generate test cases. So, when we deprecate the VRL function, all test cases generated from the examples will start failing.\r\n\r\n## Proposal\r\nA potential long-term solution (that would also synergize well with #280) is to ignore deprecation warnings and only check the result.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/284/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/284/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/282",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/282/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/282/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/282/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/282",
        "id": 1779530115,
        "node_id": "I_kwDOJN63t85qEXmD",
        "number": 282,
        "title": "Improve the changelog format",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-28T18:52:11Z",
        "updated_at": "2023-06-28T18:52:11Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The format can probably be improved by grouping issue types (bug fixes, new features, etc.).\r\nMaybe use something like https://github.com/orhun/git-cliff\r\n\r\nContext: https://github.com/vectordotdev/vrl/pull/281#pullrequestreview-1503742867\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/282/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/280",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/280/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/280/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/280/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/280",
        "id": 1779155367,
        "node_id": "I_kwDOJN63t85qC8Gn",
        "number": 280,
        "title": "Auto-generate VRL function documentation",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T15:02:56Z",
        "updated_at": "2023-09-28T14:44:27Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "## Problem\r\nBefore the VRL repo was split from Vector, VRL function documentation was manually added for each change in CUE docs. Now since the repo is split, there is currently no way to add / update documentation with each PR. Even before, it was easy for documentation to become out of date since it's manually updated and nothing is checking it for accuracy.\r\n\r\n## Proposal\r\nThe source of documentation will live wherever VRL functions are defined. (The VRL repo for stdlib functions, or other repos for user added functions, such as Vector specific VRL functions). This will be auto-generated directly from the code (function name, parameters, examples, .etc) and supplemented by annotations were needed. This will be roughly similar to Vector's [config schema](https://github.com/vectordotdev/vector/blob/master/rfcs/2022-02-23-9481-config-schema.md)\r\n\r\nThe VRL repo will contain a tool that can generate a computer-readable intermediate format of the function documentation in JSON. This allows end-users of VRL to generate documentation from the intermediate format.\r\n\r\nFor example:\r\n- Vector would generate the intermediate JSON format for the stdlib functions, as well as several Vector specific functions, and then convert that to CUE docs for the documentation [here](https://vector.dev/docs/reference/vrl/functions/)\r\n- VRL itself may one day host it's own documentation for just the stdlib. The intermediate format gives flexibility to use whatever tool makes sense for the job, instead of having to copy what Vector is currently using.\r\n- The VRL playground (or Observability Pipelines) could ingest this data as they wish to improve the related UI.\r\n- Future users of VRL could integrate this data into their own documentation.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/280/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/280/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/268",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/268/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/268/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/268/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/268",
        "id": 1761115876,
        "node_id": "I_kwDOJN63t85o-H7k",
        "number": 268,
        "title": "Improve diagnostics from function fallibility caused by arguments",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-16T18:24:04Z",
        "updated_at": "2023-06-16T18:24:04Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "There has been quite a bit of confusion around functions being marked as fallible (when the function itself is considered infallible) due to an argument that may be an incorrect type. Improved compiler diagnostics pointing out that the issue is with a specific argument will probably help a lot here.\r\n\r\nExample: https://github.com/vectordotdev/vrl/issues/267#issue-1761022044",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/268/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/265",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/265/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/265/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/265/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/265",
        "id": 1757728583,
        "node_id": "I_kwDOJN63t85oxM9H",
        "number": 265,
        "title": "Error if return values from functions with no side-effects are unused",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T22:21:29Z",
        "updated_at": "2023-10-20T20:00:43Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "A user was recently confused because they had a VRL program that they thought would update metrics tags, but it didn't because they forgot to assign the result of a `merge` function call. They had:\r\n\r\n```\r\nmerge(.tags, {\"tag\": \"youreit\"})\r\n```\r\n\r\nWhen they should have had\r\n\r\n```\r\n.tags = merge(.tags, {\"tag\": \"youreit\"})\r\n```\r\n\r\nTo help users avoid this sort of issue, I think it'd be useful for the compiler to raise an error if the result of a VRL function that has no side-effects is not used. The `#[must_use]` Rust macro could be some inspiration.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/265/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/462",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/462/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/462/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/462/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/462",
        "id": 1903187179,
        "node_id": "I_kwDOJN63t85xcFTr",
        "number": 462,
        "title": "Converting OpenTelemetry trace_id and span_id to Datadog trace_id",
        "user": {
            "login": "hkrutzer",
            "id": 3464899,
            "node_id": "MDQ6VXNlcjM0NjQ4OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3464899?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hkrutzer",
            "html_url": "https://github.com/hkrutzer",
            "followers_url": "https://api.github.com/users/hkrutzer/followers",
            "following_url": "https://api.github.com/users/hkrutzer/following{/other_user}",
            "gists_url": "https://api.github.com/users/hkrutzer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hkrutzer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hkrutzer/subscriptions",
            "organizations_url": "https://api.github.com/users/hkrutzer/orgs",
            "repos_url": "https://api.github.com/users/hkrutzer/repos",
            "events_url": "https://api.github.com/users/hkrutzer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hkrutzer/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T14:15:40Z",
        "updated_at": "2023-09-19T15:00:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nTo send logs that have an OpenTelemetry trace_id and space_id to Datadog, and correlate logs with traces, you need to convert the OpenTelemetry trace id to a Datadog trace id as described [here](https://docs.datadoghq.com/tracing/other_telemetry/connect_logs_and_traces/opentelemetry/?tab=nodejs).\r\n\r\nHowever, I can't seem to do this conversion in VRL or lua because neither have longs. It would be great if there was a way to do this conversion in Vector.\r\n\r\n### Attempted Solutions\r\n\r\n```vrl\r\nif .span_id != null {\r\n  .dd_span_id = to_string(parse_int!(.span_id, 16))\r\n}\r\nif .trace_id != null {\r\n  trace_id_end = slice!(.trace_id, to_int(length(.trace_id) / 2))\r\n  .dd_trace_id = to_string(parse_int!(trace_id_end, 16))\r\n}\r\n```\r\n\r\n```json\r\n{\r\n    \"level\": 30,\r\n    \"msg\": \"request completed\",\r\n    \"span_id\": \"985b124a91f072ec\",\r\n    \"trace_id\": \"1eda406ed70b61ddee87444efc062b8b\"\r\n}\r\n```\r\n\r\n```\r\nerror[E000]: function call error for \"to_string\" at (185:224): function call error for \"parse_int\" at (195:223): could not parse integer: number too large to fit in target type\r\n  \u250c\u2500 :6:18\r\n  \u2502\r\n6 \u2502   .dd_trace_id = to_string(parse_int!(trace_id_end, 16))\r\n  \u2502                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  \u2502                  \u2502         \u2502\r\n  \u2502                  \u2502         could not parse integer: number too large to fit in target type\r\n  \u2502                  function call error for \"parse_int\" at (195:223): could not parse integer: number too large to fit in target type\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\n### Proposal\r\n\r\nUnsure\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nvector 0.30.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/462/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/462/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/261",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/261/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/261/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/261/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/261",
        "id": 1728103018,
        "node_id": "I_kwDOJN63t85nAMJq",
        "number": 261,
        "title": "`parse_groks` aliases are not type checked",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5549824494,
                "node_id": "LA_kwDOJN63t88AAAABSsuZ7g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/crash",
                "name": "crash",
                "color": "FF0000",
                "default": false,
                "description": "A bug that results in the program unexpectedly terminating, such as a panic."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-26T19:02:16Z",
        "updated_at": "2023-06-05T13:06:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The following VRL code will panic. The 3rd argument is an object containing grok aliases. Each value should be a string, but the `parse_groks` function fails to check this.\r\n\r\n```coffee\r\nparse_groks!(\"\", [], {\"foo\": 3})\r\n```\r\n\r\nVRL version: `main` (ebb1f2b739e776)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/261/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/254",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/254/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/254/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/254/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/254",
        "id": 1722726183,
        "node_id": "I_kwDOJN63t85mrrcn",
        "number": 254,
        "title": "integer division uses floating point path",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T20:18:02Z",
        "updated_at": "2023-05-25T18:57:12Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "integer division internally uses floating point math, which can cause precision issues for larger number.\r\nBelow is an example dividing a large number by 1, where the result loses several digits of precision. This should probably use integer math to be consistent with multiplication / addition / subtraction.\r\n\r\n```coffee\r\n$ 9223372036854775807 / 1\r\n9223372036854776000\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/254/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/244",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/244/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/244/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/244/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/244",
        "id": 1708392086,
        "node_id": "I_kwDOJN63t85l0_6W",
        "number": 244,
        "title": "Consider all programs as \"abortable\"",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-13T01:58:36Z",
        "updated_at": "2023-06-29T14:53:36Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Today, a `Program` can provide information about whether it's possible to fail (`fallible`) or abort (`abortable`). It may be reasonable to just assume any program can potentially abort, and remove the `abortable` field from `ProgramInfo`. aborts can be useful outside of an explicit abort. For example, when compiled to WASM, functions abort if they are unsupported in WASM. Programs could also potentially abort in the future as a protection against excessive memory or cpu usage (trying to create a very large array), or in cases that may cause a stack overflow.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/244/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/243",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/243/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/243/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/243/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/243",
        "id": 1708390168,
        "node_id": "I_kwDOJN63t85l0_cY",
        "number": 243,
        "title": "Excessively nested expressions can cause a stack overflow",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5496651489,
                "node_id": "LA_kwDOJN63t88AAAABR6A-4Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/fuzz",
                "name": "fuzz",
                "color": "1D76DB",
                "default": false,
                "description": "Issues found from fuzz testing"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-13T01:50:48Z",
        "updated_at": "2023-05-25T18:54:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "For example, negating a variable ~30,000 times will cause a stack overflow. I'll spare your eyes by not pasting a full example below. This isn't something that an end user is likely to type in, but guarding against this can be useful for cases where you are running un-trusted VRL code.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/243/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/243/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/242",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/242/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/242/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/242/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/242",
        "id": 1708388222,
        "node_id": "I_kwDOJN63t85l0-9-",
        "number": 242,
        "title": "Some operations can use excessive cpu/memory",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5496651489,
                "node_id": "LA_kwDOJN63t88AAAABR6A-4Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/fuzz",
                "name": "fuzz",
                "color": "1D76DB",
                "default": false,
                "description": "Issues found from fuzz testing"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-13T01:41:25Z",
        "updated_at": "2023-08-30T14:18:30Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Assigning a value to a very large (positive or negative) index will expand the array to the size required to fit that index, potentially using an excessive amount of memory. A large limit (e.g. 1 million?) that causes an abort may help prevent abuse or accidents here.\r\n\r\nExamples\r\n```coffee\r\nx[99999999999] = true;\r\n```\r\n```coffee\r\nx[-99999999999] = true;\r\n```\r\n\r\nList of known areas that can excessively allocate:\r\n- assigning to large array indices\r\n- multiplying a string (bytes) by a large number",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/242/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/215",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/215/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/215/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/215/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/215",
        "id": 1694121032,
        "node_id": "I_kwDOJN63t85k-jxI",
        "number": 215,
        "title": "CEF parser failed to parse a log message",
        "user": {
            "login": "v8v5v",
            "id": 71503725,
            "node_id": "MDQ6VXNlcjcxNTAzNzI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/71503725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/v8v5v",
            "html_url": "https://github.com/v8v5v",
            "followers_url": "https://api.github.com/users/v8v5v/followers",
            "following_url": "https://api.github.com/users/v8v5v/following{/other_user}",
            "gists_url": "https://api.github.com/users/v8v5v/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/v8v5v/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/v8v5v/subscriptions",
            "organizations_url": "https://api.github.com/users/v8v5v/orgs",
            "repos_url": "https://api.github.com/users/v8v5v/repos",
            "events_url": "https://api.github.com/users/v8v5v/events{/privacy}",
            "received_events_url": "https://api.github.com/users/v8v5v/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-03T11:12:13Z",
        "updated_at": "2023-06-24T10:01:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nI was trying to parse Incapsula CEF log which look like:\r\n```\r\nCEF:0|Incapsula|SIEMintegration|1|1|Illegal Resource Access|3| fileid=3412341160002518171\r\n```\r\n(more examples could be found [here](https://docs.imperva.com/bundle/cloud-application-security/page/more/example-logs.htm#logEx1))\r\n\r\nThe CEF parser could not parse this log message, probably because the last `|` sign has the trailing space. \r\nAfter I manually fixed the log by removing the space between the last `|` and the following `fileid`, then it was parsed without any issue.\r\n```\r\nCEF:0|Incapsula|SIEMintegration|1|1|Illegal Resource Access|3|fileid=3412341160002518171\r\n```\r\nIt would be great to modify the CEF Parser and make it parse maybe non-standard logs which sometimes happen to exist in real life..\r\n\r\n\r\n\r\n### Configuration\r\n\r\n```text\r\n[sources.my_file_source]\r\ntype = \"file\"\r\ninclude = [\"/tmp/test.log\"]\r\nignore_not_found = true\r\n\r\n[transforms.my_cef_parser]\r\ntype = \"remap\"\r\ninputs = [\"my_file_source\"]\r\nsource = '''\r\n# Parse CEF message\r\n. = parse_cef!(.message)\r\n'''\r\n\r\n[sinks.my_console_sink]\r\ntype = \"console\"\r\ninputs = [\"my_cef_parser\"]\r\nencoding.codec = \"json\"\r\n# Pretty-print JSON output\r\nencoding.indent = 2\r\n```\r\n\r\n\r\n### Version\r\n\r\nvector 0.29.1 (x86_64-unknown-linux-gnu 74ae15e 2023-04-20 14:50:42.739094536)\r\n\r\n### Debug Output\r\n\r\n```text\r\n2023-05-03T11:09:29.118796Z DEBUG vector::app: Internal log rate limit configured. internal_log_rate_secs=10\r\n2023-05-03T11:09:29.118858Z  INFO vector::app: Log level is enabled. level=\"vector=trace,codec=trace,vrl=trace,file_source=trace,tower_limit=trace,rdkafka=trace,buffers=trace,lapin=trace,kube=trace\"\r\n2023-05-03T11:09:29.121516Z  INFO vector::app: Loading configs. paths=[\"/etc/vector/vector.toml\"]\r\n2023-05-03T11:09:29.122083Z DEBUG vector::config::loading: No secret placeholder found, skipping secret resolution.\r\n2023-05-03T11:09:29.123590Z DEBUG vector::topology::builder: Building new source. component=my_file_source\r\n2023-05-03T11:09:29.123916Z DEBUG vector::topology::builder: Building new transform. component=my_cef_parser\r\n2023-05-03T11:09:29.124251Z DEBUG vector::topology::builder: Building new sink. component=my_console_sink\r\n2023-05-03T11:09:29.124457Z  INFO vector::topology::running: Running healthchecks.\r\n2023-05-03T11:09:29.124477Z DEBUG vector::topology::running: Connecting changed/added component(s).\r\n2023-05-03T11:09:29.124498Z DEBUG vector::topology::running: Configuring outputs for source. component=my_file_source\r\n2023-05-03T11:09:29.124515Z DEBUG vector::topology::running: Configuring output for component. component=my_file_source output_id=None\r\n2023-05-03T11:09:29.124526Z DEBUG vector::topology::running: Configuring outputs for transform. component=my_cef_parser\r\n2023-05-03T11:09:29.124534Z DEBUG vector::topology::running: Configuring output for component. component=my_cef_parser output_id=None\r\n2023-05-03T11:09:29.124545Z DEBUG vector::topology::running: Connecting inputs for transform. component=my_cef_parser\r\n2023-05-03T11:09:29.124558Z DEBUG vector::topology::running: Adding component input to fanout. component=my_cef_parser fanout_id=my_file_source\r\n2023-05-03T11:09:29.124574Z DEBUG vector::topology::running: Connecting inputs for sink. component=my_console_sink\r\n2023-05-03T11:09:29.124584Z DEBUG vector::topology::running: Adding component input to fanout. component=my_console_sink fanout_id=my_cef_parser\r\n2023-05-03T11:09:29.124629Z DEBUG vector::topology::running: Spawning new source. key=my_file_source\r\n2023-05-03T11:09:29.124665Z DEBUG vector::topology::running: Registered new allocation group. component_kind=\"source\" component_type=\"file\" component_id=\"my_file_source\" group_id=\"2\"\r\n2023-05-03T11:09:29.124688Z DEBUG vector::topology::running: Spawning new transform. key=my_cef_parser\r\n2023-05-03T11:09:29.124711Z DEBUG vector::topology::running: Registered new allocation group. component_kind=\"transform\" component_type=\"remap\" component_id=\"my_cef_parser\" group_id=\"3\"\r\n2023-05-03T11:09:29.124732Z TRACE vector::topology::running: Spawning new sink. key=my_console_sink\r\n2023-05-03T11:09:29.124758Z DEBUG vector::topology::running: Registered new allocation group. component_kind=\"sink\" component_type=\"console\" component_id=\"my_console_sink\" group_id=\"4\"\r\n2023-05-03T11:09:29.124818Z  INFO vector: Vector has started. debug=\"false\" version=\"0.29.1\" arch=\"x86_64\" revision=\"74ae15e 2023-04-20 14:50:42.739094536\"\r\n2023-05-03T11:09:29.124845Z  INFO vector::app: API is disabled, enable by setting `api.enabled` to `true` and use commands like `vector top`.\r\n2023-05-03T11:09:29.125098Z  INFO vector::topology::builder: Healthcheck passed.\r\n2023-05-03T11:09:29.125132Z DEBUG source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::topology::builder: Source starting.\r\n2023-05-03T11:09:29.125187Z  INFO source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::sources::file: Starting file server. include=[\"/tmp/test.log\"] exclude=[]\r\n2023-05-03T11:09:29.125973Z DEBUG source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::topology::builder: Source pump supervisor starting.\r\n2023-05-03T11:09:29.126111Z DEBUG source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::topology::builder: Source pump starting.\r\n2023-05-03T11:09:29.126136Z DEBUG transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector::topology::builder: Synchronous transform starting.\r\n2023-05-03T11:09:29.126154Z DEBUG sink{component_kind=\"sink\" component_id=my_console_sink component_type=console component_name=my_console_sink}: vector::topology::builder: Sink starting.\r\n2023-05-03T11:09:29.127348Z TRACE vector: Beep.\r\n2023-05-03T11:09:29.127369Z DEBUG sink{component_kind=\"sink\" component_id=my_console_sink component_type=console component_name=my_console_sink}: vector::utilization: utilization=0.05264400984195372\r\n2023-05-03T11:09:29.128240Z  INFO source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::checkpointer: Attempting to read legacy checkpoint files.\r\n2023-05-03T11:09:29.132531Z  INFO source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: vector::internal_events::file::source: Found new file to watch. file=/tmp/test.log\r\n2023-05-03T11:09:29.132620Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: Continue watching file. path=\"/tmp/test.log\"\r\n2023-05-03T11:09:29.132662Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: Read bytes. path=\"/tmp/test.log\" bytes=72\r\n2023-05-03T11:09:29.132846Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::internal_events::file::source: Bytes received. byte_size=72 protocol=\"file\" file=/tmp/test.log\r\n2023-05-03T11:09:29.132900Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector::internal_events::file::source: Events received. count=1 byte_size=72 file=/tmp/test.log\r\n2023-05-03T11:09:29.132989Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2023-05-03T11:09:29.133009Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=203 output=_default\r\n2023-05-03T11:09:29.133032Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector_core::fanout: Processing control message outside of send: ControlMessage::Add(ComponentKey { id: \"my_cef_parser\" })\r\n2023-05-03T11:09:29.138909Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2023-05-03T11:09:29.138931Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}: vector_core::fanout: Sent item to fanout.\r\n2023-05-03T11:09:29.138952Z TRACE transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector_common::internal_event::events_received: Events received. count=1 byte_size=203\r\n2023-05-03T11:09:29.139055Z ERROR transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector::internal_events::remap: Mapping failed with event. error=\"function call error for \\\"parse_cef\\\" at (24:44): Could not parse whole line successfully\" error_type=\"conversion_failed\" stage=\"processing\" internal_log_rate_limit=true\r\n2023-05-03T11:09:29.139133Z TRACE transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector_core::fanout: Processing control message outside of send: ControlMessage::Add(ComponentKey { id: \"my_console_sink\" })\r\n2023-05-03T11:09:29.139147Z TRACE transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2023-05-03T11:09:29.139154Z TRACE transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector_core::fanout: Sent item to fanout.\r\n2023-05-03T11:09:29.139161Z TRACE transform{component_kind=\"transform\" component_id=my_cef_parser component_type=remap component_name=my_cef_parser}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=203 output=_default\r\n2023-05-03T11:09:29.139176Z TRACE sink{component_kind=\"sink\" component_id=my_console_sink component_type=console component_name=my_console_sink}: vector_common::internal_event::events_received: Events received. count=1 byte_size=203\r\n2023-05-03T11:09:29.139898Z TRACE sink{component_kind=\"sink\" component_id=my_console_sink component_type=console component_name=my_console_sink}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=201\r\n2023-05-03T11:09:29.139934Z TRACE sink{component_kind=\"sink\" component_id=my_console_sink component_type=console component_name=my_console_sink}: vector_common::internal_event::bytes_sent: Bytes sent. byte_size=202 protocol=console\r\n{\"file\":\"/tmp/test.log\",\"host\":\"X\",\"message\":\"CEF:0|Incapsula|SIEMintegration|1|1|Normal|0| fileId=1276000830014346377\",\"source_type\":\"file\",\"timestamp\":\"2023-05-03T11:09:29.132935551Z\"}\r\n2023-05-03T11:09:30.127950Z TRACE vector: Beep.\r\n2023-05-03T11:09:30.139153Z DEBUG vector::internal_events::file::source: Files checkpointed. count=1 duration_ms=4\r\n2023-05-03T11:09:30.165563Z DEBUG source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: event_throughput=1.000/sec bytes_throughput=72.000/sec ratios={\"discovery\": 5.7603964e-5, \"other\": 0.00015309395, \"reading\": 0.000107883396, \"sending\": 0.00015582104, \"sleeping\": 0.99952674}\r\n2023-05-03T11:09:30.165692Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: Continue watching file. path=\"/tmp/test.log\"\r\n2023-05-03T11:09:31.127300Z TRACE vector: Beep.\r\n2023-05-03T11:09:31.140503Z DEBUG vector::internal_events::file::source: Files checkpointed. count=1 duration_ms=0\r\n2023-05-03T11:09:31.190994Z DEBUG source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: event_throughput=0.000/sec bytes_throughput=36.000/sec ratios={\"discovery\": 6.269027e-5, \"other\": 0.00013159559, \"reading\": 5.6451896e-5, \"sending\": 8.3148494e-5, \"sleeping\": 0.99966663}\r\n2023-05-03T11:09:31.191126Z TRACE source{component_kind=\"source\" component_id=my_file_source component_type=file component_name=my_file_source}:file_server: file_source::file_server: Continue watching file. path=\"/tmp/test.log\"\r\n^C2023-05-03T11:09:31.687408Z  INFO vector::signal: Signal received. signal=\"SIGINT\"\r\n2023-05-03T11:09:31.687510Z  INFO vector: Vector has stopped\r\n```\r\n\r\n\r\n### Example Data\r\n\r\nCEF:0|Incapsula|SIEMintegration|1|1|Illegal Resource Access|3| fileid=3412341160002518171\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/215/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/206",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/206/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/206/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/206/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/206",
        "id": 1686691540,
        "node_id": "I_kwDOJN63t85kiN7U",
        "number": 206,
        "title": "`verify_overwritable` can have inaccurate spans",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T11:53:38Z",
        "updated_at": "2023-06-15T14:48:06Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "`verify_overwritable` is used to ensure VRL assignments can only assign to types that make sense, for example you can't assign to an index of an object. When doing this check, spans (for error messages) are calculated by taking the overall span for the path, and subtracting segments based on the string length of the `Display` implementation of `OwnedSegment`. The length here isn't guaranteed to match (mostly do to escaping / quoting), so the span can be inaccurate. A simple case to reproduce is to try to use an invalid assignment with a path that unnecessarily quotes a segment.\r\n\r\nWhen this was originally introduced, it caused a runtime panic (https://github.com/vectordotdev/vector/issues/13461), and was fixed by using `saturating_sub` to prevent underflows. This prevents panics, but didn't actually solve the root cause. A different approach should be taken here.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/206/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/195",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/195/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/195/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/195/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/195",
        "id": 1674775619,
        "node_id": "I_kwDOJN63t85j0wxD",
        "number": 195,
        "title": "Add functions to get first/last n elements of an array",
        "user": {
            "login": "Leo1003",
            "id": 14937593,
            "node_id": "MDQ6VXNlcjE0OTM3NTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/14937593?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Leo1003",
            "html_url": "https://github.com/Leo1003",
            "followers_url": "https://api.github.com/users/Leo1003/followers",
            "following_url": "https://api.github.com/users/Leo1003/following{/other_user}",
            "gists_url": "https://api.github.com/users/Leo1003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Leo1003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Leo1003/subscriptions",
            "organizations_url": "https://api.github.com/users/Leo1003/orgs",
            "repos_url": "https://api.github.com/users/Leo1003/repos",
            "events_url": "https://api.github.com/users/Leo1003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Leo1003/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-19T12:10:20Z",
        "updated_at": "2024-05-17T19:24:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Currently, I cannot find a proper way to limit the length of an array.\r\n\r\nI wish there are functions which can return the first or last n elements of an array.\r\n\r\n## Example\r\n```\r\nfirst([0, 1, 2, 3], 3)\r\n// Output: [0, 1, 2]\r\n\r\nfirst([0], 3)\r\n// Output: [0]\r\n\r\nlast([0, 1, 2, 3], 3)\r\n// Output: [1, 2, 3]\r\n\r\nlast([\"apple\", \"book\", \"car\", \"door\"], 2)\r\n// Output: [\"car\", \"door\"]\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/170",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/170/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/170/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/170/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/170",
        "id": 1645942091,
        "node_id": "I_kwDOJN63t85iGxVL",
        "number": 170,
        "title": "Integrate with Datadog CI app",
        "user": {
            "login": "spencergilbert",
            "id": 11903873,
            "node_id": "MDQ6VXNlcjExOTAzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11903873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spencergilbert",
            "html_url": "https://github.com/spencergilbert",
            "followers_url": "https://api.github.com/users/spencergilbert/followers",
            "following_url": "https://api.github.com/users/spencergilbert/following{/other_user}",
            "gists_url": "https://api.github.com/users/spencergilbert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spencergilbert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spencergilbert/subscriptions",
            "organizations_url": "https://api.github.com/users/spencergilbert/orgs",
            "repos_url": "https://api.github.com/users/spencergilbert/repos",
            "events_url": "https://api.github.com/users/spencergilbert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spencergilbert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-29T14:31:02Z",
        "updated_at": "2023-03-29T14:31:02Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Just opening an issue to track our interest in integrating the now separated crate with the CI app for visibility.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/170/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/153",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/153/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/153/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/153/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/153",
        "id": 1644234459,
        "node_id": "I_kwDOJN63t85iAQbb",
        "number": 153,
        "title": "Add warning for unused local variables",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-28T15:49:21Z",
        "updated_at": "2023-03-28T15:49:21Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This work was started here: https://github.com/vectordotdev/vector/pull/8912",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/151",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/151/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/151/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/151/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/151",
        "id": 1644174995,
        "node_id": "I_kwDOJN63t85iAB6T",
        "number": 151,
        "title": "Expand `Expression:resolve_constant()` support",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-28T15:15:14Z",
        "updated_at": "2023-03-29T17:08:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "`Expression::resolve_constant()` is currently a pretty naive implementation. It should support many more expressions.\r\n\r\nSome work was started here: https://github.com/vectordotdev/vector/pull/12397",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/151/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/686",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/686/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/686/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/686/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/686",
        "id": 2126234474,
        "node_id": "I_kwDOJN63t85-u8Nq",
        "number": 686,
        "title": "`datadog_search` syntax filters doesn't work when key contains `.`",
        "user": {
            "login": "smitthakkar96",
            "id": 10204970,
            "node_id": "MDQ6VXNlcjEwMjA0OTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10204970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smitthakkar96",
            "html_url": "https://github.com/smitthakkar96",
            "followers_url": "https://api.github.com/users/smitthakkar96/followers",
            "following_url": "https://api.github.com/users/smitthakkar96/following{/other_user}",
            "gists_url": "https://api.github.com/users/smitthakkar96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smitthakkar96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smitthakkar96/subscriptions",
            "organizations_url": "https://api.github.com/users/smitthakkar96/orgs",
            "repos_url": "https://api.github.com/users/smitthakkar96/repos",
            "events_url": "https://api.github.com/users/smitthakkar96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smitthakkar96/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-03-27T13:24:28Z",
        "updated_at": "2024-02-08T23:39:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nWhen using datadog_search syntax in the filter or route transform, if the attribute key has `.` in it, the search doesn't work. See the example test cases in the configuration. \r\n\r\n### Configuration\r\n\r\n``` toml\r\n[sources.vector_primary]\r\ntype = \"vector\"\r\naddress = \"0.0.0.0:8080\"\r\n\r\n[transforms.parse_json]\r\ninputs = [\"vector_primary\"]\r\ntype = \"remap\"\r\nsource = \"\"\"\r\n.custom = parse_json(.custom) ?? {}\r\n\"\"\"\r\n\r\n[transforms.filter_health_check_logs]\r\ninputs = [\"parse_json\"]\r\ntype = \"filter\"\r\ncondition = { type = \"datadog_search\", source = \"@grpc.method:HealthCheck\" }\r\n\r\n[transforms.filter_channel]\r\ninputs = [\"parse_json\"]\r\ntype = \"filter\"\r\ncondition = { type = \"datadog_search\", source = \"@channel:api\" }\r\n\r\n# This is working\r\n\r\n[[tests]]\r\n  name = \"test_filter_health_check_logs\"\r\n  [[tests.inputs]]\r\n    type = \"log\"\r\n    insert_at = \"parse_json\"\r\n    [tests.inputs.log_fields]\r\n      custom = '{\"grpc.method\": \"HealthCheck\", \"squad\": \"testing-squad\"}'\r\n      message = 'foo bar'\r\n\r\n  [[tests.outputs]]\r\n    extract_from = \"filter_health_check_logs\"\r\n    [[tests.outputs.conditions]]\r\n      type = \"vrl\"\r\n      source = \"\"\"\r\n        log(.)\r\n        assert_eq!(.message, \"foo bar\")\r\n      \"\"\"\r\n\r\n# This is not working\r\n\r\n[[tests]]\r\n  name = \"test_filter_channel\"\r\n  [[tests.inputs]]\r\n    type = \"log\"\r\n    insert_at = \"parse_json\"\r\n    [tests.inputs.log_fields]\r\n      custom = '{\"grpc.method\": \"HealthCheck\", \"channel\": \"api\"}'\r\n      message = 'foo bar'\r\n\r\n  [[tests.outputs]]\r\n    extract_from = \"filter_channel\"\r\n    [[tests.outputs.conditions]]\r\n      type = \"vrl\"\r\n      source = \"\"\"\r\n        log(.)\r\n        assert_eq!(.message, \"foo bar\")\r\n      \"\"\"\r\n```\r\n\r\n\r\n### Version\r\n\r\n`vector 0.27.0`\r\n\r\n### Debug Output\r\n\r\n_No response_\r\n\r\n### Example Data\r\n\r\nSee the test case\r\n\r\n### Additional Context\r\n\r\nWe are in the process of adopting Vector in our organisation, our goal is to migrate exclusion filters from Datadog Log Index to Vector, and we have many indexes. Using `datadog_search` syntax would make migration easy for us, otherwise, we will have to translate 500+ filters to VRL. This is blocking us from adopting Vector for log exclusion and sampling. \r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/686/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/686/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/273",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/273/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/273/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/273/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/273",
        "id": 1767701408,
        "node_id": "I_kwDOJN63t85pXPug",
        "number": 273,
        "title": "assert_eq confusingly fails to compare arrays of numbers",
        "user": {
            "login": "jpeach",
            "id": 9917,
            "node_id": "MDQ6VXNlcjk5MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9917?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpeach",
            "html_url": "https://github.com/jpeach",
            "followers_url": "https://api.github.com/users/jpeach/followers",
            "following_url": "https://api.github.com/users/jpeach/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpeach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpeach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpeach/subscriptions",
            "organizations_url": "https://api.github.com/users/jpeach/orgs",
            "repos_url": "https://api.github.com/users/jpeach/repos",
            "events_url": "https://api.github.com/users/jpeach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpeach/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-23T00:26:53Z",
        "updated_at": "2023-06-21T15:43:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nI have a test that looks like this:\r\n\r\n```\r\n    [[tests.outputs]]\r\n    extract_from = \"mangle\"\r\n    [[tests.outputs.conditions]]\r\n    type = \"vrl\"\r\n    source = '''\r\n    wanted = {\r\n        \"date\": \"2023-03-22\",\r\n        \"doc_id\": \"-\",\r\n        \"tags_bools.key\": [\"is_provisioned\"],\r\n        \"tags_bools.value\": [true],\r\n        \"tags_exacts\": [\r\n            \"input=syslog-journald\",\r\n            \"is_provisioned=True\",\r\n            \"message_size=110\",\r\n            \"sequence_number=\",\r\n            \"transport=journal\",\r\n        ],\r\n        \"tags_numbers.key\": [\"@version\", \"message_size\"],\r\n        \"tags_numbers.value\": [1, 110],\r\n        \"tags_strings.key\": [\"input\", \"sequence_number\", \"transport\"],\r\n        \"tags_strings.value\": [\"syslog-journald\", \"\",  \"journal\"],\r\n        \"timestamp\": 1679504581104,\r\n    }\r\n\r\n    for_each(keys(.)) -> |_, k| {\r\n        if k == \"doc_id\" {\r\n            null\r\n        } else {\r\n            assert_eq!(get!(wanted, [k]), get!(., [k]))\r\n        }\r\n    }\r\n\r\n    true\r\n    '''\r\n```\r\n\r\nAnd the comparison fails:\r\n\r\n```\r\n  condition[0]: source execution failed:\r\nerror[E000]: function call error for \"for_each\" at (1198:1361): function call error for \"assert_eq\" at (1302:1345): assertion failed: [1, 110] == [1, 110]\r\n   \u250c\u2500 :27:5\r\n   \u2502\r\n27 \u2502 \u256d     for_each(keys(.)) -> |_, k| {\r\n28 \u2502 \u2502         if k == \"doc_id\" {\r\n29 \u2502 \u2502             null\r\n30 \u2502 \u2502         } else {\r\n31 \u2502 \u2502             assert_eq!(get!(wanted, [k]), get!(., [k]))\r\n   \u2502 \u2502             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed: [1, 110] == [1, 110]\r\n32 \u2502 \u2502         }\r\n33 \u2502 \u2502     }\r\n   \u2502 \u2570\u2500\u2500\u2500\u2500\u2500^ function call error for \"assert_eq\" at (1302:1345): assertion failed: [1, 110] == [1, 110]\r\n   \u2502\r\n   = see language documentation at https://vrl.dev\r\n   = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n\r\n```\r\n\r\nIf I switch the wanted output to `\"tags_numbers.value\": [1.0, 110.0]`, then it succeeds.\n\n### Configuration\n\n_No response_\n\n### Version\n\nvector 0.28.1 (x86_64-apple-darwin ff15924 2023-03-06)\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/273/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/273/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/187",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/187/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/187/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/187/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/187",
        "id": 1660963116,
        "node_id": "I_kwDOJN63t85jAEks",
        "number": 187,
        "title": "Allow parse_regex and parse_regex_all to receive as a parameter the result of dynamic to_regex like in match function",
        "user": {
            "login": "Genry1",
            "id": 17429619,
            "node_id": "MDQ6VXNlcjE3NDI5NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/17429619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Genry1",
            "html_url": "https://github.com/Genry1",
            "followers_url": "https://api.github.com/users/Genry1/followers",
            "following_url": "https://api.github.com/users/Genry1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Genry1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Genry1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Genry1/subscriptions",
            "organizations_url": "https://api.github.com/users/Genry1/orgs",
            "repos_url": "https://api.github.com/users/Genry1/repos",
            "events_url": "https://api.github.com/users/Genry1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Genry1/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-02-28T10:15:54Z",
        "updated_at": "2024-04-18T13:47:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\n`parse_regex` and `parse_regex_all` are accepting the parameter to be only regex. Though the regex can be stored in a variable or resolved on the fly by the `to_regex` function. At the moment this is supported only by `match` function.\n\n### Attempted Solutions\n\nTried in different ways and the only possible option is to pass regex directly as an argument, like: `parse_regex(r'')`\n\n### Proposal\n\nAn option to pass the regex parameter as a variable or as a result of another function (so called group). e.g. `parse_regex(to_regex(\"some_regex\"))` or `my_regex = r''; parse_regex(my_regex)`\n\n### References\n\nHere is the issue which introduced the `to_regex` function https://github.com/vectordotdev/vector/issues/7051\n\n### Version\n\n0.28.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/187/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/582",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/582/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/582/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/582/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/582",
        "id": 2015222296,
        "node_id": "I_kwDOJN63t854HdoY",
        "number": 582,
        "title": "VRL function fallibility is dependant on argument types",
        "user": {
            "login": "jorgebay",
            "id": 2931196,
            "node_id": "MDQ6VXNlcjI5MzExOTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2931196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorgebay",
            "html_url": "https://github.com/jorgebay",
            "followers_url": "https://api.github.com/users/jorgebay/followers",
            "following_url": "https://api.github.com/users/jorgebay/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorgebay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorgebay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorgebay/subscriptions",
            "organizations_url": "https://api.github.com/users/jorgebay/orgs",
            "repos_url": "https://api.github.com/users/jorgebay/repos",
            "events_url": "https://api.github.com/users/jorgebay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorgebay/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-02-22T12:38:50Z",
        "updated_at": "2023-11-28T20:13:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nThe built-in functions to coerce values can be both fallible and not fallible depending on the value.\r\n\r\nThe functions [are documented as fallible](https://vector.dev/docs/reference/vrl/functions/#coerce-functions) but if the compiler can detect that the value is of a certain type, it changes the signature from fallible to not fallible.\r\n\r\nFor example, this is a valid syntax and compiles:\r\n\r\n```rust\r\nstr = \"something\"\r\nresult, err = to_bool(str)\r\n```\r\n\r\nBut this fails:\r\n\r\n```rust\r\nb = false\r\nresult, err = to_bool(b)\r\n```\r\n\r\nwith\r\n\r\n```\r\nerror[E104]: unnecessary error assignment\r\n  \u250c\u2500 :1:9\r\n  \u2502\r\n1 \u2502 result, err = to_bool(b)\r\n  \u2502 ------  ^^^   ---------- because this expression can't fail\r\n  \u2502 \u2502       \u2502\r\n  \u2502 \u2502       this error assignment is unnecessary\r\n  \u2502 use: result = to_bool(b)\r\n```\r\n\r\nThe same occurs with `to_float()`, `to_int()`, ...\r\n\r\nThe signature changes from:\r\n```rust\r\nto_bool(value: <boolean | integer | float | null | string>)\r\n:: <boolean> , <error>\r\n```\r\n\r\nto:\r\n\r\n```rust\r\nto_bool(value: <boolean>) :: <boolean> // not fallible\r\n```\r\n\r\nAs a language user this can be confusing, a function should not change fallibility depending on the parameter value.\n\n### Configuration\n\n_No response_\n\n### Version\n\n0.27\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/582/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/4",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/4/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/4/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/4/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/4",
        "id": 1643882151,
        "node_id": "I_kwDOJN63t85h-6an",
        "number": 4,
        "title": "Reduce boilerplate required to add VRL parsing functions",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-02-17T18:02:45Z",
        "updated_at": "2023-04-10T14:46:57Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nGoals:\r\n- Be able to define a new VRL parsing function by only supplying the following: \r\n   - A function name\r\n   - A parsing implementation (nom / grok / regex / etc)\r\n   - A VRL type definition\r\n   - Examples\r\n- The following boilerplate should _not_ be required:\r\n   - The vrl `resolve`, `compile`, and `parameters` are not needed\r\n   - maybe remove the need to feature flag each individual parser\r\n- Re-write existing functions with the _new_ method.\r\n\r\nNon-Goals:\r\n- at least initially, parsers that require inputs other than `value` (the string being parsed) are out of scope\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/4/reactions",
            "total_count": 5,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/4/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/274",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/274/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/274/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/274/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/274",
        "id": 1767703295,
        "node_id": "I_kwDOJN63t85pXQL_",
        "number": 274,
        "title": "Add function parse spring boot default log format",
        "user": {
            "login": "pengliaoye",
            "id": 2573426,
            "node_id": "MDQ6VXNlcjI1NzM0MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2573426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pengliaoye",
            "html_url": "https://github.com/pengliaoye",
            "followers_url": "https://api.github.com/users/pengliaoye/followers",
            "following_url": "https://api.github.com/users/pengliaoye/following{/other_user}",
            "gists_url": "https://api.github.com/users/pengliaoye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pengliaoye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pengliaoye/subscriptions",
            "organizations_url": "https://api.github.com/users/pengliaoye/orgs",
            "repos_url": "https://api.github.com/users/pengliaoye/repos",
            "events_url": "https://api.github.com/users/pengliaoye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pengliaoye/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-01-30T14:51:14Z",
        "updated_at": "2023-06-21T14:35:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nexample log format:\r\n\r\n2023-01-30 22:37:33.495  INFO 72972 --- [           main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageChannel cacheConsumer-in-0\r\n2023-01-30 22:37:33.514  INFO 72972 --- [           main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageChannel nullChannel\r\n2023-01-30 22:37:33.520  INFO 72972 --- [           main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageChannel reqDataConsumer-in-0\r\n2023-01-30 22:37:33.528  INFO 72972 --- [           main] o.s.i.monitor.IntegrationMBeanExporter   : Registering MessageHandler _org.springframework.integration.errorLogger\r\n\r\nwant add a parse_spring_boot function\r\n\r\n\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\n_No response_\n\n### References\n\n_No response_\n\n### Version\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/274/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/6",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/6/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/6/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/6/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/6",
        "id": 1643904600,
        "node_id": "I_kwDOJN63t85h-_5Y",
        "number": 6,
        "title": "Add parser functions for Log4j and Zapr logs",
        "user": {
            "login": "AnkkeetVaity27",
            "id": 30876031,
            "node_id": "MDQ6VXNlcjMwODc2MDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30876031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnkkeetVaity27",
            "html_url": "https://github.com/AnkkeetVaity27",
            "followers_url": "https://api.github.com/users/AnkkeetVaity27/followers",
            "following_url": "https://api.github.com/users/AnkkeetVaity27/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnkkeetVaity27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnkkeetVaity27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnkkeetVaity27/subscriptions",
            "organizations_url": "https://api.github.com/users/AnkkeetVaity27/orgs",
            "repos_url": "https://api.github.com/users/AnkkeetVaity27/repos",
            "events_url": "https://api.github.com/users/AnkkeetVaity27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnkkeetVaity27/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-01-13T09:17:58Z",
        "updated_at": "2023-04-10T14:45:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Currently we are using following Regex functions for parsing Log4j and Zapr logs:\r\n\r\n`parse_log4j, err = parse_regex(.raw_message, r'(?s)\\A(?P<level>[A-Z]+) *\\[(?P<thread_type>[^-.:#(\\]]+)[-.:#]?(?P<thread_id>[^\\]]*)\\] (?P<timestamp>.{10} .{12}) *(?P<source_file>[^:]+):(?P<source_line>\\d+) - *(?P<message>.*)')`\r\n\r\n`parse_zapr, err = parse_regex(.raw_message, r'(?s)(?P<timestamp>[\\d-]+T[\\d:.]+Z)\\s+(?P<level>[A-Z]+)\\s+(?P<source_file>[\\w.]+)\\s+(?P<message>.*)')`\r\n\r\nIt would be great to have parser functions for these log types.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/6/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/6/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/8",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/8/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/8/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/8/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/8",
        "id": 1643906572,
        "node_id": "I_kwDOJN63t85h_AYM",
        "number": 8,
        "title": "Fix year-dependent VRL tests",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            },
            {
                "id": 5320993642,
                "node_id": "LA_kwDOJN63t88AAAABPSfrag",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20tests",
                "name": "domain: tests",
                "color": "343639",
                "default": false,
                "description": "Anything related to internal tests"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-01-04T17:07:46Z",
        "updated_at": "2025-01-02T18:46:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "With vectordotdev/vector#15797 we applied a bandaid to the two year-dependent VRL tests, `parse_klog` and `parse_linux_authorization`, but they will again fail next year if nothing is changed. This needs to be resolved so we don't continue to have yearly issues with these tests.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/8/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/8/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/9",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/9/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/9/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/9/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/9",
        "id": 1643908376,
        "node_id": "I_kwDOJN63t85h_A0Y",
        "number": 9,
        "title": "Make VRL WebAssembly artifact production-ready",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320995784,
                "node_id": "LA_kwDOJN63t88AAAABPSfzyA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/Epic",
                "name": "Epic",
                "color": "0366d6",
                "default": false,
                "description": "Larger, user-centric issue that contains multiple sub-issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "fuchsnj",
                "id": 6706944,
                "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/fuchsnj",
                "html_url": "https://github.com/fuchsnj",
                "followers_url": "https://api.github.com/users/fuchsnj/followers",
                "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
                "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
                "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
                "repos_url": "https://api.github.com/users/fuchsnj/repos",
                "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-12-08T15:38:05Z",
        "updated_at": "2023-03-29T13:34:21Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We're currently compiling VRL to Wasm (using the `wasm32-unknown-uknown` target) to be able to run the [VRL Playground](https://playground.vrl.dev) on the web without the need for a server-side component.\r\n\r\nWe want to leverage this Wasm artifact in more use-cases in the future, but before we can do that, additional steps have to be taken. These are listed out below, tracked in separate issues.\r\n\r\n**must haves**\r\n\r\n- [ ] Compile and host nightly and stable VRL Wasm binary artifacts\r\n\r\n   For the VRL Playground, we currently compile VRL to Wasm as part of the [Netlify build process](https://github.com/vectordotdev/vector/blob/550aa8b1f50c7674fe367d02d8d9777ed35d89d7/lib/vrl/web-playground/netlify.toml) to host the playground website. This is insufficient for a more general purpose VRL Wasm artifact. We need to hook into the existing Vector release workflow, to allow this Wasm artifact to be (1) built for every nightly/stable release, and then (2) upload that artifact next to the existing Vector release artifacts, so that they can be downloaded by others. Currently, VRL would have the same release cadence and versioning as Vector, until vectordotdev/vector#3784 (nice to have) is resolved.\r\n\r\n- [ ] Create a VRL Wasm binary that is isolated from the VRL Playground\r\n\r\n   The existing VRL Wasm binary is built as part of the [`vrl/web-playground`](https://github.com/vectordotdev/vector/tree/550aa8b1f50c7674fe367d02d8d9777ed35d89d7/lib/vrl/web-playground) crate. We should extract this into a separate `vrl/web` crate, which is separated from any playground-specific code, and provides a generic interface to interact (e.g. compile VRL programs, inspect compilation errors, and run programs against individual targets). Most of this will be copy/paste work, but there's some fine-tuning required. Nothing too involved, though.\r\n\r\n- [ ] https://github.com/vectordotdev/vrl/issues/21\r\n\r\n   To ensure we don't have any regressions of our Wasm binary, we should run our test harness in both the regular (Unix-based) test environment, and in a Wasm-based environment. These tests should run on our CI, similarly to our existing tests. Note that this is not about adding _new_ tests, but running the existing tests using the Wasm VRL runtime.\r\n\r\n**nice to haves**\r\n\r\n- [ ] Support all VRL functions in the playground or raise an explicit error if non-supported ones are used\r\n\r\n- [x] https://github.com/vectordotdev/vector/issues/3784\r\n\r\n   VRL is currently embedded within the Vector repository, and piggybacks on the entire CI and release workflow. This has upsides and downsides, the biggest upside is that it's easier to work on both Vector and VRL at the same time, within a single session (e.g. same repo, same editor, single compilation step, etc.), the biggest downside is that VRL has no independent release cadence, and no independent release notes, this makes it difficult for other users of VRL to know when a Vector update is relevant for their non-Vector use-case. By pulling out VRL into a separate project, the project gains independence, which allows it to set its own release cadence, release notes, and CI workflow (which would be much lighter than the existing Vector workflow). It will also help to get a better overview of pending PRs/issues/discussions related to VRL (our existing tagging system helps, but it's not as optimal).\r\n\r\n- [x] https://github.com/vectordotdev/vector/issues/11094\r\n\r\n   Before we can tackle vectordotdev/vector#3784, we need to solve this issue first, which is about untangling any existing cross-dependencies between Vector and VRL (of which there are some, but not many).\r\n\r\n- [ ] Publish VRL crates on crates.io\r\n\r\n   By publishing our existing [VRL crates](https://github.com/vectordotdev/vector/tree/550aa8b1f50c7674fe367d02d8d9777ed35d89d7/lib/vrl) on [crates.io](https://crates.io), we make it easier for other projects to integrate VRL. This is not necessary for projects that use our pre-compiled Wasm binary, but it will be for those that want to deviate from the default build parameters (e.g. if they wish to limit or expand the number of [VRL functions](https://vrl.dev/functions/) available in the build, or incorporate other modifications).",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/9/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/9/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/10",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/10/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/10/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/10/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/10",
        "id": 1643909430,
        "node_id": "I_kwDOJN63t85h_BE2",
        "number": 10,
        "title": "[Web Playground] Add diff viewer if input isn't JSONL",
        "user": {
            "login": "jonathanpv",
            "id": 44036128,
            "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathanpv",
            "html_url": "https://github.com/jonathanpv",
            "followers_url": "https://api.github.com/users/jonathanpv/followers",
            "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
            "repos_url": "https://api.github.com/users/jonathanpv/repos",
            "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-11-16T16:26:05Z",
        "updated_at": "2023-03-28T13:04:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\nSuggested bv @barieom \r\n\r\nCurrently it is difficult for users to gauge what the difference between input events and output events are, to remedy this we should implement a diff viewer that highlights the changes that the VRL program made.\r\n\r\nMonaco editor API has a diff view option which should make this a fairly easy implementation.\r\n\r\n\r\n\r\n### Use Cases\r\n\r\n_No response_\r\n\r\n### Attempted Solutions\r\n\r\n_No response_\r\n\r\n### Proposal\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/10/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/10/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/11",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/11/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/11/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/11/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/11",
        "id": 1643910101,
        "node_id": "I_kwDOJN63t85h_BPV",
        "number": 11,
        "title": "Add `debug` function to VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-11-04T21:04:34Z",
        "updated_at": "2023-03-28T13:04:37Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nIn addition to the `log` function, which logs the event, it'd be useful to log the event + metadata + secrets to aid with VRL troubleshooting and development. A `debug` function seems like it'd work here.\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\nAdd a `debug` function that logs the event plus the metadata, secrets, and event type.\n\n### References\n\n_No response_\n\n### Version\n\nvector 0.25.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/11/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/11/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/12",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/12/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/12/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/12/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/12",
        "id": 1643910740,
        "node_id": "I_kwDOJN63t85h_BZU",
        "number": 12,
        "title": "feat(vrl): Add `encode_mime_q` encoding function",
        "user": {
            "login": "ktff",
            "id": 18242866,
            "node_id": "MDQ6VXNlcjE4MjQyODY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18242866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ktff",
            "html_url": "https://github.com/ktff",
            "followers_url": "https://api.github.com/users/ktff/followers",
            "following_url": "https://api.github.com/users/ktff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ktff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ktff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ktff/subscriptions",
            "organizations_url": "https://api.github.com/users/ktff/orgs",
            "repos_url": "https://api.github.com/users/ktff/repos",
            "events_url": "https://api.github.com/users/ktff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ktff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-28T11:22:53Z",
        "updated_at": "2023-03-28T13:04:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nA corresponding `decode_mime_q` function has been/will be added in https://github.com/vectordotdev/vector/pull/14813, and while usually decode/encode functions are both added in the same PR it is not clear how useful `encode_mime_q` encoding function would be. So it was decided to open this issue to gauge interest in it.\r\n\r\n### Attempted Solutions\r\n\r\n_No response_\r\n\r\n### Proposal\r\n\r\nAdd vrl function `encode_mime_q` which would encode input string according to https://datatracker.ietf.org/doc/html/rfc2047. It would also accept arguments for desired encoding and charset.\r\n\r\n### References\r\n\r\n`decode_mime_q` - https://github.com/vectordotdev/vector/issues/14325\r\n\r\n### Version\r\n\r\n`v0.25.0`",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/12/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/12/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/13",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/13/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/13/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/13/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/13",
        "id": 1643912552,
        "node_id": "I_kwDOJN63t85h_B1o",
        "number": 13,
        "title": "add `sort` function",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-13T14:40:59Z",
        "updated_at": "2023-03-28T13:05:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\r\nHi there,\r\n\r\nThank you for opening an issue. Please note that we try to keep the Vector issue tracker reserved for bug reports and feature requests. For general usage questions, please see: https://chat.vector.dev.\r\n-->\r\n\r\n<!--- Please keep this note for the community --->\r\n\r\n### Community Note\r\n\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n\r\n<!--- Thank you for keeping this note for the community --->\r\n\r\n### Use-cases\r\n\r\nIt's useful to be able to sort arrays. This is currently possible using `for_each` and a manual implementation, but it's less performant and more cumbersome to do than with a dedicated `sort` function.\r\n\r\nWe could also add a `sort_by` function later, that works similar to `sort`, except that it takes a closure and returns -1/0/1 to determine if a value should be sorted before/after the other value.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/13/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/13/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/14",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/14/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/14/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/14/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/14",
        "id": 1643913665,
        "node_id": "I_kwDOJN63t85h_CHB",
        "number": 14,
        "title": "Expand VRL web UI design beyond MVP status, using Vector's website style guide",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-10-04T13:23:29Z",
        "updated_at": "2023-03-28T13:06:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "At this point, we have a working, hosted minimal viable VRL Playground product.\r\n\r\nIt's time to move it past the MVP stage.\r\n\r\nFor this, we'll want to turn the playground into a (still small'ish) single-page app using whatever web framework we think fits best. In addition to this, we'll use existing Datadog/Vector styling components to make the UX more pleasant to use.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/14/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/14/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/15",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/15/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/15/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/15/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/15",
        "id": 1643914006,
        "node_id": "I_kwDOJN63t85h_CMW",
        "number": 15,
        "title": "[Web Playground] Make `reverse_dns()` function wasm compatible",
        "user": {
            "login": "jonathanpv",
            "id": 44036128,
            "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathanpv",
            "html_url": "https://github.com/jonathanpv",
            "followers_url": "https://api.github.com/users/jonathanpv/followers",
            "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
            "repos_url": "https://api.github.com/users/jonathanpv/repos",
            "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-03T21:27:03Z",
        "updated_at": "2023-03-28T13:10:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nCurrent error message is:\r\nhttps://gist.github.com/jonathanpv/d619b7552e8993f27c3ce4e8c951351a\r\n(output was too long for github issue)\r\n\r\nref: vectordotdev/vector#14654\r\nref: vectordotdev/vrl#22",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/15/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/15/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/17",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/17/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/17/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/17/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/17",
        "id": 1643917233,
        "node_id": "I_kwDOJN63t85h_C-x",
        "number": 17,
        "title": "[Web Playground] Make parse_groks() function wasm compatible",
        "user": {
            "login": "jonathanpv",
            "id": 44036128,
            "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathanpv",
            "html_url": "https://github.com/jonathanpv",
            "followers_url": "https://api.github.com/users/jonathanpv/followers",
            "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
            "repos_url": "https://api.github.com/users/jonathanpv/repos",
            "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-03T21:16:32Z",
        "updated_at": "2023-03-28T13:10:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\n```shell\r\njon.padilla@COMP-W936N7C769 wasm % wasm-pack build --target web && python3 -m http.server\r\n[INFO]: \ud83c\udfaf  Checking for the Wasm target...\r\n[INFO]: \ud83c\udf00  Compiling to Wasm...\r\n   Compiling cc v1.0.73\r\n   Compiling pkg-config v0.3.25\r\n   Compiling glob v0.3.0\r\n   Compiling bitflags v1.3.2\r\n   Compiling peeking_take_while v1.0.0\r\n   Compiling datadog-grok v0.1.0 (/Users/jon.padilla/Documents/datadoge/vector/lib/datadog/grok)\r\n   Compiling value v0.1.0 (/Users/jon.padilla/Documents/datadoge/vector/lib/value)\r\n   Compiling grok v2.0.0\r\n   Compiling onig_sys v69.8.1\r\n   Compiling vector-common v0.1.0 (/Users/jon.padilla/Documents/datadoge/vector/lib/vector-common)\r\n   Compiling vrl-core v0.1.0 (/Users/jon.padilla/Documents/datadoge/vector/lib/vrl/core)\r\nThe following warnings were emitted during compilation:\r\n\r\nwarning: In file included from oniguruma/src/regexec.c:36:\r\nwarning: oniguruma/src/regint.h:110:10: fatal error: 'stdlib.h' file not found\r\nwarning: #include <stdlib.h>\r\nwarning:          ^~~~~~~~~~\r\nwarning: 1 error generated.\r\n\r\nerror: failed to run custom build command for `onig_sys v69.8.1`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `/Users/jon.padilla/Documents/datadoge/vector/target/release/build/onig_sys-ecd020a4d90c735e/build-script-build` (exit status: 1)\r\n  --- stdout\r\n  cargo:rerun-if-env-changed=RUSTONIG_DYNAMIC_LIBONIG\r\n  cargo:rerun-if-env-changed=RUSTONIG_STATIC_LIBONIG\r\n  cargo:rerun-if-env-changed=RUSTONIG_SYSTEM_LIBONIG\r\n  TARGET = Some(\"wasm32-unknown-unknown\")\r\n  OPT_LEVEL = Some(\"3\")\r\n  HOST = Some(\"aarch64-apple-darwin\")\r\n  CC_wasm32-unknown-unknown = None\r\n  CC_wasm32_unknown_unknown = None\r\n  TARGET_CC = None\r\n  CC = None\r\n  CFLAGS_wasm32-unknown-unknown = None\r\n  CFLAGS_wasm32_unknown_unknown = None\r\n  TARGET_CFLAGS = None\r\n  CFLAGS = None\r\n  CRATE_CC_NO_DEFAULTS = None\r\n  DEBUG = Some(\"false\")\r\n  running: \"clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-unknown-unknown\" \"-I\" \"/Users/jon.padilla/Documents/datadoge/vector/target/wasm32-unknown-unknown/release/build/onig_sys-e919ee5bf7cf8573/out\" \"-I\" \"oniguruma/src\" \"-DONIG_DISABLE_DIRECT_THREADING=1\" \"-DONIG_EXTERN=__attribute__((visibility(\\\"default\\\")))\" \"-o\" \"/Users/jon.padilla/Documents/datadoge/vector/target/wasm32-unknown-unknown/release/build/onig_sys-e919ee5bf7cf8573/out/oniguruma/src/regexec.o\" \"-c\" \"oniguruma/src/regexec.c\"\r\n  cargo:warning=In file included from oniguruma/src/regexec.c:36:\r\n  cargo:warning=oniguruma/src/regint.h:110:10: fatal error: 'stdlib.h' file not found\r\n  cargo:warning=#include <stdlib.h>\r\n  cargo:warning=         ^~~~~~~~~~\r\n  cargo:warning=1 error generated.\r\n  exit status: 1\r\n\r\n  --- stderr\r\n\r\n\r\n  error occurred: Command \"clang\" \"-O3\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"--target=wasm32-unknown-unknown\" \"-I\" \"/Users/jon.padilla/Documents/datadoge/vector/target/wasm32-unknown-unknown/release/build/onig_sys-e919ee5bf7cf8573/out\" \"-I\" \"oniguruma/src\" \"-DONIG_DISABLE_DIRECT_THREADING=1\" \"-DONIG_EXTERN=__attribute__((visibility(\\\"default\\\")))\" \"-o\" \"/Users/jon.padilla/Documents/datadoge/vector/target/wasm32-unknown-unknown/release/build/onig_sys-e919ee5bf7cf8573/out/oniguruma/src/regexec.o\" \"-c\" \"oniguruma/src/regexec.c\" with args \"clang\" did not execute successfully (status code exit status: 1).\r\n\r\n\r\nwarning: build failed, waiting for other jobs to finish...\r\nError: Compiling your crate to WebAssembly failed\r\nCaused by: failed to execute `cargo build`: exited with exit status: 101\r\n  full command: \"cargo\" \"build\" \"--lib\" \"--release\" \"--target\" \"wasm32-unknown-unknown\"\r\njon.padilla@COMP-W936N7C769 wasm %    \r\n```\r\n\r\nref: vectordotdev/vector#14654\r\nref: vectordotdev/vrl#22",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/17/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/17/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/18",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/18/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/18/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/18/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/18",
        "id": 1643917561,
        "node_id": "I_kwDOJN63t85h_DD5",
        "number": 18,
        "title": "[Web Playground] Make get_hostname() function wasm compatible ",
        "user": {
            "login": "jonathanpv",
            "id": 44036128,
            "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathanpv",
            "html_url": "https://github.com/jonathanpv",
            "followers_url": "https://api.github.com/users/jonathanpv/followers",
            "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
            "repos_url": "https://api.github.com/users/jonathanpv/repos",
            "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-03T21:14:33Z",
        "updated_at": "2023-03-28T13:10:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nCurrent error message when attempting to compile to wasm\r\n\r\n```shell\r\njon.padilla@COMP-W936N7C769 wasm % wasm-pack build --target web && python3 -m http.server\r\n[INFO]: \ud83c\udfaf  Checking for the Wasm target...\r\n[INFO]: \ud83c\udf00  Compiling to Wasm...\r\n   Compiling match_cfg v0.1.0\r\n   Compiling hostname v0.3.1\r\nerror: Unsupported target OS! Create an issue: https://github.com/svartalf/hostname/issues/new\r\n  --> /Users/jon.padilla/.cargo/registry/src/github.com-1ecc6299db9ec823/hostname-0.3.1/src/lib.rs:81:9\r\n   |\r\n81 |         compile_error!(\"Unsupported target OS! Create an issue: https://github.com/svartalf/hostname/issues/new\");\r\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `sys`\r\n   --> /Users/jon.padilla/.cargo/registry/src/github.com-1ecc6299db9ec823/hostname-0.3.1/src/lib.rs:105:5\r\n    |\r\n105 |     sys::get()\r\n    |     ^^^ use of undeclared crate or module `sys`\r\n\r\nFor more information about this error, try `rustc --explain E0433`.\r\nerror: could not compile `hostname` due to 2 previous errors\r\nError: Compiling your crate to WebAssembly failed\r\nCaused by: failed to execute `cargo build`: exited with exit status: 101\r\n  full command: \"cargo\" \"build\" \"--lib\" \"--release\" \"--target\" \"wasm32-unknown-unknown\"\r\njon.padilla@COMP-W936N7C769 wasm % \r\n```\r\n\r\nref: vectordotdev/vector#14654\r\nref: vectordotdev/vrl#22",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/18/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/18/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/20",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/20/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/20/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/20/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/20",
        "id": 1643918768,
        "node_id": "I_kwDOJN63t85h_DWw",
        "number": 20,
        "title": "[Web Playground] Make `log()` function wasm compatible",
        "user": {
            "login": "jonathanpv",
            "id": 44036128,
            "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathanpv",
            "html_url": "https://github.com/jonathanpv",
            "followers_url": "https://api.github.com/users/jonathanpv/followers",
            "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
            "repos_url": "https://api.github.com/users/jonathanpv/repos",
            "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-03T21:06:02Z",
        "updated_at": "2023-03-28T13:10:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nCurrently the log function in VRL stdlib doesn't print out anything @fuchsnj believes this is because the log gets sent to nothing due to wasm compilation . \r\n\r\n<img width=\"1057\" alt=\"image\" src=\"https://user-images.githubusercontent.com/44036128/193678369-0718bc6a-45d6-4b28-a7ec-86999fcab379.png\">\r\n\r\nPossible way to fix this would be to add an extern call to the log function for console.log(). \r\n\r\nref: vectordotdev/vector#14654\r\nref: vectordotdev/vrl#22",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/20/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/20/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/21",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/21/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/21/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/21/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/21",
        "id": 1643919850,
        "node_id": "I_kwDOJN63t85h_Dnq",
        "number": 21,
        "title": "Expand VRL test harness to allow running tests in WASM environment",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-09-30T12:35:56Z",
        "updated_at": "2023-03-28T13:09:55Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "While working on vectordotdev/vector#14653 and vectordotdev/vector#14654 we need a way to ensure that the gains achieved in those tasks aren't lost over time. To ensure Wasm compilation (and runtime) continues to function, we should expand our [test harness](https://github.com/vectordotdev/vector/tree/bf6efe98887ce65f58ef06e2b26159d452fb01a4/lib/vrl/tests) to allow running the tests in the `wasm32-unknown-unknown` environment.\r\n\r\nThis allows us to catch potential issues through our continuous integration set-up, providing a robust level of guarantee that the playground continues to function for users as development moves forward.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/21/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/21/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/22",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/22/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/22/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/22/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/22",
        "id": 1643921085,
        "node_id": "I_kwDOJN63t85h_D69",
        "number": 22,
        "title": "VRL Playground",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320995784,
                "node_id": "LA_kwDOJN63t88AAAABPSfzyA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/Epic",
                "name": "Epic",
                "color": "0366d6",
                "default": false,
                "description": "Larger, user-centric issue that contains multiple sub-issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "JeanMertz",
                "id": 383250,
                "node_id": "MDQ6VXNlcjM4MzI1MA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/JeanMertz",
                "html_url": "https://github.com/JeanMertz",
                "followers_url": "https://api.github.com/users/JeanMertz/followers",
                "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
                "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
                "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
                "repos_url": "https://api.github.com/users/JeanMertz/repos",
                "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
                "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            },
            {
                "login": "jonathanpv",
                "id": 44036128,
                "node_id": "MDQ6VXNlcjQ0MDM2MTI4",
                "avatar_url": "https://avatars.githubusercontent.com/u/44036128?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jonathanpv",
                "html_url": "https://github.com/jonathanpv",
                "followers_url": "https://api.github.com/users/jonathanpv/followers",
                "following_url": "https://api.github.com/users/jonathanpv/following{/other_user}",
                "gists_url": "https://api.github.com/users/jonathanpv/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jonathanpv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jonathanpv/subscriptions",
                "organizations_url": "https://api.github.com/users/jonathanpv/orgs",
                "repos_url": "https://api.github.com/users/jonathanpv/repos",
                "events_url": "https://api.github.com/users/jonathanpv/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jonathanpv/received_events",
                "type": "User",
                "user_view_type": "public",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-30T12:24:01Z",
        "updated_at": "2023-03-28T13:10:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This is a tracking issue for the \"VRL Playground\" feature @jonathanpv is working on.\r\n\r\n**Project Name**\r\n\r\nVRL Playground\r\n\r\n**Project Summary**\r\n\r\nA website that functions similar to the VRL REPL, in that it allows users to try out their VRL programs in real-time, before applying it to a Vector configuration.\r\n\r\n**Background**\r\n\r\nVRL (Vector Remap Language) is the domain-specific language used in Vector to programmatically remap events, or apply conditional transforms. It is intended as a safe and easy-to-use language that is performant enough to handle high-throughput use-cases.\r\n\r\n**Goals**\r\n\r\n_essential goals_\r\n\r\n- [x] vectordotdev/vector#14653\r\n- [x] vectordotdev/vector#14654\r\n- [x] vectordotdev/vector#14656\r\n- [x] vectordotdev/vector#14657\r\n- [x] vectordotdev/vector#14659\r\n\r\n_desired goals_\r\n\r\n- [x] vectordotdev/vector#14711\r\n- [x] vectordotdev/vector#14712\r\n- [x] vectordotdev/vector#14713\r\n- [ ] vectordotdev/vrl#21\r\n- [ ] vectordotdev/vrl#14\r\n\r\n_stretch goals_\r\n\r\n- [ ] Add syntax highlighting\r\n- [ ] Add keyboard shortcut support\r\n- [ ] Add advanced IDE features (auto-completion, inline docs, etc...)\r\n- [ ] Add button to convert tested program to working Vector `config.toml` file\r\n- [ ] Expand `vector vrl` CLI to run playground locally (`vector vrl playground`)\r\n- [ ] Support multiple VRL (Vector) versions",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/22/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/22/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/270",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/270/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/270/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/270/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/270",
        "id": 1767678611,
        "node_id": "I_kwDOJN63t85pXKKT",
        "number": 270,
        "title": "Add an optional parameter to the parse_linux_authorization function to specify a timezone",
        "user": {
            "login": "Qazeer",
            "id": 5614972,
            "node_id": "MDQ6VXNlcjU2MTQ5NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5614972?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Qazeer",
            "html_url": "https://github.com/Qazeer",
            "followers_url": "https://api.github.com/users/Qazeer/followers",
            "following_url": "https://api.github.com/users/Qazeer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Qazeer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Qazeer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Qazeer/subscriptions",
            "organizations_url": "https://api.github.com/users/Qazeer/orgs",
            "repos_url": "https://api.github.com/users/Qazeer/repos",
            "events_url": "https://api.github.com/users/Qazeer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Qazeer/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-09-21T10:15:25Z",
        "updated_at": "2023-06-27T17:36:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nThe VRL `parse_linux_authorization` function uses the timezone of the current machine (the one executing Vector) to convert timestamps to UTC. The timezone of the current machine may differ from the timezone of the original machine (that emitted the logs), thus potentially creating a disparity between the deduced and original timestamps.\r\n\r\n\n\n### Attempted Solutions\n\nWithin Vector's existing features, a timestamp could be converted to a string with `format_timestamp`, the timezone manually added, and the timestamp string converted back to a timestamp using `to_timestamp`.  But this solution is quite hacky.\n\n### Proposal\n\nA better solution would be to add an optional parameter for the `parse_linux_authorization` function to specify the timezone of the log files and use the specified timezone for the conversion to UTC directly within `parse_linux_authorization`.\n\n### References\n\n_No response_\n\n### Version\n\nvector 0.24.0 (x86_64-pc-windows-msvc 43267b9 2022-08-30)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/270/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/24",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/24/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/24/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/24/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/24",
        "id": 1643925958,
        "node_id": "I_kwDOJN63t85h_FHG",
        "number": 24,
        "title": "Code suggestions can suggest writing to immutable fields",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-15T19:31:58Z",
        "updated_at": "2023-03-28T13:13:16Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nA [user in Discord](https://discord.com/channels/742820443487993987/1020017447568424960/1020042153667350568) was trying to write a VRL condition, but it complained the input to a function might not be a string, so it suggested modifying the input first with `.message = string!(.message)`. This would normally work, except in conditions the event cannot be mutated. The suggestion could instead be inlined in the function, or maybe use local variables which are never (currently) read only.\r\n\r\nOriginal VRL code\r\n```coffee\r\n!contains(.message, \"ELB-HealthChecker\")\r\n```\r\n\r\n```\r\nerror[E110]: invalid argument type\r\n  \u250c\u2500 :1:11\r\n  \u2502\r\n1 \u2502 !contains(.message, \"ELB-HealthChecker\")\r\n  \u2502           ^^^^^^^^\r\n  \u2502           \u2502\r\n  \u2502           this expression resolves to any\r\n  \u2502           but the parameter \"value\" expects the exact type string\r\n  \u2502\r\n  = try: ensuring an appropriate type at runtime\r\n  =\r\n  =     .message = string!(.message)\r\n  =     contains(.message, \"ELB-HealthChecker\")\r\n  =\r\n  = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails\r\n  =\r\n  =     .message = to_string(.message) ?? \"default\"\r\n  =     contains(.message, \"ELB-HealthChecker\")\r\n  =\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = learn more about error code 110 at https://errors.vrl.dev/110\r\n  = see language documentation at https://vrl.dev\r\n  = try your code in the VRL REPL, learn more at https://vrl.dev/examples\r\n```\r\n\r\n\r\nSuggested Change\r\n```coffee\r\n.message = string!(.message)\r\n!contains(.message, \"ELB-HealthChecker\")\r\n```\r\n\r\n```\r\nerror[E315]: mutation of read-only value                                                                                                                                                                         \u2502\r\n\u2502   \u250c\u2500 :1:1                                                                                                                                                                                                        \u2502\r\n\u2502   \u2502                                                                                                                                                                                                              \u2502\r\n\u2502 1 \u2502 .message = string!(.message)                                                                                                                                                                                 \u2502\r\n\u2502   \u2502 ^^^^^^^^^^ mutation of read-only value                                                                                                                                                                       \u2502\r\n\u2502   \u2502                                                                                                                                                                                                              \u2502\r\n\u2502   = see language documentation at https://vrl.dev                                                                                                                                                                \u2502\r\n\u2502   = try your code in the VRL REPL, learn more at https://vrl.dev/examples                                                                                                                                        \u2502\r\n\u2502                                                                                                                                                                                                                  \u2502\r\n\u2502 error[E110]: invalid argument type                                                                                                                                                                               \u2502\r\n\u2502   \u250c\u2500 :2:10                                                                                                                                                                                                       \u2502\r\n\u2502   \u2502                                                                                                                                                                                                              \u2502\r\n\u2502 2 \u2502 contains(.message, \"ELB-HealthChecker\")                                                                                                                                                                      \u2502\r\n\u2502   \u2502          ^^^^^^^^                                                                                                                                                                                            \u2502\r\n\u2502   \u2502          \u2502                                                                                                                                                                                                   \u2502\r\n\u2502   \u2502          this expression resolves to any                                                                                                                                                                     \u2502\r\n\u2502   \u2502          but the parameter \"value\" expects the exact type string                                                                                                                                             \u2502\r\n\u2502   \u2502                                                                                                                                                                                                              \u2502\r\n\u2502   = try: ensuring an appropriate type at runtime                                                                                                                                                                 \u2502\r\n\u2502   =                                                                                                                                                                                                              \u2502\r\n\u2502   =     .message = string!(.message)                                                                                                                                                                             \u2502\r\n\u2502   =     contains(.message, \"ELB-HealthChecker\")                                                                                                                                                                  \u2502\r\n\u2502   =                                                                                                                                                                                                              \u2502\r\n\u2502   = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails                                                                                                     \u2502\r\n\u2502   =                                                                                                                                                                                                              \u2502\r\n\u2502   =     .message = to_string(.message) ?? \"default\"                                                                                                                                                              \u2502\r\n\u2502   =     contains(.message, \"ELB-HealthChecker\")                                                                                                                                                                  \u2502\r\n\u2502   =                                                                                                                                                                                                              \u2502\r\n\u2502   = see documentation about error handling at https://errors.vrl.dev/#handling                                                                                                                                   \u2502\r\n\u2502   = learn more about error code 110 at https://errors.vrl.dev/110                                                                                                                                                \u2502\r\n\u2502   = see language documentation at https://vrl.dev                          \r\n```\r\n\r\n\r\nCorrect suggestion\r\n```coffee\r\n!contains(string!(.message), \"ELB-HealthChecker\")\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.24.0\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/24/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/24/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/25",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/25/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/25/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/25/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/25",
        "id": 1643926335,
        "node_id": "I_kwDOJN63t85h_FM_",
        "number": 25,
        "title": "Add `query`/`reference` as a first-class VRL type.",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-09-09T19:51:47Z",
        "updated_at": "2023-09-12T11:15:11Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nToday the syntax for \"reading a value from an object\", and \"a query path referencing a field of an object\" are identical.\r\n\r\n### Examples\r\nquery an object\r\n```coffee\r\n. = {\"foo\": {\"bar\": 3}}\r\nx = .foo.bar\r\n# x is 3\r\n```\r\n\r\ndelete a field\r\n```coffee\r\n. = {\"foo\": {\"bar\": 3}}\r\n\r\n# the function arg is treated as a \"query\". The value 3 is not passed into the function.\r\ndel(.foo.bar)\r\n\r\n```\r\n\r\n\r\n\r\nHaving a distinct syntax for creating references vs accessing a field could allow more elegant code and reduce confusion here.\r\nAs an [example](https://discord.com/channels/742820443487993987/1017219484630651020), a vector user attempted to delete multiple fields in an object by using the following code (which doesn't work):\r\n\r\n```coffee\r\nfields = [\".source_type\", \".kubernetes.pod_ip\"]\r\nfor_each(fields) -> |_index, value| {\r\n  del(value)\r\n}\r\n```\r\n\r\n`fields` here just contains an array of strings, which fails to compile since `del` expects \"queries\".  If `fields` was switched to\r\n`fields = [.source_type, .kubernetes.pod_ip]`, then it would just contain an array of the _values_ that the query paths point to.\r\n\r\nI am proposing that additional syntax is added to create \"references\", which just point to specific fields/indices of objects/arrays.\r\nThis is just a standard query path with `&` appended. For example, `a = &.foo.bar` would mean that the local variable `a` is a reference to `.foo.bar`.  The above invalid example could be re-written with these changes so it would work as expected.\r\n\r\n```coffee\r\nfields = [&.source_type, &.kubernetes.pod_ip]\r\nfor_each(fields) -> |_index, value| {\r\n  del(value)\r\n}\r\n```\r\n\r\nNote that this would require some additional work before it could be it could be implemented:\r\n- https://github.com/vectordotdev/vrl/issues/26\r\n\r\n\r\n### Version\r\n\r\n0.24.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/25/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/25/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/26",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/26/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/26/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/26/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/26",
        "id": 1643926877,
        "node_id": "I_kwDOJN63t85h_FVd",
        "number": 26,
        "title": "Allow VRL to have additional `Value` types not in Vector",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-09T19:29:34Z",
        "updated_at": "2023-03-28T13:13:49Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nPreviously Vector and VRL had entirely separate `Value` types, since VRL has more types (such as regex) than Vector natively supports. These types were merged into a single `Value` type that contains all of the possible options to reduce the performance bottleneck of converting between the types. This is fast, but requires Vector itself to handle any type that VRL might want to have. (e.g. regex)\r\n\r\nI propose that these are split again (but differently). VRL gets it's own `Value` type that can contain any type valid in VRL. There will also be a `Value` type shared between the `Target` (e.g. Vector) and VRL, which is a subset of what VRL can support (basically just the JSON types). This allows VRL to have additional types that don't need to be supported by the `Target`, while still allowing fast conversions between the two types.\r\n\r\nIn order for this to work, VRL specific types will be restricted to local variables only in VRL, and can't be assigned to any external target.\r\n\r\nTypes will be checked at (VRL) compile time to ensure the following can't be assigned to external values, so type conversion won't need to happen at runtime\r\n- local variables (or queries pointing to local variables) that _ever_ contain VRL specific types (before or after an attempted external assignment.) (This could potentially be relaxed a bit depending on the implementation)\r\n- function return values that could potentially contain VRL specific types\r\n- literals that are VRL specific types\r\n\r\nAn example that could take advantage of allowing new types is https://github.com/vectordotdev/vrl/issues/25\r\n\r\n### Version\r\n\r\n0.24.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/26/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/26/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/27",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/27/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/27/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/27/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/27",
        "id": 1643927431,
        "node_id": "I_kwDOJN63t85h_FeH",
        "number": 27,
        "title": "`map_values` function closure argument type def can be invalid when using `recursive: true`",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-08T16:22:41Z",
        "updated_at": "2023-03-28T13:14:25Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nIf you run the following line\r\n```coffee\r\nmap_values({\"a\": \"string\", \"b\": {\"c\": 3}}, recursive: true) -> |value|{log(type_def(value))}\r\n```\r\nThe output shows the type definition of `value`, which is\r\n```json\r\n{\"bytes\":true,\"object\":{\"c\":{\"integer\":true}}}\r\n```\r\nSince `recursive` is true, this should have included an `integer` (at the root), but it doesn't.\r\n\r\nThe following example shows that the integer is indeed passed into the closure, which aborts if ran.\r\n```coffee\r\nmap_values({\"a\": \"string\", \"b\": {\"c\": 3}}, recursive: true) -> |value|{if is_integer(value) {abort} else {value\r\n```\r\n\r\n\r\nThe issue is even worse if you modify the input as it's running, and the modifications add types that didn't originally exist.\r\nThis may not have been intentional though, and it covered under this issue instead: https://github.com/vectordotdev/vrl/issues/28\r\n\r\n\r\n### Version\r\n\r\n0.24.0\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/27/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/27/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/28",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/28/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/28/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/28/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/28",
        "id": 1643927889,
        "node_id": "I_kwDOJN63t85h_FlR",
        "number": 28,
        "title": "`map_values` can infinitely recurse / stack overflow",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-09-08T16:11:43Z",
        "updated_at": "2023-03-28T13:14:25Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nThe following example has infinite recursion that overflows the stack.\r\n\r\n```coffee\r\n$ map_values({\"a\": {\"b\": true}}, recursive: true) -> |value|{{\"c\": {\"d\": true}}}\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\nAborted (core dumped)\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.24.0\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/28/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/28/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/271",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/271/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/271/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/271/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/271",
        "id": 1767679552,
        "node_id": "I_kwDOJN63t85pXKZA",
        "number": 271,
        "title": "improve parse_key_value to support nesting , match with encode_key_value",
        "user": {
            "login": "ccmsi",
            "id": 20419955,
            "node_id": "MDQ6VXNlcjIwNDE5OTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/20419955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ccmsi",
            "html_url": "https://github.com/ccmsi",
            "followers_url": "https://api.github.com/users/ccmsi/followers",
            "following_url": "https://api.github.com/users/ccmsi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ccmsi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ccmsi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ccmsi/subscriptions",
            "organizations_url": "https://api.github.com/users/ccmsi/orgs",
            "repos_url": "https://api.github.com/users/ccmsi/repos",
            "events_url": "https://api.github.com/users/ccmsi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ccmsi/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-05T11:32:50Z",
        "updated_at": "2023-06-21T14:03:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nGoals:\r\n - make parse_key_value able to interpreted nested / structured data\r\n - make parse_key_value match encode_key_value\r\n\r\nCurrently:\r\n```coffee\r\nparse_key_value!(encode_key_value({\"agent\": {\"name\": \"vector\"}, \"log\": {\"file\": {\"path\": \"my.log\"}}, \"event\": \"log\"}))\r\n{ \"agent.name\": \"vector\", \"event\": \"log\", \"log.file.path\": \"my.log\" }\r\n```\r\n\r\nRequest:\r\n```coffee\r\nparse_key_value!(encode_key_value({\"agent\": {\"name\": \"vector\"}, \"log\": {\"file\": {\"path\": \"my.log\"}}, \"event\": \"log\"}), nesting: true)\r\n{\"agent\": {\"name\": \"vector\"}, \"log\": {\"file\": {\"path\": \"my.log\"}}, \"event\": \"log\"}\r\n```\r\n\r\nThis change allows parse_key_value to support parse regex such that parse_regex output in VRL can be made equivalent to old parse_regex transform parsing into nested data in an easy way.\r\n\r\n```coffee\r\n.fromregex = {\"x.x\":1, \"x.y\":2}\r\nparse_key_value!(encode_key_value(.fromregex), nesting: true)\r\n{'x': {'x':1, 'y':2}}\r\n```\r\n\r\n### Attempted Solutions\r\n\r\nFound no way to translate dotted field names into nested/ structured object.\r\n\r\n### Proposal\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/271/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/271/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/29",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/29/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/29/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/29/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/29",
        "id": 1643930188,
        "node_id": "I_kwDOJN63t85h_GJM",
        "number": 29,
        "title": "Find array/object elements",
        "user": {
            "login": "max-arnold",
            "id": 370942,
            "node_id": "MDQ6VXNlcjM3MDk0Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/max-arnold",
            "html_url": "https://github.com/max-arnold",
            "followers_url": "https://api.github.com/users/max-arnold/followers",
            "following_url": "https://api.github.com/users/max-arnold/following{/other_user}",
            "gists_url": "https://api.github.com/users/max-arnold/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/max-arnold/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/max-arnold/subscriptions",
            "organizations_url": "https://api.github.com/users/max-arnold/orgs",
            "repos_url": "https://api.github.com/users/max-arnold/repos",
            "events_url": "https://api.github.com/users/max-arnold/events{/privacy}",
            "received_events_url": "https://api.github.com/users/max-arnold/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-08-29T09:25:27Z",
        "updated_at": "2023-03-28T13:15:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nI'm trying to parse SaltStack logs that contain job results in JSON format. I need to extract the first job argument from a list of positional and keyword arguments.\r\n\r\nGiven these lists, how to return a first list element that is a string? Or null/failure if the list is empty.\r\n\r\nInput\r\n\r\n```\r\n[]\r\n[\"abc\"]\r\n[{}, \"abc\"]\r\n[\"abc\", \"def\", {\"key1\":{}, \"key2\":\"val2\"}]\r\n```\r\n\r\n\r\nOutput\r\n\r\n```\r\nnull\r\nabc\r\nabc\r\nabc\r\n```\n\n### Attempted Solutions\n\nA solution proposed by @JeanMertz on Discord looks like this:\r\n\r\n```\r\nresult = null\r\nfor_each(.) -> |_index, value| {\r\n    if result == null && is_string(value) {\r\n        result = value\r\n    }\r\n}\r\n\r\nresult\r\n```\r\n\r\nAnd this is what I ended up using (just for the reference):\r\n\r\n```\r\n.fun_args = []\r\n.fun_kwargs = {}\r\nmap_values(array(.data.fun_args) ?? []) -> |v| { if is_string(v) { .fun_args = push(.fun_args, v) } else if is_object(v) { .fun_kwargs = v }}\r\n.first_arg = .fun_args[0]\r\n```\n\n### Proposal\n\nJean also suggested that this would clearly be a lot easier with a dedicated find enumeration function:\r\n\r\n```\r\n# Return the first value in the collection \r\n# for which the closure returns `true`, or\r\n# return `null` if no match is found.\r\nfind(.) -> |_index, value| {\r\n    is_string(value)\r\n}\r\n```\r\n\r\nPersonally I think this could be generalized to also support objects to find a specific key based on some matching function (like a regex) or to find by value. The primary requirement is being able to use an arbitrary matching expression.\r\n\r\nWhether it should return null or fail is up to the VRL language designers.\n\n### References\n\n_No response_\n\n### Version\n\n0.23.3",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/29/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/29/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/30",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/30/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/30/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/30/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/30",
        "id": 1643930660,
        "node_id": "I_kwDOJN63t85h_GQk",
        "number": 30,
        "title": "Improve raw strings",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-08-24T14:08:36Z",
        "updated_at": "2023-03-28T13:15:58Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nToday the backslash (`\\`) behavior inside raw strings can be confusing / inconsistent. The [docs](https://master.vector.dev/docs/reference/vrl/expressions/#string) claim that backslashes have \"no special meaning\", however a backslash currently causes the parser to always include the next character (_including_ the backslash itself). That means a blackslash can be used to include a single quote inside of a raw string, but this comes with some odd edge cases:\r\n\r\n1. A single quote can't be included in a raw string without a leading backslash\r\n2. The last character of a raw string cannot be a backslash\r\n\r\nIt would be nice if these restrictions could be lifted and a backslash actually had no special meaning.\r\n\r\n\r\n### Proposal\r\n\r\nOne possible solution is to allow raw string literals similar to Rust, where you can create a custom delimiter out of multiple characters, which would allow anything to be used inside of the raw string literal.\r\n\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/30/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/30/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/31",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/31/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/31/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/31/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/31",
        "id": 1643933257,
        "node_id": "I_kwDOJN63t85h_G5J",
        "number": 31,
        "title": "create `DEVELOPMENT.md` for VRL crates specifically",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5321068312,
                "node_id": "LA_kwDOJN63t88AAAABPSkPGA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20dev",
                "name": "domain: dev",
                "color": "343639",
                "default": false,
                "description": "Anything related to the development environment"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-08-23T20:13:46Z",
        "updated_at": "2023-03-28T13:17:31Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Reading through this blog post:\r\n\r\nhttps://briankung.dev/2022/08/18/contributing-to-the-vector-remap-language/\r\n\r\nIt reads:\r\n\r\n> From a language ergonomics perspective, while I still enjoyed using Rust, the compile times did become painful. Compiling a debug version of vector from scratch took 7 minutes and 30 seconds. I later switched to using the mold linker and it went down to 6 minutes, but it was still disruptive. Meanwhile, a full release mode compile would take 14 minutes on my Core i9 iMac. Thankfully, incremental compiles were much quicker.\r\n\r\nIt would have likely saved several minutes of compilation time if the contributor had known that you can compile _only_ the `stdlib` crate, and within that crate _only_ the specific function(s) you're working with.\r\n\r\nIt's probably worth documenting this in a dedicated `DEVELOPMENT.md` file under `lib/vrl`.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/31/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/31/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/33",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/33/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/33/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/33/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/33",
        "id": 1643934276,
        "node_id": "I_kwDOJN63t85h_HJE",
        "number": 33,
        "title": "VRL: Allow queries to point to the root of a variable",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-08-10T17:29:57Z",
        "updated_at": "2023-03-28T13:18:05Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nCurrently functions that take \"query\" arguments cannot point to the root of a local variable. It might be useful to allow this.\r\n\r\nThat means you can't call the following functions with arguments pointing to the root of a local variable\r\n- `del`\r\n- `exists`\r\n- `unnest`\r\n\r\nWhile `del` and `exist` might not be particularly useful on the root of a local variable, it could be reasonable to use `unnest`, or some future function that uses queries. And from a consistency perspective, it would be nice to support it.\r\nYou can today, for example, call `unnest` on the root event, or event `del` the root event, but not a local variable.\r\n\r\n\r\n### Version\r\n\r\nmaster / 1b5f585e7b213ca3fd370ba6a7462572207b6e4c",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/33/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/33/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/186",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/186/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/186/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/186/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/186",
        "id": 1658877408,
        "node_id": "I_kwDOJN63t85i4HXg",
        "number": 186,
        "title": "VRL `Target` methods should be infallible",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-08-10T14:17:05Z",
        "updated_at": "2023-05-01T20:52:24Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nToday, the `Target` trait has 4 methods.\r\n\r\n```rust\r\n    fn target_insert(...) -> Result<(), String>;\r\n    fn target_get(...) -> Result<Option<&Value>, String>;\r\n    fn target_get_mut(...) -> Result<Option<&mut Value>, String>;\r\n    fn target_remove(...) -> Result<Option<Value>, String>;\r\n```\r\n\r\nAll four of these are fallible, however none of the implementations should actually be able to fail at runtime. The VRL type system expects these to always succeed, so any failures can result in invalid type definitions. All of these functions should be modified to be infallible.\r\n\r\nThere are some places these can still fail at runtime, but the errors are just silently ignored. This is mostly around metrics insertion. This can be solved by adding more compile-time type information to move the errors to compile-time (such as defining \"assignable types\" and only allowing assignments that match the correct type)\r\n\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/186/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/35",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/35/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/35/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/35/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/35",
        "id": 1643935332,
        "node_id": "I_kwDOJN63t85h_HZk",
        "number": 35,
        "title": "VRL: Partially fallible blocks can create invalid type definitions",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-08-01T19:54:35Z",
        "updated_at": "2023-03-28T13:25:58Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nA block can contain fallible expressions, which propagates the fallibility up to the entire block. If the fallibility is handled there, that means that any fallible expression in the block can break execution out of the block, effectively making some of the expressions _optional_. The current type definition assumes all expressions will always execute. This can result in invalid type definitions.\r\n\r\nUnfortunately, there is a diagnostic bug preventing an example reproducing this on `0.23.0` (https://github.com/vectordotdev/vrl/issues/36)\r\n\r\nBelow is an example reproducing the issue on `0.22.1`, but I believe this is also an issue in both `0.23.0` and master (once the above bug is fixed).\r\n\r\n```coffeescript\r\n$ type_def(.)\r\n{ \"object\": {  }, \"object_unknown_infinite\": { \"any\": true } }\r\n\r\n$ x, err = {.a=1;push(.x,1);.b=2}\r\n\"function call error for \\\"push\\\" at (15:25): expected array, got null\"\r\n\r\n$ .\r\n{ \"a\": 1 }\r\n\r\n$ type_def(.)\r\n{ \"object\": { \"a\": { \"integer\": true }, \"b\": { \"integer\": true } } }\r\n```\r\n\r\n### Version\r\n\r\n0.22.1\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/35/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/35/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/36",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/36/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/36/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/36/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/36",
        "id": 1643936942,
        "node_id": "I_kwDOJN63t85h_Hyu",
        "number": 36,
        "title": "VRL: Diagnostics point to wrong expression for fallibility error",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            },
            {
                "id": 5321077159,
                "node_id": "LA_kwDOJN63t88AAAABPSkxpw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20regression",
                "name": "meta: regression",
                "color": "DBE0E9",
                "default": false,
                "description": "This is a regression from a previous version"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-08-01T19:39:48Z",
        "updated_at": "2023-03-28T13:19:43Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nIn the following example, the `push(.x, 1)` is fallible, but the diagnostic error points to the incorrect expression.\r\n\r\n```coffeescript\r\n{\r\n   .a=1\r\n   push(.x,1)\r\n   .b=2\r\n}\r\n```\r\n```text\r\n\r\nerror[E103]: unhandled fallible assignment\r\n  \u250c\u2500 :4:7\r\n  \u2502\r\n4 \u2502    .b=2\r\n  \u2502    -- ^\r\n  \u2502    \u2502  \u2502\r\n  \u2502    \u2502  this expression is fallible\r\n  \u2502    \u2502  update the expression to be infallible\r\n  \u2502    or change this to an infallible assignment:\r\n  \u2502    .b, err = 2\r\n  \u2502\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = learn more about error code 103 at https://errors.vrl.dev/103\r\n  = see language documentation at https://vrl.dev\r\n\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/36/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/36/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/197",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/197/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/197/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/197/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/197",
        "id": 1675378539,
        "node_id": "I_kwDOJN63t85j3D9r",
        "number": 197,
        "title": "Closures are compiled assuming they only run exactly once",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-08-01T15:20:42Z",
        "updated_at": "2023-04-19T18:06:48Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nClosures can be ran any number of times, including none. But type definitions are calculated assuming they run exactly once, which can result in invalid type definitions.\r\n\r\n### Example\r\n```coffeescript\r\n$ . = {}\r\n{  }\r\n\r\n$ map_values([]) -> |i| {.a = \"foo\"}\r\n[]\r\n\r\n$ type_def(.)\r\n{ \"object\": { \"a\": { \"bytes\": true } } }\r\n\r\n$ .\r\n{  }\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.23.0\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/197/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/37",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/37/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/37/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/37/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/37",
        "id": 1643938476,
        "node_id": "I_kwDOJN63t85h_IKs",
        "number": 37,
        "title": "VRL: Runtime `abort` is implicitly converted to a fallible error instead of propagating",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-29T19:40:45Z",
        "updated_at": "2023-03-28T13:20:31Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\n<!-- Thank you for keeping this note for the community -->\n\n\n### Problem\n\nIn all of these examples, the program should be aborted, but instead it continues running. The 2nd example shows how VRL treats the abort as a fallible expression. An `abort` should not be recoverable, and should not be treated as \"fallible\".\nExample 3 shows the expression continues to execute (since the CLI examples don't clearly show aborts)\n\n### Example 1\n```coffeescript\n$ 43 % {abort} ?? 0\n0\n```\n\n### Example 2\n```coffeescript\n$ x, err = 1 + {abort}\n\"aborted\"\n\n$ err\n\"aborted\"\n```\n\n### Example 3\n```coffeescript\n$ {x, err = 1 + {abort}; 5}\n\n5\n```\n\n\n### Version\n\n0.23.0\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/37/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/37/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/38",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/38/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/38/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/38/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/38",
        "id": 1643938796,
        "node_id": "I_kwDOJN63t85h_IPs",
        "number": 38,
        "title": "VRL: \"success\" value of fallible assignment expressions can have an invalid type def",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-29T19:21:20Z",
        "updated_at": "2023-03-28T13:42:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nWhen a fallible function fails, the \"success\" variable is assigned a \"default\" value of the same type as if it actually succeeded. Unfortunately this value is simplified and doesn't always necessarily match the type definition. Fixing the return value to actually match the type definition is _impossible_ in the general case, therefore the type definition must change. Making the type definition match the current return value might be problematic and will make using the returned value more difficult though.\r\n\r\n\r\n```coffeescript\r\n$ x, err = push(.x, 1)\r\n\"function call error for \\\"push\\\" at (9:20): expected array, got null\"\r\n\r\n$ type_def(x)\r\n{ \"array\": { \"0\": { \"integer\": true } }, \"array_unknown_infinite\": { \"any\": true } }\r\n\r\n$ type_def(x[0])\r\n{ \"integer\": true }\r\n\r\n$ x[0]\r\nnull\r\n```\r\n\r\n\r\nA solution to this might also address https://github.com/vectordotdev/vrl/issues/74\r\n\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/38/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/38/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/39",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/39/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/39/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/39/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/39",
        "id": 1643939409,
        "node_id": "I_kwDOJN63t85h_IZR",
        "number": 39,
        "title": "Function arguments aren't guaranteed to resolve in order",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-07-28T19:33:33Z",
        "updated_at": "2023-03-28T13:21:05Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nWhen calculating the type definition of a function call, the arguments are evaluated in order, from left to right.\r\n\r\nHowever, there is nothing that guarantees the actual arguments are resolved in the same order (or resolved at all).\r\n\r\nArguments should be resolved in order and only the `Value` passed to functions.\r\n\r\n```coffeescript\r\n\r\n$ format_number(1000, 2, {.foo = \"message\"; \".\"}, {.foo = true; \",\"})\r\n\"1,000.00\"\r\n\r\n$ .\r\n{ \"foo\": \"message\" }\r\n\r\n$ type_def(.)\r\n{ \"object\": { \"foo\": { \"boolean\": true } } }\r\n```\r\n\r\n### Version\r\n\r\nmaster / 9a049b5d18590a195aec0fa8958f80245ca1c3b0\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/39/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/39/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/40",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/40/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/40/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/40/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/40",
        "id": 1643939996,
        "node_id": "I_kwDOJN63t85h_Iic",
        "number": 40,
        "title": "chore(vrl): Improve `Kind::canonicalize`",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-25T16:43:59Z",
        "updated_at": "2023-03-28T13:21:22Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nA simple implementation of `Kind::canonicalize` was added in https://github.com/vectordotdev/vector/pull/13619. This is mostly useful in tests and during debugging since `Kind` can have multiple internal representations that are equivalent. When refactoring a function that returns a `Kind`, it might return a \"correct\" result but it could be a different representation than is being asserted in tests.\r\n\r\nThe `Kind::canonicalize` function currently does some of the easy simplification such as removing `known` fields that exactly match the `unknown` type. There are more things that can be simplified, such as the `unknown` type. Also add better documentation for what the \"simplified\" representation is.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/40/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/40/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/42",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/42/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/42/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/42/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/42",
        "id": 1643941667,
        "node_id": "I_kwDOJN63t85h_I8j",
        "number": 42,
        "title": "Typedef for `merge` vrl function with deep = true is invalid",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-18T15:49:22Z",
        "updated_at": "2023-03-28T13:22:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nThe type definition does not look at the `deep` parameter. It always assumes it's false.\r\n\r\n```coffeescript\r\n$ merge({\"x\": {\"a\": 1}},{\"x\": {\"b\": 2}}, false)\r\n{ \"x\": { \"b\": 2 } }\r\n\r\n$ type_def(merge({\"x\": {\"a\": 1}},{\"x\": {\"b\": 2}}, false))\r\n{ \"object\": { \"x\": { \"object\": { \"b\": { \"integer\": true } } } } }\r\n\r\n$ merge({\"x\": {\"a\": 1}},{\"x\": {\"b\": 2}}, true)\r\n{ \"x\": { \"a\": 1, \"b\": 2 } }\r\n\r\n$ type_def(merge({\"x\": {\"a\": 1}},{\"x\": {\"b\": 2}}, true))\r\n{ \"object\": { \"x\": { \"object\": { \"b\": { \"integer\": true } } } } }\r\n```\r\n\r\n### Version\r\n\r\n0.23.0\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/42/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/42/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/43",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/43/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/43/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/43/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/43",
        "id": 1643942227,
        "node_id": "I_kwDOJN63t85h_JFT",
        "number": 43,
        "title": "unknown types of the merge operator can be invalid",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-15T16:21:37Z",
        "updated_at": "2023-03-28T13:22:40Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nI haven't worked out an easy example to reproduce this yet, mostly just writing this one down before I forget.\r\n\r\nWhen merging 2 objects with the merge operator (`|` or `|=`), the unknown is merged together with \"overwrite\" still enabled. This means that the type assumes the right-side argument will always overwrite all left-side unknown fields. This isn't true, and should probably merge the unknown with \"union\" instead.\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/43/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/43/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/44",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/44/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/44/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/44/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/44",
        "id": 1643943438,
        "node_id": "I_kwDOJN63t85h_JYO",
        "number": 44,
        "title": "vrl_parser::parse - 'begin <= end (1 <= 0) when slicing",
        "user": {
            "login": "stasos24",
            "id": 57736012,
            "node_id": "MDQ6VXNlcjU3NzM2MDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/57736012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stasos24",
            "html_url": "https://github.com/stasos24",
            "followers_url": "https://api.github.com/users/stasos24/followers",
            "following_url": "https://api.github.com/users/stasos24/following{/other_user}",
            "gists_url": "https://api.github.com/users/stasos24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stasos24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stasos24/subscriptions",
            "organizations_url": "https://api.github.com/users/stasos24/orgs",
            "repos_url": "https://api.github.com/users/stasos24/repos",
            "events_url": "https://api.github.com/users/stasos24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stasos24/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            },
            {
                "id": 5496651489,
                "node_id": "LA_kwDOJN63t88AAAABR6A-4Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/fuzz",
                "name": "fuzz",
                "color": "1D76DB",
                "default": false,
                "description": "Issues found from fuzz testing"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-07-13T06:25:49Z",
        "updated_at": "2023-05-13T01:44:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nvrl_parser::parser function panics when receive a crash_slice.file input\r\nSteps to reproduce:\r\nDownload a repo with fuzz harness: https://github.com/stasos24/vector/tree/master/lib/vrl/parser/fuzzing\r\n```\r\ncargo build --bin covbuild\r\ntarget/debug/covbuild < crash_escape.file\r\n```\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nv0.23.0\r\n\r\n### Debug Output\r\n\r\n```text\r\nthread 'main' panicked at 'begin <= end (1 <= 0) when slicing `\"`', library/core/src/str/mod.rs:111:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/core/src/panicking.rs:142:14\r\n   2: core::str::slice_error_fail_rt\r\n   3: core::ops::function::FnOnce::call_once\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/core/src/ops/function.rs:248:5\r\n   4: core::intrinsics::const_eval_select\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/core/src/intrinsics.rs:2695:5\r\n   5: core::str::slice_error_fail\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/core/src/str/mod.rs:86:9\r\n   6: <lookup::lookup_buf::segmentbuf::FieldBuf as core::convert::From<alloc::string::String>>::from\r\n   7: vrl_parser::parser::__action78\r\n   8: vrl_parser::parser::__parse__Program::__reduce245\r\n   9: vrl_parser::parser::__parse__Program::__reduce\r\n  10: <vrl_parser::parser::__parse__Program::__StateMachine as lalrpop_util::state_machine::ParserDefinition>::reduce\r\n  11: covbuild::main\r\n```\r\n\r\n\r\n### Example Data\r\n\r\n[crash_file](https://github.com/stasos24/vector_crash_files/blob/main/crash_slice.file)\r\n\r\nVRL source:\r\n`.s\"Ws{g+  AB_3.\"\"\\\"_3.\"\"\\\"\"\"\"`\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/44/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/44/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/45",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/45/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/45/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/45/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/45",
        "id": 1643943912,
        "node_id": "I_kwDOJN63t85h_Jfo",
        "number": 45,
        "title": "vrl_parser::parse - invalid escape",
        "user": {
            "login": "stasos24",
            "id": 57736012,
            "node_id": "MDQ6VXNlcjU3NzM2MDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/57736012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stasos24",
            "html_url": "https://github.com/stasos24",
            "followers_url": "https://api.github.com/users/stasos24/followers",
            "following_url": "https://api.github.com/users/stasos24/following{/other_user}",
            "gists_url": "https://api.github.com/users/stasos24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stasos24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stasos24/subscriptions",
            "organizations_url": "https://api.github.com/users/stasos24/orgs",
            "repos_url": "https://api.github.com/users/stasos24/repos",
            "events_url": "https://api.github.com/users/stasos24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stasos24/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            },
            {
                "id": 5496651489,
                "node_id": "LA_kwDOJN63t88AAAABR6A-4Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/fuzz",
                "name": "fuzz",
                "color": "1D76DB",
                "default": false,
                "description": "Issues found from fuzz testing"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-13T06:18:21Z",
        "updated_at": "2023-05-12T19:00:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nvrl_parser::parser function panics when receive a crash.file input\r\nSteps to reproduce:\r\nDownload a repo with fuzz harness: https://github.com/stasos24/vector/tree/master/lib/vrl/parser/fuzzing\r\n```\r\ncargo build --bin covbuild\r\ntarget/debug/covbuild < crash_escape.file\r\n```\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nv0.23.0\r\n\r\n### Debug Output\r\n\r\n```text\r\nthread 'main' panicked at 'not implemented: invalid escape', /opt/fuzz/vector/lib/vrl/parser/src/lex.rs:1266:22\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/std/src/panicking.rs:584:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/38b72154ded23847cd08a796d0c6708b5efac265/library/core/src/panicking.rs:142:14\r\n   2: vrl_parser::lex::unescape_string_literal\r\n   3: vrl_parser::lex::StringLiteralToken<&str>::template\r\n   4: vrl_parser::parser::__parse__Program::__reduce494\r\n   5: vrl_parser::parser::__parse__Program::__reduce\r\n   6: <vrl_parser::parser::__parse__Program::__StateMachine as lalrpop_util::state_machine::ParserDefinition>::reduce\r\n   7: covbuild::main\r\n```\r\n\r\n\r\n### Example Data\r\n[crash_file](https://github.com/stasos24/vector_crash_files/blob/main/crash_escape.file)\r\nVRL Source:\r\n`\"\\}\"n\"`\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/45/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/45/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/47",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/47/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/47/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/47/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/47",
        "id": 1643944900,
        "node_id": "I_kwDOJN63t85h_JvE",
        "number": 47,
        "title": "User defined VRL functions",
        "user": {
            "login": "mohshami",
            "id": 6077623,
            "node_id": "MDQ6VXNlcjYwNzc2MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6077623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohshami",
            "html_url": "https://github.com/mohshami",
            "followers_url": "https://api.github.com/users/mohshami/followers",
            "following_url": "https://api.github.com/users/mohshami/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohshami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohshami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohshami/subscriptions",
            "organizations_url": "https://api.github.com/users/mohshami/orgs",
            "repos_url": "https://api.github.com/users/mohshami/repos",
            "events_url": "https://api.github.com/users/mohshami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohshami/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-13T05:36:47Z",
        "updated_at": "2023-03-28T13:24:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nWe are currently migrating away from Logstash, but due to some scripts our clients use the fields need to be 1:1 identical to what Logstash generates. I have the following in my current vector configuration and it's needed in 3 different places.\r\n\r\n```\r\n  geo = del(.\"client-address-geo\")\r\n  .\"client-address-geo\".city_name = geo.city_name\r\n  .\"client-address-geo\".continent_code = geo.continent_code\r\n  .\"client-address-geo\".country_code2 = geo.country_code\r\n  .\"client-address-geo\".country_code3 = geo.country_code\r\n  .\"client-address-geo\".country_name = geo.country_name\r\n  .\"client-address-geo\".ip = .\"client-address\"\r\n  .\"client-address-geo\".latitude = to_float!(geo.latitude)\r\n  .\"client-address-geo\".longitude = to_float!(geo.longitude)\r\n  .\"client-address-geo\".location.lat = to_float!(geo.latitude)\r\n  .\"client-address-geo\".location.lon = to_float!(geo.longitude)\r\n  .\"client-address-geo\".postal_code = geo.postal_code\r\n  .\"client-address-geo\".region_code = geo.region_code\r\n  .\"client-address-geo\".region_name = geo.region_name\r\n  .\"client-address-geo\".timezone = geo.timezone\r\n\r\n  # client-address-isp doesn't need as much work\r\n  .\"client-address-isp\".as_org = del(.\"client-address-isp\".autonomous_system_organization)\r\n  .\"client-address-isp\".asn = del(.\"client-address-isp\".autonomous_system_number)\r\n  .\"client-address-isp\".ip = .\"client-address\"\r\n\r\n  if ip_cidr_contains!(\"127.0.0.0/8\", string!(.\"client-address\")) \r\n     ip_cidr_contains!(\"10.0.0.0/8\", string!(.\"client-address\")) \r\n     ip_cidr_contains!(\"172.16.0.0/12\", string!(.\"client-address\")) \r\n     ip_cidr_contains!(\"192.168.0.0/16\", string!(.\"client-address\")) \r\n     ip_cidr_contains!(\"169.254.0.0/16\", string!(.\"client-address\"))\r\n  {\r\n    del(.\"client-address-isp\")\r\n    del(.\"client-address-geo\")\r\n  }\r\n\r\n  if exists(.\"client-address-geo\".location) && .\"client-address-geo\".location == \"0,0\" {\r\n    .\"client-address-geo\".location = \"\"\r\n  }\r\n  ```\r\n\r\nAlso, the `if ip_cidr_contains` block is repeated in other places as well. It would be very useful if I could define my own `is_bogon` and `massage_geodata` functions and use them across my configuration\r\n\r\n\r\n### Attempted Solutions\r\n\r\nOne workaround I was thinking of was to store the geo data in a variable and then have that geo data manipulated by a VRL stored in a file. This would work for the `massage_geodata` function, but not for `is_bogon`\r\n\r\n### Proposal\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/47/reactions",
            "total_count": 17,
            "+1": 17,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/47/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/48",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/48/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/48/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/48/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/48",
        "id": 1643945391,
        "node_id": "I_kwDOJN63t85h_J2v",
        "number": 48,
        "title": "Improve typedef of `del` when deleting object fields",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-07-12T17:57:48Z",
        "updated_at": "2023-03-28T13:24:26Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nRight now `del` removes the type definition of the value that is deleted. This is correct when the type is \"closed\" (no unknown values), however if the type has an unknown of \"any\", which is the most common value, then removing the type definition during `del` causes the type of the deleted value to be `any` even though it is known that is cannot exist. The closest type we could set it to today is `null` (since that's what accessing the deleted value will actually return). I think it's time to introduce the `undefined` type though, and set that instead.\r\n\r\nCLI Playground example\r\n```text\r\n$ .x = 5\r\n5\r\n\r\n$ type_def(.x)\r\n{ \"integer\": true }\r\n\r\n$ del(.x)\r\n5\r\n\r\n$ .x\r\nnull\r\n\r\n$ type_def(.x)\r\n{ \"any\": true }\r\n\r\n```\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\n_No response_\n\n### References\n\n_No response_\n\n### Version\n\n0.23.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/48/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/48/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/229",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/229/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/229/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/229/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/229",
        "id": 1703966182,
        "node_id": "I_kwDOJN63t85lkHXm",
        "number": 229,
        "title": "Vector crashes when using `abort` inside a `for_each` function",
        "user": {
            "login": "marcojck",
            "id": 11993608,
            "node_id": "MDQ6VXNlcjExOTkzNjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11993608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcojck",
            "html_url": "https://github.com/marcojck",
            "followers_url": "https://api.github.com/users/marcojck/followers",
            "following_url": "https://api.github.com/users/marcojck/following{/other_user}",
            "gists_url": "https://api.github.com/users/marcojck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marcojck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marcojck/subscriptions",
            "organizations_url": "https://api.github.com/users/marcojck/orgs",
            "repos_url": "https://api.github.com/users/marcojck/repos",
            "events_url": "https://api.github.com/users/marcojck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marcojck/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-06-29T13:49:59Z",
        "updated_at": "2023-05-10T13:42:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nVector crashes when using `abort` inside a `for_each` function.\n\n### Configuration\n\n```text\nsources:\r\n  logs:\r\n    type: demo_logs\r\n    format: shuffle\r\n    lines:\r\n      - line 2 abort\r\n\r\ntransforms:\r\n    remap:\r\n      type: remap\r\n      inputs: [logs]\r\n      drop_on_error: true\r\n      drop_on_abort: true\r\n      reroute_dropped: true\r\n      source: |-\r\n        for_each(split!(.message, \" \")) -> |i, v| {\r\n          log(\"Processing value '\" + string!(v) + \"'\", \"info\", 0)\r\n          if (v == \"abort\") {\r\n            abort\r\n          }\r\n        }\r\n\r\nsinks:\r\n  remap_console_sink:\r\n    type: console\r\n    inputs: [remap]\r\n    target: stdout\r\n    encoding: json\r\n\r\n  remap_console_dropped_sink:\r\n    type: console\r\n    inputs: [remap.dropped]\r\n    target: stdout\r\n    encoding: json\n```\n\n\n### Version\n\nvector 0.22.2 (x86_64-unknown-linux-gnu 0024c92 2022-06-15)\n\n### Debug Output\n\n```text\n2022-06-29T13:45:32.956113Z  INFO vector::app: Log level is enabled. level=\"vector=trace,codec=trace,vrl=trace,file_source=trace,tower_limit=trace,rdkafka=trace,buffers=trace,kube=trace\"\r\n2022-06-29T13:45:32.956199Z  INFO vector::app: Loading configs. paths=[\"config.yaml\"]\r\n2022-06-29T13:45:32.958444Z DEBUG vector::topology::builder: Building new source. component=logs\r\n2022-06-29T13:45:32.958748Z DEBUG vector::topology::builder: Building new transform. component=remap\r\n2022-06-29T13:45:32.959344Z DEBUG vector::topology::builder: Building new sink component=remap_console_dropped_sink\r\n2022-06-29T13:45:32.959422Z DEBUG vector::topology::builder: Building new sink component=remap_console_sink\r\n2022-06-29T13:45:32.959523Z  INFO vector::topology::running: Running healthchecks.\r\n2022-06-29T13:45:32.959546Z DEBUG vector::topology::running: Connecting changed/added component(s).\r\n2022-06-29T13:45:32.959578Z DEBUG vector::topology::running: Configuring outputs for source. component=logs\r\n2022-06-29T13:45:32.959604Z DEBUG vector::topology::running: Configuring output for component. component=logs output_id=None\r\n2022-06-29T13:45:32.959619Z DEBUG vector::topology::running: Configuring outputs for transform. component=remap\r\n2022-06-29T13:45:32.959630Z DEBUG vector::topology::running: Configuring output for component. component=remap output_id=Some(\"dropped\")\r\n2022-06-29T13:45:32.959642Z DEBUG vector::topology::running: Configuring output for component. component=remap output_id=None\r\n2022-06-29T13:45:32.959653Z DEBUG vector::topology::running: Connecting inputs for transform. component=remap\r\n2022-06-29T13:45:32.959673Z DEBUG vector::topology::running: Adding component input to fanout. component=remap fanout_id=logs\r\n2022-06-29T13:45:32.959693Z DEBUG vector::topology::running: Connecting inputs for sink. component=remap_console_dropped_sink\r\n2022-06-29T13:45:32.959718Z DEBUG vector::topology::running: Adding component input to fanout. component=remap_console_dropped_sink fanout_id=remap.dropped\r\n2022-06-29T13:45:32.959719Z  INFO vector::topology::builder: Healthcheck: Passed.\r\n2022-06-29T13:45:32.959733Z DEBUG vector::topology::running: Connecting inputs for sink. component=remap_console_sink\r\n2022-06-29T13:45:32.959751Z  INFO vector::topology::builder: Healthcheck: Passed.\r\n2022-06-29T13:45:32.959752Z DEBUG vector::topology::running: Adding component input to fanout. component=remap_console_sink fanout_id=remap\r\n2022-06-29T13:45:32.959785Z DEBUG vector::topology::running: Spawning new source. key=logs\r\n2022-06-29T13:45:32.959820Z DEBUG vector::topology::running: Spawning new transform. key=remap\r\n2022-06-29T13:45:32.959866Z TRACE vector::topology::running: Spawning new sink. key=remap_console_dropped_sink\r\n2022-06-29T13:45:32.959896Z TRACE vector::topology::running: Spawning new sink. key=remap_console_sink\r\n2022-06-29T13:45:32.959886Z DEBUG source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::topology::builder: Source pump starting.\r\n2022-06-29T13:45:32.959982Z  INFO vector: Vector has started. debug=\"false\" version=\"0.22.2\" arch=\"x86_64\" build_id=\"0024c92 2022-06-15\"\r\n2022-06-29T13:45:32.960021Z  INFO vector::app: API is disabled, enable by setting `api.enabled` to `true` and use commands like `vector top`.\r\n2022-06-29T13:45:32.960710Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::internal_events::common: Bytes received. byte_size=0 protocol=none\r\n2022-06-29T13:45:32.960712Z DEBUG sink{component_kind=\"sink\" component_id=remap_console_sink component_type=console component_name=remap_console_sink}: vector::utilization: utilization=0.012063242118913298\r\n2022-06-29T13:45:32.960757Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::internal_events::demo_logs: Received one event.\r\n2022-06-29T13:45:32.960813Z DEBUG sink{component_kind=\"sink\" component_id=remap_console_dropped_sink component_type=console component_name=remap_console_dropped_sink}: vector::utilization: utilization=0.04296335690125053\r\n2022-06-29T13:45:32.960838Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_common::internal_event::events_received: Events received. count=1 byte_size=723\r\n2022-06-29T13:45:32.960877Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2022-06-29T13:45:32.960896Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=416 output=_default\r\n2022-06-29T13:45:32.960932Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_core::fanout: Processing control message outside of send: ControlMessage::Add(ComponentKey { id: \"remap\" })\r\n2022-06-29T13:45:32.960962Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2022-06-29T13:45:32.960984Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_core::fanout: Sent item to fanout.\r\n2022-06-29T13:45:32.961009Z TRACE transform{component_kind=\"transform\" component_id=remap component_type=remap component_name=remap}: vector_common::internal_event::events_received: Events received. count=1 byte_size=416\r\n2022-06-29T13:45:32.961103Z  INFO transform{component_kind=\"transform\" component_id=remap component_type=remap component_name=remap}: vrl_stdlib::log: Processing value 'line' internal_log_rate_secs=0 vrl_position=46\r\n2022-06-29T13:45:32.961127Z  INFO transform{component_kind=\"transform\" component_id=remap component_type=remap component_name=remap}: vrl_stdlib::log: Processing value '2' internal_log_rate_secs=0 vrl_position=46\r\n2022-06-29T13:45:32.961143Z  INFO transform{component_kind=\"transform\" component_id=remap component_type=remap component_name=remap}: vrl_stdlib::log: Processing value 'abort' internal_log_rate_secs=0 vrl_position=46\r\nthread 'vector-worker' panicked at 'abort errors must only be defined by `abort` statement', lib/vrl/compiler/src/expression/function_call.rs:577:17\r\nstack backtrace:\r\n2022-06-29T13:45:32.961812Z TRACE vector: Beep.\r\n   0:     0x55e2db98b8dc - std::backtrace_rs::backtrace::libunwind::trace::h09f7e4e089375279\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x55e2db98b8dc - std::backtrace_rs::backtrace::trace_unsynchronized::h1ec96f1c7087094e\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x55e2db98b8dc - std::sys_common::backtrace::_print_fmt::h317b71fc9a5cf964\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x55e2db98b8dc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he3555b48e7dfe7f0\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x55e2db9e7cec - core::fmt::write::h513b07ca38f4fb1b\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x55e2db97bb25 - std::io::Write::write_fmt::haf8c932b52111354\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/io/mod.rs:1697:15\r\n   6:     0x55e2db98e980 - std::sys_common::backtrace::_print::h195c38364780a303\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x55e2db98e980 - std::sys_common::backtrace::print::hc09dfdea923b6730\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x55e2db98e980 - std::panicking::default_hook::{{closure}}::hb2e38ec0d91046a3\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:211:50\r\n   9:     0x55e2db98e535 - std::panicking::default_hook::h60284635b0ad54a8\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:228:9\r\n  10:     0x55e2db98f174 - std::panicking::rust_panic_with_hook::ha677a669fb275654\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:606:17\r\n  11:     0x55e2db98ec22 - std::panicking::begin_panic_handler::{{closure}}::h976246fb95d93c31\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:500:13\r\n  12:     0x55e2db98bd84 - std::sys_common::backtrace::__rust_end_short_backtrace::h38077ee5b7b9f99a\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:139:18\r\n  13:     0x55e2db98ebb9 - rust_begin_unwind\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:498:5\r\n  14:     0x55e2d6b55aa1 - core::panicking::panic_fmt::h35f3a62252ba0fd2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:107:14\r\n  15:     0x55e2db0e23de - <vrl_compiler::expression::function_call::FunctionCall as vrl_compiler::expression::Expression>::resolve::h5b15fe8a1269adb9\r\n  16:     0x55e2db0ed71f - <vrl_compiler::expression::Expr as vrl_compiler::expression::Expression>::resolve::hb535e71403c0621e\r\n  17:     0x55e2db0cb667 - vrl_compiler::program::Program::resolve::h09656a71a1af82c8\r\n  18:     0x55e2db06f833 - vrl::runtime::Runtime::resolve::h06a0cbf4de3b3196\r\n  19:     0x55e2d85f16fa - <vector::transforms::remap::Remap<Runner> as vector_core::transform::SyncTransform>::transform::h793ceda3febf9c40\r\n  20:     0x55e2d6ddf65e - vector_core::transform::SyncTransform::transform_all::hd3c0fb99c218e24e\r\n  21:     0x55e2d758ba69 - tokio::runtime::task::harness::poll_future::h45279ef2e923948e\r\n  22:     0x55e2d753b024 - tokio::runtime::task::raw::poll::ha66570bc77e7d949\r\n  23:     0x55e2db5ad7de - tokio::runtime::thread_pool::worker::Context::run_task::h8e4a9d0f3cbe638d\r\n  24:     0x55e2db5ace9b - tokio::runtime::thread_pool::worker::run::h28fe79c4911d1526\r\n  25:     0x55e2db59d288 - tokio::runtime::task::raw::poll::h89d53825cf9e44ae\r\n  26:     0x55e2db56da5b - std::sys_common::backtrace::__rust_begin_short_backtrace::h6348438fe675f738\r\n  27:     0x55e2db5751f6 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h90ebd4a050d2ce5c\r\n  28:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hcbc6d2d80772be64\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  29:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9bffa2ca65a1d6e6\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  30:     0x55e2db99aa13 - std::sys::unix::thread::Thread::new::thread_start::ha678a8b0caec8f55\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys/unix/thread.rs:106:17\r\n  31:     0x7f254979a6db - start_thread\r\n                               at /build/glibc-uZu3wS/glibc-2.27/nptl/pthread_create.c:463\r\n  32:     0x7f254855e61f - clone\r\n                               at /build/glibc-uZu3wS/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n  33:                0x0 - <unknown>\r\nthread 'vector-worker' panicked at 'internal error: entered unreachable code: join error or bad poll', src/topology/builder.rs:669:30\r\nstack backtrace:\r\n   0:     0x55e2db98b8dc - std::backtrace_rs::backtrace::libunwind::trace::h09f7e4e089375279\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x55e2db98b8dc - std::backtrace_rs::backtrace::trace_unsynchronized::h1ec96f1c7087094e\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x55e2db98b8dc - std::sys_common::backtrace::_print_fmt::h317b71fc9a5cf964\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x55e2db98b8dc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he3555b48e7dfe7f0\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x55e2db9e7cec - core::fmt::write::h513b07ca38f4fb1b\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x55e2db97bb25 - std::io::Write::write_fmt::haf8c932b52111354\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/io/mod.rs:1697:15\r\n   6:     0x55e2db98e980 - std::sys_common::backtrace::_print::h195c38364780a303\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x55e2db98e980 - std::sys_common::backtrace::print::hc09dfdea923b6730\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x55e2db98e980 - std::panicking::default_hook::{{closure}}::hb2e38ec0d91046a3\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:211:50\r\n   9:     0x55e2db98e535 - std::panicking::default_hook::h60284635b0ad54a8\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:228:9\r\n  10:     0x55e2db98f174 - std::panicking::rust_panic_with_hook::ha677a669fb275654\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:606:17\r\n  11:     0x55e2db98ec50 - std::panicking::begin_panic_handler::{{closure}}::h976246fb95d93c31\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:502:13\r\n  12:     0x55e2db98bd84 - std::sys_common::backtrace::__rust_end_short_backtrace::h38077ee5b7b9f99a\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:139:18\r\n  13:     0x55e2db98ebb9 - rust_begin_unwind\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:498:5\r\n  14:     0x55e2d6b55aa1 - core::panicking::panic_fmt::h35f3a62252ba0fd2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:107:14\r\n  15:     0x55e2d7ded260 - <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll::h233001bc763e540a\r\n  16:     0x55e2d767ed11 - <core::pin::Pin<P> as core::future::future::Future>::poll::h510bfb84ee7a5b0e\r\n  17:     0x55e2d7589916 - tokio::runtime::task::harness::poll_future::h412825b75e959fcd\r\n  18:     0x55e2d753294b - tokio::runtime::task::raw::poll::h585d9b181785f0cb\r\n  19:     0x55e2db5ad7de - tokio::runtime::thread_pool::worker::Context::run_task::h8e4a9d0f3cbe638d\r\n  20:     0x55e2db5ace9b - tokio::runtime::thread_pool::worker::run::h28fe79c4911d1526\r\n  21:     0x55e2db59d288 - tokio::runtime::task::raw::poll::h89d53825cf9e44ae\r\n  22:     0x55e2db56da5b - std::sys_common::backtrace::__rust_begin_short_backtrace::h6348438fe675f738\r\n  23:     0x55e2db5751f6 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h90ebd4a050d2ce5c\r\n  24:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hcbc6d2d80772be64\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  25:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9bffa2ca65a1d6e6\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  26:     0x55e2db99aa13 - std::sys::unix::thread::Thread::new::thread_start::ha678a8b0caec8f55\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys/unix/thread.rs:106:17\r\n  27:     0x7f254979a6db - start_thread\r\n                               at /build/glibc-uZu3wS/glibc-2.27/nptl/pthread_create.c:463\r\n  28:     0x7f254855e61f - clone\r\n                               at /build/glibc-uZu3wS/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n  29:                0x0 - <unknown>\r\n2022-06-29T13:45:33.018884Z ERROR transform{component_kind=\"transform\" component_id=remap component_type=remap component_name=remap}: vector::topology: An error occurred that Vector couldn't handle.\r\n2022-06-29T13:45:33.019473Z  INFO vector: Vector has stopped.\r\n2022-06-29T13:45:33.019552Z DEBUG sink{component_kind=\"sink\" component_id=remap_console_dropped_sink component_type=console component_name=remap_console_dropped_sink}: vector::topology::builder: Finished.\r\n2022-06-29T13:45:33.019554Z DEBUG sink{component_kind=\"sink\" component_id=remap_console_sink component_type=console component_name=remap_console_sink}: vector::topology::builder: Finished.\r\n2022-06-29T13:45:33.020621Z  INFO vector::topology::running: Shutting down... Waiting on running components. remaining_components=\"logs\" time_remaining=\"59 seconds left\"\r\n2022-06-29T13:45:33.961000Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::internal_events::common: Bytes received. byte_size=0 protocol=none\r\n2022-06-29T13:45:33.961107Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::internal_events::demo_logs: Received one event.\r\n2022-06-29T13:45:33.961256Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_common::internal_event::events_received: Events received. count=1 byte_size=723\r\n2022-06-29T13:45:33.961346Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_buffers::topology::channel::limited_queue: Sent item.\r\n2022-06-29T13:45:33.961389Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_common::internal_event::events_sent: Events sent. count=1 byte_size=416 output=_default\r\n2022-06-29T13:45:33.961474Z DEBUG source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::topology::builder: Finished.\r\n2022-06-29T13:45:33.961588Z TRACE source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector_core::fanout: Processing control message inside of send: None\r\nthread 'vector-worker' panicked at 'unit error: ()', lib/vector-core/src/fanout.rs:369:42\r\nstack backtrace:\r\n   0:     0x55e2db98b8dc - std::backtrace_rs::backtrace::libunwind::trace::h09f7e4e089375279\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x55e2db98b8dc - std::backtrace_rs::backtrace::trace_unsynchronized::h1ec96f1c7087094e\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x55e2db98b8dc - std::sys_common::backtrace::_print_fmt::h317b71fc9a5cf964\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x55e2db98b8dc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he3555b48e7dfe7f0\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x55e2db9e7cec - core::fmt::write::h513b07ca38f4fb1b\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x55e2db97bb25 - std::io::Write::write_fmt::haf8c932b52111354\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/io/mod.rs:1697:15\r\n   6:     0x55e2db98e980 - std::sys_common::backtrace::_print::h195c38364780a303\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x55e2db98e980 - std::sys_common::backtrace::print::hc09dfdea923b6730\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x55e2db98e980 - std::panicking::default_hook::{{closure}}::hb2e38ec0d91046a3\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:211:50\r\n   9:     0x55e2db98e535 - std::panicking::default_hook::h60284635b0ad54a8\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:228:9\r\n  10:     0x55e2db98f174 - std::panicking::rust_panic_with_hook::ha677a669fb275654\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:606:17\r\n  11:     0x55e2db98ec50 - std::panicking::begin_panic_handler::{{closure}}::h976246fb95d93c31\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:502:13\r\n  12:     0x55e2db98bd84 - std::sys_common::backtrace::__rust_end_short_backtrace::h38077ee5b7b9f99a\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:139:18\r\n  13:     0x55e2db98ebb9 - rust_begin_unwind\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:498:5\r\n  14:     0x55e2d6b55aa1 - core::panicking::panic_fmt::h35f3a62252ba0fd2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:107:14\r\n  15:     0x55e2d6b55b93 - core::result::unwrap_failed::hb53671404b9e33c2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/result.rs:1613:5\r\n  16:     0x55e2daf77f6d - <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll::h6bc8339f16b6be09\r\n  17:     0x55e2d7ef02d3 - <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll::h7142bef86bae173b\r\n  18:     0x55e2d7580483 - tokio::runtime::task::harness::poll_future::h1bde4adc2e60af4b\r\n  19:     0x55e2d7532aec - tokio::runtime::task::raw::poll::h5ab34974d6bf6bdb\r\n  20:     0x55e2db5ad7de - tokio::runtime::thread_pool::worker::Context::run_task::h8e4a9d0f3cbe638d\r\n  21:     0x55e2db5aca07 - tokio::runtime::thread_pool::worker::run::h28fe79c4911d1526\r\n  22:     0x55e2db59d288 - tokio::runtime::task::raw::poll::h89d53825cf9e44ae\r\n  23:     0x55e2db56da5b - std::sys_common::backtrace::__rust_begin_short_backtrace::h6348438fe675f738\r\n  24:     0x55e2db5751f6 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h90ebd4a050d2ce5c\r\n  25:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hcbc6d2d80772be64\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  26:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9bffa2ca65a1d6e6\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  27:     0x55e2db99aa13 - std::sys::unix::thread::Thread::new::thread_start::ha678a8b0caec8f55\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys/unix/thread.rs:106:17\r\n  28:     0x7f254979a6db - start_thread\r\n                               at /build/glibc-uZu3wS/glibc-2.27/nptl/pthread_create.c:463\r\n  29:     0x7f254855e61f - clone\r\n                               at /build/glibc-uZu3wS/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n  30:                0x0 - <unknown>\r\nthread 'vector-worker' panicked at 'join error: JoinError::Panic(Id(15), ...)', src/topology/builder.rs:212:30\r\nstack backtrace:\r\n   0:     0x55e2db98b8dc - std::backtrace_rs::backtrace::libunwind::trace::h09f7e4e089375279\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x55e2db98b8dc - std::backtrace_rs::backtrace::trace_unsynchronized::h1ec96f1c7087094e\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x55e2db98b8dc - std::sys_common::backtrace::_print_fmt::h317b71fc9a5cf964\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x55e2db98b8dc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::he3555b48e7dfe7f0\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x55e2db9e7cec - core::fmt::write::h513b07ca38f4fb1b\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x55e2db97bb25 - std::io::Write::write_fmt::haf8c932b52111354\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/io/mod.rs:1697:15\r\n   6:     0x55e2db98e980 - std::sys_common::backtrace::_print::h195c38364780a303\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x55e2db98e980 - std::sys_common::backtrace::print::hc09dfdea923b6730\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x55e2db98e980 - std::panicking::default_hook::{{closure}}::hb2e38ec0d91046a3\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:211:50\r\n   9:     0x55e2db98e535 - std::panicking::default_hook::h60284635b0ad54a8\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:228:9\r\n  10:     0x55e2db98f174 - std::panicking::rust_panic_with_hook::ha677a669fb275654\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:606:17\r\n  11:     0x55e2db98ec50 - std::panicking::begin_panic_handler::{{closure}}::h976246fb95d93c31\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:502:13\r\n  12:     0x55e2db98bd84 - std::sys_common::backtrace::__rust_end_short_backtrace::h38077ee5b7b9f99a\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys_common/backtrace.rs:139:18\r\n  13:     0x55e2db98ebb9 - rust_begin_unwind\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/panicking.rs:498:5\r\n  14:     0x55e2d6b55aa1 - core::panicking::panic_fmt::h35f3a62252ba0fd2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/panicking.rs:107:14\r\n  15:     0x55e2d6b55b93 - core::result::unwrap_failed::hb53671404b9e33c2\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/core/src/result.rs:1613:5\r\n  16:     0x55e2d7e03639 - <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll::h2d65545dc8fde948\r\n  17:     0x55e2d7589916 - tokio::runtime::task::harness::poll_future::h412825b75e959fcd\r\n  18:     0x55e2d753294b - tokio::runtime::task::raw::poll::h585d9b181785f0cb\r\n  19:     0x55e2db5ad7de - tokio::runtime::thread_pool::worker::Context::run_task::h8e4a9d0f3cbe638d\r\n  20:     0x55e2db5aca07 - tokio::runtime::thread_pool::worker::run::h28fe79c4911d1526\r\n  21:     0x55e2db59d288 - tokio::runtime::task::raw::poll::h89d53825cf9e44ae\r\n  22:     0x55e2db56da5b - std::sys_common::backtrace::__rust_begin_short_backtrace::h6348438fe675f738\r\n  23:     0x55e2db5751f6 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h90ebd4a050d2ce5c\r\n  24:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hcbc6d2d80772be64\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  25:     0x55e2db99aa13 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h9bffa2ca65a1d6e6\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/alloc/src/boxed.rs:1694:9\r\n  26:     0x55e2db99aa13 - std::sys::unix::thread::Thread::new::thread_start::ha678a8b0caec8f55\r\n                               at /rustc/db9d1b20bba1968c1ec1fc49616d4742c1725b4b/library/std/src/sys/unix/thread.rs:106:17\r\n  27:     0x7f254979a6db - start_thread\r\n                               at /build/glibc-uZu3wS/glibc-2.27/nptl/pthread_create.c:463\r\n  28:     0x7f254855e61f - clone\r\n                               at /build/glibc-uZu3wS/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n  29:                0x0 - <unknown>\r\n2022-06-29T13:45:33.970922Z ERROR source{component_kind=\"source\" component_id=logs component_type=demo_logs component_name=logs}: vector::topology: An error occurred that Vector couldn't handle.\r\n2022-06-29T13:45:33.970981Z TRACE vector: Beep.\n```\n\n\n### Example Data\n\nSee config provided.\n\n### Additional Context\n\n_No response_\n\n### References\n\nMaybe the same problem reported in vectordotdev/vector#13010",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/229/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/229/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/50",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/50/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/50/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/50/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/50",
        "id": 1643947751,
        "node_id": "I_kwDOJN63t85h_Kbn",
        "number": 50,
        "title": "add `parse_envoy()` support?",
        "user": {
            "login": "parkedwards",
            "id": 19556538,
            "node_id": "MDQ6VXNlcjE5NTU2NTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19556538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parkedwards",
            "html_url": "https://github.com/parkedwards",
            "followers_url": "https://api.github.com/users/parkedwards/followers",
            "following_url": "https://api.github.com/users/parkedwards/following{/other_user}",
            "gists_url": "https://api.github.com/users/parkedwards/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/parkedwards/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/parkedwards/subscriptions",
            "organizations_url": "https://api.github.com/users/parkedwards/orgs",
            "repos_url": "https://api.github.com/users/parkedwards/repos",
            "events_url": "https://api.github.com/users/parkedwards/events{/privacy}",
            "received_events_url": "https://api.github.com/users/parkedwards/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-06-23T01:32:51Z",
        "updated_at": "2023-03-28T13:25:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#default-format-string\r\n\r\n^ envoy has a bunch of different logs, i know (and the ability to custom format them, which makes adding support on the Vector side...tricky)\r\n\r\nbut if there's appetite for it, I wrote a regex string for our Vector to parse our Envoy access logs (which are their request logs) -- they're similar to what you'd see in an apache format or nginx.  i imagine many envoy users are probably just using the default string format, and if so this parsing string might come in handy - and im sure you guys can do a much better job than i did.\r\n\r\nhttps://regex101.com/r/pFQf5V/1",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/50/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/50/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/51",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/51/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/51/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/51/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/51",
        "id": 1643948265,
        "node_id": "I_kwDOJN63t85h_Kjp",
        "number": 51,
        "title": "Don't allow expressions with side-effects in some contexts",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-06-17T00:59:58Z",
        "updated_at": "2023-03-28T13:57:11Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nExpressions containing side-effects can be ambiguous/confusing when used in certain contexts.  \r\nConsider the following example.\r\n\r\n```coffeescript\r\n. = { \"msg\": \"{\\\"a\\\":1}\" }\r\n. |= object!(parse_json!(del(.msg)))\r\n```\r\n\r\nYou might assume the event would look like this after running\r\n```coffeescript\r\n{ \"a\": 1 }\r\n```\r\n\r\nbut it's actually\r\n```coffeescript\r\n{ \"a\": 1, \"msg\": \"{\\\"a\\\":1}\" }\r\n```\r\n\r\nTo understand this better, you can look at the \"de-sugared\" version of the 2nd line,\r\n```coffeescript\r\n. = . | object!(parse_json!(del(.msg)))\r\n```\r\n\r\nThe merge operator (`|`) has 2 arguments, and it resolves them from left to right. The first is the event itself, which is _copied_.\r\nThen the 2nd is resolved, which calls `del(.msg)` first, then parses the json. The `del` deletes `.msg` _after_ `.` has already been copied. The two arguments are then merged, and the result is assigned back to `.`.\r\n\r\nNow if you switched the ordering to this\r\n```coffeescript\r\n. = object!(parse_json!(del(.msg))) | .\r\n```\r\n\r\nIt would result in\r\n```coffeescript\r\n{ \"a\": 1 }\r\n```\r\n\r\n\r\n### Proposal\r\n\r\nExpressions containing \"side-effects\" (assignments, and behaviors such as logging) should be forbidden in certain situations. This should not reduce the power of VRL, but rather require you to re-write in ways that are more clear (which the compiler should usually help with). The list of places this will be forbidden is TBD, but will likely include things like function arguments and operator inputs.\r\n\r\nThe above example should be re-written as\r\n```coffeescript\r\nmsg = del(.msg)\r\n. |= object!(parse_json!(msg))\r\n```\r\n\r\nwhich more unambiguously deletes from `.msg` _first_, and then parses and merges the result. The event would end up looking like this\r\n\r\n```coffeescript\r\n{ \"a\": 1 }\r\n```\r\n\r\nNon-exhuastive list of areas this should apply to:\r\n- creating objects (the order of resolving fields is not clearly defined, but is currently \"alphabetical\" which can be confusing)\r\n- creating arrays\r\n- function arguments\r\n- all operators? (addition, multiplication, merge, etc.)\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/51/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/51/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/52",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/52/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/52/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/52/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/52",
        "id": 1643948865,
        "node_id": "I_kwDOJN63t85h_KtB",
        "number": 52,
        "title": "Add type_def checking to existing VRL tests",
        "user": {
            "login": "fuchsnj",
            "id": 6706944,
            "node_id": "MDQ6VXNlcjY3MDY5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6706944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuchsnj",
            "html_url": "https://github.com/fuchsnj",
            "followers_url": "https://api.github.com/users/fuchsnj/followers",
            "following_url": "https://api.github.com/users/fuchsnj/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuchsnj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuchsnj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuchsnj/subscriptions",
            "organizations_url": "https://api.github.com/users/fuchsnj/orgs",
            "repos_url": "https://api.github.com/users/fuchsnj/repos",
            "events_url": "https://api.github.com/users/fuchsnj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuchsnj/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-06-16T16:46:38Z",
        "updated_at": "2023-03-28T13:26:11Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Proposal\r\n\r\nVector currently doesn't have anything checking the type definitions of functions against the actual values that can be returned. Type checking should be added to our existing testing suite. For any value returned, it can be checked against the type-def to make sure it is valid. This can't check every type-def issue, but it should catch many of them.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/52/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/52/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/53",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/53/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/53/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/53/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/53",
        "id": 1643952154,
        "node_id": "I_kwDOJN63t85h_Lga",
        "number": 53,
        "title": "Add `zip` function to VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-06-10T21:20:38Z",
        "updated_at": "2023-03-28T13:27:46Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nWhile writing up upgrade docs from the old `tokenizer` transform to `remap`, I realized it'd be helpful to have a `zip` function in VRL that would take two arrays, one of keys, one of fields, and create an object.\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\n```\r\n$ zip([\"a\", \"b\"], [1, 2])\r\n\r\n{ \"a\": 1, \"b\": 2}\r\n```\r\n\r\nWill have to decide on what should happen when the arrays don't match in length.\n\n### References\n\n_No response_\n\n### Version\n\nvector 0.22.0",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/53/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/53/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/54",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/54/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/54/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/54/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/54",
        "id": 1643957718,
        "node_id": "I_kwDOJN63t85h_M3W",
        "number": 54,
        "title": "Expand unit tests in compiler",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-06-08T12:05:40Z",
        "updated_at": "2023-03-28T13:30:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": null,
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/54/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/54/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/55",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/55/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/55/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/55/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/55",
        "id": 1643958747,
        "node_id": "I_kwDOJN63t85h_NHb",
        "number": 55,
        "title": "Improve maintainability of expression implementations by adding doc comments and splitting up big functions",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-06-08T12:04:58Z",
        "updated_at": "2023-03-28T13:30:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": null,
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/55/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/55/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/56",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/56/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/56/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/56/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/56",
        "id": 1643959300,
        "node_id": "I_kwDOJN63t85h_NQE",
        "number": 56,
        "title": "Add `any` and `all` enumeration functions to VRL",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-06-08T07:31:27Z",
        "updated_at": "2024-05-21T05:59:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nNow that [iteration support has landed in VRL](https://vector.dev/highlights/2022-05-18-vrl-iteration-support/), we can look at introducing additional convenience functions.\r\n\r\nTwo of those functions that are often mentioned on Discord and GH issues are `any` and `all`.\r\n\r\nFor example, in vectordotdev/vector#9068, a request was made to check `ip_cidr_contains` against a list of functions.\r\n\r\nThis could be achieved using the following iteration logic:\r\n\r\n```coffee\r\ncontains = false\r\nfor_each([\"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"]) -> |_index, ip| {\r\n\tif ip_cidr_contains(ip, .ip_src) ?? false {\r\n\t\tcontains = true\r\n\t}\r\n}\r\ncontains\r\n```\r\n\r\nBut with `any`, this could be shortened to:\r\n\r\n```coffee\r\nany([\"10.0.0.0/8\", \"172.16.0.0/12\", \"192.168.0.0/16\"]) { |_index, ip|\r\n\tip_cidr_contains(ip, .ip_src) ?? false\r\n}\r\n```\r\n\r\nWe'll also add `all`, which only returns `true` if all steps in the iterator return `true`.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/56/reactions",
            "total_count": 6,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/56/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/57",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/57/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/57/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/57/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/57",
        "id": 1643959698,
        "node_id": "I_kwDOJN63t85h_NWS",
        "number": 57,
        "title": "VRL: `parse_logfmt` seems to actually be infallible",
        "user": {
            "login": "spencergilbert",
            "id": 11903873,
            "node_id": "MDQ6VXNlcjExOTAzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11903873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spencergilbert",
            "html_url": "https://github.com/spencergilbert",
            "followers_url": "https://api.github.com/users/spencergilbert/followers",
            "following_url": "https://api.github.com/users/spencergilbert/following{/other_user}",
            "gists_url": "https://api.github.com/users/spencergilbert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spencergilbert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spencergilbert/subscriptions",
            "organizations_url": "https://api.github.com/users/spencergilbert/orgs",
            "repos_url": "https://api.github.com/users/spencergilbert/repos",
            "events_url": "https://api.github.com/users/spencergilbert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spencergilbert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-06-03T19:14:30Z",
        "updated_at": "2023-03-28T13:33:27Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nProvided the `value` passed to `parse_logfmt` is a String, I'm not sure the parsing can ever fail.\r\n\r\nExample:\r\n```coffee\r\n$ parse_logfmt!(\"foobar baz=1 bizz = bar:// asdklfjhaklsjd n aksjdhfj jaj  \")\r\n{ \"aksjdhfj\": true, \"asdklfjhaklsjd\": true, \"baz\": \"1\", \"bizz\": \"bar://\", \"foobar\": true, \"jaj\": true, \"n\": true }\r\n```\r\n\r\nBased on the referenced issue, our infallible parsing may be due to an implementation issue of the \"spec\".\r\n\r\nIf that's the case and a better implementation allows parsing to be fallible we should do so, otherwise the function should be marked as infallible.\n\n### Configuration\n\n_No response_\n\n### Version\n\nvector 0.22.0 (x86_64-apple-darwin 5e937e3 2022-06-01)\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\nhttps://github.com/vectordotdev/vrl/issues/62",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/57/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/57/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/58",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/58/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/58/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/58/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/58",
        "id": 1643960159,
        "node_id": "I_kwDOJN63t85h_Ndf",
        "number": 58,
        "title": "VRL: ||= operator",
        "user": {
            "login": "Antiarchitect",
            "id": 50209,
            "node_id": "MDQ6VXNlcjUwMjA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/50209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Antiarchitect",
            "html_url": "https://github.com/Antiarchitect",
            "followers_url": "https://api.github.com/users/Antiarchitect/followers",
            "following_url": "https://api.github.com/users/Antiarchitect/following{/other_user}",
            "gists_url": "https://api.github.com/users/Antiarchitect/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Antiarchitect/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Antiarchitect/subscriptions",
            "organizations_url": "https://api.github.com/users/Antiarchitect/orgs",
            "repos_url": "https://api.github.com/users/Antiarchitect/repos",
            "events_url": "https://api.github.com/users/Antiarchitect/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Antiarchitect/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-06-02T19:27:44Z",
        "updated_at": "2023-03-28T13:31:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nhttps://github.com/vectordotdev/vector/discussions/12942\r\n\r\n### Attempted Solutions\r\n\r\n_No response_\r\n\r\n### Proposal\r\n\r\nIt would be nice to have `||=` operator in VRL. `a ||= 10` in Ruby language means if `a` is `null` or `false` or `undefined` then assing `10` as `a` value.\r\n\r\n### References\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/58/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/58/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/59",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/59/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/59/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/59/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/59",
        "id": 1643961383,
        "node_id": "I_kwDOJN63t85h_Nwn",
        "number": 59,
        "title": "Overriding VRL values should be explicit",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-06-01T16:47:13Z",
        "updated_at": "2023-03-28T13:32:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This issue falls out of the foot gun demonstrated in https://github.com/vectordotdev/vector/pull/12929. It is somewhat related to vectordotdev/vector#12701.\r\n\r\nAccidentally overriding data in VRL should be disallowed. A principle of VRL is to be safe and this is unsafe. Instead, users should be required explicitly erase data before overriding it:\r\n\r\n```\r\ndel(.attribute)\r\n.attribute = {...}\r\n```\r\n\r\nOr, use an operator that achieves the same thing:\r\n\r\n```\r\n.attribute != {...}\r\n```\r\n\r\nOpen to other operators. Without this, the user would get a compilation error directing them to explicitly override the data using `del` or the special operator.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/59/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/59/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/60",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/60/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/60/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/60/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/60",
        "id": 1643962349,
        "node_id": "I_kwDOJN63t85h_N_t",
        "number": 60,
        "title": "Make \"fallible expression\" error in VRL specific for each expression",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-27T05:41:20Z",
        "updated_at": "2023-03-28T13:32:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nIn vectordotdev/vector#12880, the \"expression is fallible\" diagnostic is improved to point to the exact expression that is fallible. The next improvement to this would be to make the expression message specific to the type of expression that is fallible.\r\n\r\nThis would allow us to inform the operator how to handle the fallibility more precisely.\r\n\r\nFor example, this:\r\n\r\n```\r\nerror[E100]: unhandled error\r\n   \u250c\u2500 :10:5\r\n   \u2502\r\n10 \u2502 5 + to_int(.foo)\r\n   \u2502     ^^^^^^^^^^^^\r\n   \u2502     \u2502\r\n   \u2502     expression can result in runtime error\r\n   \u2502     handle the error case to ensure runtime success\r\n   \u2502\r\n   = see documentation about error handling at https://errors.vrl.dev/#handling\r\n   = learn more about error code 100 at https://errors.vrl.dev/100\r\n   = see language documentation at https://vrl.dev/\r\n```\r\n\r\nCould be rewritten to inform the user of using `to_int!`. Similarly, for rewriting regular assignments to infallible assignments.\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\n_No response_\n\n### References\n\n_No response_\n\n### Version\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/60/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/60/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/61",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/61/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/61/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/61/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/61",
        "id": 1643962855,
        "node_id": "I_kwDOJN63t85h_OHn",
        "number": 61,
        "title": "Better diagnostics for unquoted paths containing `-`s",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-24T16:33:06Z",
        "updated_at": "2023-03-28T13:32:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nUsers are frequently tripped up by trying to use paths in VRL that contain a `-`.\r\n\r\nThese currently output errors like:\r\n\r\n```\r\nMay 24 15:03:31 brannan11 vector[12970]: 1 \u2502 .instance_id = del!(.instance-id)\r\nMay 24 15:03:31 brannan11 vector[12970]:   \u2502                               ^^\r\nMay 24 15:03:31 brannan11 vector[12970]:   \u2502                               \u2502\r\nMay 24 15:03:31 brannan11 vector[12970]:   \u2502                               undefined variable\r\nMay 24 15:03:31 brannan11 vector[12970]:   \u2502                               did you mean \"null\"?\r\n```\r\n\r\n(example from https://github.com/vectordotdev/vector/issues/12839)\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\nI think the compiler could be enhanced to look for this common case of neglecting to quote a path containing a `-` by looking for expressions with `-` where the RHS is an undefined variable. Additionally, the lack of spaces around the `-` could be an indicator. When this is observed, the diagnostics could suggest to the user that maybe they meant to quote the expression to use it as a path.\n\n### References\n\n* https://github.com/vectordotdev/vector/issues/12839\n\n### Version\n\nvector v0.21.2",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/61/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/61/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/62",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/62/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/62/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/62/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/62",
        "id": 1643963687,
        "node_id": "I_kwDOJN63t85h_OUn",
        "number": 62,
        "title": "`logfmt` does not conform to spec",
        "user": {
            "login": "jalaziz",
            "id": 247849,
            "node_id": "MDQ6VXNlcjI0Nzg0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/247849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jalaziz",
            "html_url": "https://github.com/jalaziz",
            "followers_url": "https://api.github.com/users/jalaziz/followers",
            "following_url": "https://api.github.com/users/jalaziz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jalaziz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jalaziz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jalaziz/subscriptions",
            "organizations_url": "https://api.github.com/users/jalaziz/orgs",
            "repos_url": "https://api.github.com/users/jalaziz/repos",
            "events_url": "https://api.github.com/users/jalaziz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jalaziz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-05-19T08:32:51Z",
        "updated_at": "2024-03-18T12:46:58Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nEven with vectordotdev/vector#12700, Vector's `logfmt` encoding does not conform to the semi-official [logfmt spec](https://pkg.go.dev/github.com/kr/logfmt).\r\n\r\nIn particular, the handling of quoted keys and values is still off. Some example scenarios are:\r\n1. Keys that include whitespace, equal signs, and quotes. These are all technically invalid according to the spec. The [go-logfmt](https://pkg.go.dev/github.com/go-logfmt/logfmt) library seems to handle this by removing the invalid characters.\r\n2. Quoted keys. Related to #1. Keys should never be quoted.\r\n3. Values containing equal signs. These values should be quoted.\r\n\r\n### Configuration\r\n\r\n```toml\r\n[sources.in]\r\ntype = \"stdin\"\r\n\r\n[transforms.modify]\r\ntype = \"remap\"\r\ninputs = [\"in\"]\r\nsource = '''\r\n  . = parse_json!(.message)\r\n  . = encode_logfmt(.)\r\n'''\r\n\r\n[sinks.out]\r\ninputs = [\"modify\"]\r\ntype = \"console\"\r\nencoding.codec = \"text\"\r\n```\r\n\r\n\r\n### Version\r\n\r\n0.22\r\n\r\n### Debug Output\r\n\r\n_No response_\r\n\r\n### Example Data\r\n```json\r\n{\"test key\": \"test value\", \"test=key\": \"test=value\", \"test\\\"key\": \"test\\\"value\"}\r\n```\r\n### Additional Context\r\n\r\nI've put together some basic tests of [go-logfmt](https://pkg.go.dev/github.com/go-logfmt/logfmt) in this [Go playground](https://go.dev/play/p/T7D6jV7drfQ).\r\n\r\nThe current implementation of `logfmt` in Vector relies on `encode_key_value`. Despite `logfmt` being the primary use case for `encode_key_value`, fixing these issues seems `logfmt`-specific. One option might be preprocessing keys and values to match the spec?\r\n\r\nAdditionally, even though `go-logfmt` drops invalid characters from keys, other options may be more desirable (e.g. replacing invalid characters with underscores).\r\n\r\n### References\r\n\r\nvectordotdev/vector#12674",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/62/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/62/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/63",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/63/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/63/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/63/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/63",
        "id": 1643968974,
        "node_id": "I_kwDOJN63t85h_PnO",
        "number": 63,
        "title": "Cannot use empty blocks with VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-18T21:18:36Z",
        "updated_at": "2023-03-28T13:36:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nVRL doesn't seem to allow if conditions with empty blocks. One could argue that we maybe _shouldn't_ allow this (though I think we should), but, at the least, the error message could be much better than the one the lexer gives. The below yields:\r\n\r\n```\r\nerror[E203]: syntax error\r\n  \u250c\u2500 :3:1\r\n  \u2502\r\n3 \u2502 }\r\n  \u2502 ^\r\n  \u2502 \u2502\r\n  \u2502 unexpected syntax token: \"RBrace\"\r\n  \u2502 expected one of: \"\\n\", \"!\", \"(\", \"[\", \"_\", \"abort\", \"false\", \"float literal\", \"function call\", \"identifier\", \"if\", \"integer literal\", \"null\", \"raw string literal\", \"regex literal\", \"string literal\", \"timestamp literal\", \"true\", \"{\", \"path literal\"\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\n### Configuration\r\n\r\n```text\r\n[sources.stdin]\r\ntype = \"stdin\"\r\ndecoding.codec = \"json\"\r\n\r\n[transforms.remap]\r\ntype = \"remap\"\r\ninputs = [ \"stdin\" ]\r\nsource = '''\r\n.image = string(.image) ?? \"unknown\"\r\nif starts_with(.image, \"foo\") {\r\n}\r\n'''\r\n\r\n[sinks.my_sink_id]\r\ntype = \"console\"\r\ninputs = [ \"remap\" ]\r\nencoding.codec = \"json\"\r\n```\r\n\r\n\r\n### Version\r\n\r\nvector 0.21.1\r\n\r\n### Debug Output\r\n\r\n_No response_\r\n\r\n### Example Data\r\n\r\n_No response_\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/63/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/63/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/64",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/64/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/64/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/64/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/64",
        "id": 1643969477,
        "node_id": "I_kwDOJN63t85h_PvF",
        "number": 64,
        "title": "Drop the `mode` argument for `parse_user_agent` function",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-05-11T21:38:59Z",
        "updated_at": "2023-03-28T13:36:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "After reviewing https://github.com/vectordotdev/vector/pull/12704/files, we should consider dropping the `mode` argument for the `parse_user_agent` function. This argument is unclear. It's not clear what's being traded off with the different modes. I also, generally, find `fast` to be a strange option as well, because who doesn't want fast?\r\n\r\nIf possible, I'd rather the argument reflect the output, where users can turn on enriched attributes one-by-one as needed.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/64/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/64/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/65",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/65/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/65/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/65/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/65",
        "id": 1643969938,
        "node_id": "I_kwDOJN63t85h_P2S",
        "number": 65,
        "title": "Switch `parse_grok` to call `parse_groks`",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320991022,
                "node_id": "LA_kwDOJN63t88AAAABPSfhLg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20tech%20debt",
                "name": "type: tech debt",
                "color": "BF72F6",
                "default": false,
                "description": "A code change that does not add user value"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-05T15:31:55Z",
        "updated_at": "2023-03-28T13:36:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Currently the `parse_grok` function differs in implementation from `parse_groks` (including different filter support). We are still working on some extensions to the standard grok patterns that are currently only in `parse_groks` but these are undocumented so far, so we can have `parse_grok` just call `parse_groks` since it is a strict superset of functionality.",
        "closed_by": {
            "login": "pablosichert",
            "id": 4450694,
            "node_id": "MDQ6VXNlcjQ0NTA2OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4450694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pablosichert",
            "html_url": "https://github.com/pablosichert",
            "followers_url": "https://api.github.com/users/pablosichert/followers",
            "following_url": "https://api.github.com/users/pablosichert/following{/other_user}",
            "gists_url": "https://api.github.com/users/pablosichert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pablosichert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pablosichert/subscriptions",
            "organizations_url": "https://api.github.com/users/pablosichert/orgs",
            "repos_url": "https://api.github.com/users/pablosichert/repos",
            "events_url": "https://api.github.com/users/pablosichert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pablosichert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/65/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/65/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/66",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/66/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/66/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/66/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/66",
        "id": 1643972464,
        "node_id": "I_kwDOJN63t85h_Qdw",
        "number": 66,
        "title": "New parser or source for Linux audit logs",
        "user": {
            "login": "kierdavis",
            "id": 845652,
            "node_id": "MDQ6VXNlcjg0NTY1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/845652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kierdavis",
            "html_url": "https://github.com/kierdavis",
            "followers_url": "https://api.github.com/users/kierdavis/followers",
            "following_url": "https://api.github.com/users/kierdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/kierdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kierdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kierdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/kierdavis/orgs",
            "repos_url": "https://api.github.com/users/kierdavis/repos",
            "events_url": "https://api.github.com/users/kierdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kierdavis/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-05-05T12:33:02Z",
        "updated_at": "2024-08-24T12:36:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Use Cases\r\n\r\nThe Linux kernel can provide a stream of audit logs, which allows system administrators to observe high-level security-related events without needing to trust every process to faithfully log what it is doing. This is accessible through a kernel API, but most Linux operating systems include a userspace service (auditd) to transfer these logs to a human-readable file on disk.\r\n\r\nIn an environment with hundreds of servers where system security is a major concern, I would like to build tooling to aggregate these audit logs at scale and deliver notifications when unusual activity is detected. Additionally, the audit log records when any operation is denied due to the active SELinux policy, so being able to aggregate these denials across many hosts would be useful when developing and tuning the SELinux policy.\r\n\r\n### Attempted Solutions\r\n\r\nObviously you can ingest audit.log using the `file` source, but only as plain text. The data is structured and it would be useful to be able to access the individual fields in Vector for analysis/routing purposes.\r\n\r\nAt first glance it might look like you could parse it with `parse_key_value`, but it is subtly more complex. For example, given this log line:\r\n\r\n```\r\ntype=USER_LOGOUT msg=audit(1651746068.966:32475): pid=122482 uid=0 auid=0 ses=146 subj=system_u:system_r:sshd_t:s0-s0:c0.c1023 msg='op=login id=0 exe=\"/usr/sbin/sshd\" hostname=? addr=1.2.3.4 terminal=ssh res=success' UID=\"root\" AUID=\"root\" ID=\"root\"\r\n```\r\n\r\nThis looks like a really strange format, but makes slightly more sense when you realise that this part:\r\n\r\n```\r\naudit(1651746068.966:32475): pid=122482 uid=0 auid=0 ses=146 subj=system_u:system_r:sshd_t:s0-s0:c0.c1023 msg='op=login id=0 exe=\"/usr/sbin/sshd\" hostname=? addr=1.2.3.4 terminal=ssh res=success'\r\n```\r\n\r\nis the raw text emitted by the kernel, which auditd substitutes (unquoted) into a template like this:\r\n\r\n```\r\ntype=USER_LOGOUT msg=<raw line> UID=\"root\" AUID=\"root\" ID=\"root\"\r\n```\r\n\r\nIf you try to pass this line to `parse_key_value`, it sees two pairs with the same key: `msg=audit(1651746068.966:32475):` and `msg='op=login`. Only the latter is kept; the former (which contains the timestamp!) is lost. This could be worked around by splitting the line somewhere in between e.g. immediately after the `msg=audit(...):` token.\r\n\r\nAlso, we end up with `msg='op=login` and `res=success'` but `op=login` and `res=success` would be more useful. This is due to `parse_key_value` only recognising double-quoted values, not single-quoted ones. Again, this can be worked around with string manipulation functions.\r\n\r\nCurrently we're using individual regexes to extract just the fields that we're interested in. It would be nice to have a general solution for parsing these logs.\r\n\r\n### Proposal\r\n\r\n#### A hacky solution\r\n\r\nExtend `parse_key_value` to understand single-quoted values as well as double-quoted ones.\r\nTogether with some string splitting, regexing, and timestamp parsing, these log lines can be fully parsed.\r\nA \"recipe\" for this could be included in the examples section of the docs.\r\n\r\n#### A good solution\r\n\r\nThe above solution requires a lot of VRL code, which everyone who wants to parse this log would have to duplicate. There is already precedent for having many specialised VRL functions for parsing different formats, so we could introduce a new one for parsing the auditd log format.\r\n\r\nExample VRL (same input string as discussed above):\r\n\r\n```\r\nparse_auditd(s'type=USER_LOGOUT msg=audit(1651746068.966:32475): pid=122482 uid=0 auid=0 ses=146 subj=system_u:system_r:sshd_t:s0-s0:c0.c1023 msg=\\'op=login id=0 exe=\"/usr/sbin/sshd\" hostname=? addr=1.2.3.4 terminal=ssh res=success\\' UID=\"root\" AUID=\"root\" ID=\"root\"')\r\n```\r\n\r\nReturn value:\r\n\r\n```json\r\n{\r\n  \"type\": \"USER_LOGOUT\",\r\n  \"timestamp\": \"2022-05-05T10:21:08.966Z\",\r\n  \"counter\": 32475,\r\n  \"pid\": 122482,\r\n  \"uid\": 0,\r\n  \"auid\": 0,\r\n  \"ses\": 146,\r\n  \"subj\": \"system_u:system_r:sshd_t:s0-s0:c0.c1023\",\r\n  \"msg\": {\r\n    \"op\": \"login\",\r\n    \"id\": 0,\r\n    \"exe\": \"/usr/bin/sshd\",\r\n    \"hostname\": \"?\",\r\n    \"addr\": \"1.2.3.4\",\r\n    \"terminal\": \"ssh\",\r\n    \"res\": \"success\"\r\n  },\r\n  \"UID\": \"root\",\r\n  \"AUID\": \"root\",\r\n  \"ID\": \"root\"\r\n}\r\n```\r\n\r\nAlternatively the contents of the `msg` object could be flattened into the top-level object. I don't have a preference on this.\r\n\r\n#### A better solution\r\n\r\nThe above solution will break if auditd ever changes its logging format. Since the file it writes to is intended to be human-readable, this is entirely possible.\r\n\r\nA more robust (but more complex) solution would be to implement a new source which skips auditd's serialisation and uses the kernel API (via `libaudit.so`) instead.\r\n\r\n### References\r\n\r\nThis may be a duplicate of an existing issue - there's some 200 issues mentioning the word \"audit\" and I haven't checked all of them.\r\n\r\n### Version\r\n\r\nvector 0.21.1 (x86_64-unknown-linux-gnu 18787c0 2022-04-22)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/66/reactions",
            "total_count": 14,
            "+1": 14,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/66/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/67",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/67/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/67/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/67/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/67",
        "id": 1643973125,
        "node_id": "I_kwDOJN63t85h_QoF",
        "number": 67,
        "title": "Dedicated dynamic path query syntax in VRL",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-03T11:23:17Z",
        "updated_at": "2023-03-28T13:37:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "_This issue got spun out from [this comment](https://github.com/vectordotdev/vector/pull/8467#issuecomment-1086785291)._\r\n\r\nDynamic field access in VRL is currently supported through the `get` function.\r\n\r\nWe want to remove this function in favour of dedicated syntax to achieve the same result.\r\n\r\nSpecifically, we would like to allow this:\r\n\r\n```coffee\r\nidx = 12\r\nbar = \"baz\"\r\n.foo.\"{{bar}}\"[idx]\r\n```\r\n\r\nThat is, we'll use string-templating (see vectordotdev/vector#8467) to allow dynamic fields, and allow variables (that _must_ resolve to a number) inside `[...]` for array indexing.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/67/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/67/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/68",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/68/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/68/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/68/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/68",
        "id": 1643975098,
        "node_id": "I_kwDOJN63t85h_RG6",
        "number": 68,
        "title": "Syslog parsing overwrites duplicate structured data fields",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-04-27T19:24:16Z",
        "updated_at": "2023-03-28T13:38:44Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nNoticed by https://github.com/vectordotdev/vector/pull/12433#discussion_r860138956\r\n\r\n[RFC5424](https://datatracker.ietf.org/doc/html/rfc5424#section-6.3.3) allows for keys to be repeated in structured data elements. Currently, Vector assumes the keys are unique and so you will only end up with one of the values in the resulting parsed object.\r\n\r\nFor repeated keys, the value should be an array of all values seen.\n\n### Configuration\n\n_No response_\n\n### Version\n\nVector 0.21.1\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n* https://github.com/vectordotdev/vector/pull/12433\r\n* https://github.com/vectordotdev/vector/issues/12431\r\n* https://github.com/vectordotdev/vector/issues/12410#issuecomment-1111158213",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/68/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/68/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/69",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/69/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/69/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/69/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/69",
        "id": 1643975858,
        "node_id": "I_kwDOJN63t85h_RSy",
        "number": 69,
        "title": "vrl: `truncate()` inconsistency: operates on UTF-8 characters instead of bytes",
        "user": {
            "login": "hhromic",
            "id": 5802993,
            "node_id": "MDQ6VXNlcjU4MDI5OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5802993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hhromic",
            "html_url": "https://github.com/hhromic",
            "followers_url": "https://api.github.com/users/hhromic/followers",
            "following_url": "https://api.github.com/users/hhromic/following{/other_user}",
            "gists_url": "https://api.github.com/users/hhromic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hhromic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hhromic/subscriptions",
            "organizations_url": "https://api.github.com/users/hhromic/orgs",
            "repos_url": "https://api.github.com/users/hhromic/repos",
            "events_url": "https://api.github.com/users/hhromic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hhromic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-04-22T15:09:57Z",
        "updated_at": "2023-03-28T13:39:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nI'm not sure if this is a bug or a feature request. I tend to consider it a bug due to consistency expectations.\r\n\r\nString manipulation functions in VRL seem to mostly operate on bytes and not UTF-8 characters (unicode scalars).\r\n\r\nThis was recently brought up for some discussion for the `length()` function in https://github.com/vectordotdev/vector/issues/12019, where a new `strlen()` was implemented to operate on UTF-8 characters instead of bytes.\r\n\r\nHowever, I just noticed that the `truncate()` function is operating in UTF-8 characters instead of bytes, creating an inconstency.\r\n\r\nThis is problematic for us because we use `truncate()` to limit the number of bytes in a field that later is used for insertion into a `VARCHAR(size)` column in an SQL database, which defines `size` in bytes (highly likely an SQL standard).\r\n\r\nConsider the following REPL examples:\r\n```\r\n$ truncate(s'hello', 2)\r\n\"he\"\r\n\r\n$ length(truncate(s'hello', 2))\r\n2\r\n\r\n$ truncate(s'\u00f1and\u00fa', 2)  # expected just '\u00f1' here due to using 2 bytes\r\n\"\u00f1a\"\r\n\r\n$ length(truncate(s'\u00f1and\u00fa', 2))  # expected 2 here\r\n3\r\n```\r\n\r\nFor completeness, I checked up the `slice()` function and indeed operates on bytes as expected, like `length()`:\r\n```\r\n$ length(s'\u00f1and\u00fa')\r\n7\r\n\r\n$ slice!(s'\u00f1and\u00fa', 0)\r\n\"\u00f1and\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 1)\r\n\"\ufffdand\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 2)\r\n\"and\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 3)\r\n\"nd\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 4)\r\n\"d\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 5)\r\n\"\u00fa\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 6)\r\n\"\ufffd\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 7)\r\n\"\"\r\n\r\n$ slice!(s'\u00f1and\u00fa', 8)\r\nfunction call error for \"slice\" at (0:21): \"start\" must be between \"-7\" and \"7\"\r\n```\r\n\r\nFixing this is probably going to be tricky because of the obvious breakage :(\r\n\r\n### Configuration\r\n\r\n_No response_\r\n\r\n### Version\r\n\r\nvector 0.21.0 (x86_64-unknown-linux-gnu c1edb89 2022-04-14)\r\n\r\n### Debug Output\r\n\r\n_No response_\r\n\r\n### Example Data\r\n\r\n_No response_\r\n\r\n### Additional Context\r\n\r\n_No response_\r\n\r\n### References\r\n\r\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/69/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/69/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/71",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/71/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/71/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/71/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/71",
        "id": 1643978173,
        "node_id": "I_kwDOJN63t85h_R29",
        "number": 71,
        "title": "Deprecate lookup paths of shape `[42]foo` and `foo.`",
        "user": {
            "login": "pablosichert",
            "id": 4450694,
            "node_id": "MDQ6VXNlcjQ0NTA2OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4450694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pablosichert",
            "html_url": "https://github.com/pablosichert",
            "followers_url": "https://api.github.com/users/pablosichert/followers",
            "following_url": "https://api.github.com/users/pablosichert/following{/other_user}",
            "gists_url": "https://api.github.com/users/pablosichert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pablosichert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pablosichert/subscriptions",
            "organizations_url": "https://api.github.com/users/pablosichert/orgs",
            "repos_url": "https://api.github.com/users/pablosichert/repos",
            "events_url": "https://api.github.com/users/pablosichert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pablosichert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-04-20T20:51:04Z",
        "updated_at": "2023-03-28T13:40:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "vectordotdev/vector#12306 surfaced that `lookup` currently allows creating paths of shape `[42]foo` and `foo.`.\r\n\r\nThis behavior should be deprecated, and tests added back to https://github.com/vectordotdev/vector/pull/12306/commits/fb1da4e5ee9d03c7e7e7281de25dd7149f6f518b that assert that these paths are invalid.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/71/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/71/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/72",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/72/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/72/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/72/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/72",
        "id": 1643978641,
        "node_id": "I_kwDOJN63t85h_R-R",
        "number": 72,
        "title": "Support xxhash",
        "user": {
            "login": "eugene-bright",
            "id": 39331266,
            "node_id": "MDQ6VXNlcjM5MzMxMjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/39331266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eugene-bright",
            "html_url": "https://github.com/eugene-bright",
            "followers_url": "https://api.github.com/users/eugene-bright/followers",
            "following_url": "https://api.github.com/users/eugene-bright/following{/other_user}",
            "gists_url": "https://api.github.com/users/eugene-bright/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eugene-bright/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eugene-bright/subscriptions",
            "organizations_url": "https://api.github.com/users/eugene-bright/orgs",
            "repos_url": "https://api.github.com/users/eugene-bright/repos",
            "events_url": "https://api.github.com/users/eugene-bright/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eugene-bright/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T09:53:00Z",
        "updated_at": "2023-03-28T13:40:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nFast unique content-based key generation for subsequent identification of the duplicate records\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\nI'm just looking for a fast alternative to the [sha1](https://vector.dev/docs/reference/vrl/functions/#sha1)\n\n### References\n\n[XXHash homepage](https://github.com/Cyan4973/xxHash)\n\n### Version\n\nvector 0.20.0 (x86_64-unknown-linux-gnu 2a706a3 2022-02-11)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/72/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/72/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/73",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/73/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/73/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/73/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/73",
        "id": 1643979511,
        "node_id": "I_kwDOJN63t85h_SL3",
        "number": 73,
        "title": "`parse_grok` VRL function ignores nonmatching characters at the start of the string, `parse_groks` errors",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-30T20:31:04Z",
        "updated_at": "2023-03-28T13:40:53Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nWith `parse_grok`:\r\n\r\n```\r\n$ parse_grok!(\"nork32\", \"%{NUMBER: num}\")\r\n{ \"num\": 32 }\r\n```\r\n\r\nWith `parse_groks`:\r\n\r\n```\r\n$ parse_groks!( \"nork32\", [\"%{NUMBER: num}\"])\r\nfunction call error for \"parse_groks\" at (0:43): unable to parse grok: value does not match any rule\r\n```\r\n\r\nBoth functions should behave the same here.\n\n### Configuration\n\n_No response_\n\n### Version\n\nv0.20\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/73/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/73/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/148",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/148/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/148/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/148/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/148",
        "id": 1644103010,
        "node_id": "I_kwDOJN63t85h_wVi",
        "number": 148,
        "title": "vrl: null and unicode escapes not working in string literals",
        "user": {
            "login": "hhromic",
            "id": 5802993,
            "node_id": "MDQ6VXNlcjU4MDI5OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5802993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hhromic",
            "html_url": "https://github.com/hhromic",
            "followers_url": "https://api.github.com/users/hhromic/followers",
            "following_url": "https://api.github.com/users/hhromic/following{/other_user}",
            "gists_url": "https://api.github.com/users/hhromic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hhromic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hhromic/subscriptions",
            "organizations_url": "https://api.github.com/users/hhromic/orgs",
            "repos_url": "https://api.github.com/users/hhromic/repos",
            "events_url": "https://api.github.com/users/hhromic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hhromic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2022-03-21T21:36:38Z",
        "updated_at": "2025-02-26T16:53:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nI recently found out that the null and unicode character escape sequences are not working in [string literal expressions in VRL](https://vector.dev/docs/reference/vrl/expressions/#string).\r\nThe documentation makes sense, therefore I think something is off in the VRL parser.\r\n\r\nExamples from the VRL REPL:\r\n```\r\n$ \"hello\\0world\"\r\nerror[E202]: syntax error\r\n  \u250c\u2500 :1:1\r\n  \u2502\r\n1 \u2502 \"hello\\0world\"\r\n  \u2502 ^^^^^^^^^^^^^^ unexpected error: invalid escape character: \\0\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n```\r\n```\r\n$ \"hello\\u{1F30E}world\"  # also tested with \\U{1F30E} and \\u1F30E just in case\r\nerror[E202]: syntax error\r\n  \u250c\u2500 :1:1\r\n  \u2502\r\n1 \u2502 \"hello\\u{1F30E}world\"\r\n  \u2502 ^^^^^^^^^^^^^^^^^^^^^ unexpected error: invalid escape character: \\u\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nAll the other documented escape sequences seems to be working fine (although not all printed correctly):\r\n```\r\n$ \"hello\\nworld\"\r\n\"hello\\nworld\"\r\n\r\n$ \"hello\\\"world\"\r\n\"hello\\\"world\"\r\n\r\n$ \"hello\\'world\"\r\n\"hello'world\"\r\n\r\n$ \"hello\\\\world\"\r\n\"hello\\\\world\"\r\n\r\n$ \"hello\\nworld\"\r\n\"hello\\nworld\"\r\n\r\n$ \"hello\\rworld\"  # \\r (carriage-return) was rendered instead of printed with an escape\r\nworld\"\r\n\r\n$ \"hello\\tworld\"  # \\t (tab) was rendered instead of printed with an escape\r\n\"hello  world\"\r\n```\n\n### Configuration\n\n```text\nN/A\n```\n\n\n### Version\n\nvector 0.20.0 (x86_64-unknown-linux-gnu 2a706a3 2022-02-11)\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/148/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/148/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/74",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/74/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/74/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/74/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/74",
        "id": 1643982320,
        "node_id": "I_kwDOJN63t85h_S3w",
        "number": 74,
        "title": "Merging via `|=` for fallible functions resets the left hand side when there is an error",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-11T16:27:03Z",
        "updated_at": "2023-03-28T13:42:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nIt seems like, when using `|=` with a return value from a fallible function, if an error occurs, the value assignment doesn't merge, but assigns instead to `{}`.\n\n### Configuration\n\n```text\n$ . = {\"message\": \"foo\"}\r\n{ \"message\": \"foo\" }\r\n\r\n$ ., err |= parse_syslog(.no_exist)\r\n\"function call error for \\\"parse_syslog\\\" at (10:33): expected \\\"string\\\", got \\\"null\\\"\"\r\n\r\n$ .\r\n{  }\n```\n\n\n### Version\n\nvector 0.20.0 (x86_64-apple-darwin 2a706a3 2022-02-10)\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/74/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/74/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/75",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/75/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/75/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/75/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/75",
        "id": 1643982873,
        "node_id": "I_kwDOJN63t85h_TAZ",
        "number": 75,
        "title": "Multiple adjacent control characters in a string cause parsing to produce incorrect results",
        "user": {
            "login": "darora",
            "id": 397622,
            "node_id": "MDQ6VXNlcjM5NzYyMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/397622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darora",
            "html_url": "https://github.com/darora",
            "followers_url": "https://api.github.com/users/darora/followers",
            "following_url": "https://api.github.com/users/darora/following{/other_user}",
            "gists_url": "https://api.github.com/users/darora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darora/subscriptions",
            "organizations_url": "https://api.github.com/users/darora/orgs",
            "repos_url": "https://api.github.com/users/darora/repos",
            "events_url": "https://api.github.com/users/darora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darora/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-08T06:13:46Z",
        "updated_at": "2023-03-28T13:42:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nCorrect functioning, when control chars are not adjacent:\r\n```\r\n$ parse_logfmt!(s'msg=\"foo bar\\n \\nbaz\"')\r\n{ \"msg\": \"foo bar\\\\n \\\\nbaz\" }\r\n```\r\n\r\nIncorrect functioning, when control chars are adjacent:\r\n```\r\n$ parse_logfmt!(s'msg=\"foo bar\\n\\nbaz\"')\r\n{ \"bar\\n\\nbaz\"\": true, \"msg\": \"\\\"foo\" }\r\n\r\n$ parse_logfmt!(s'msg=\"foo bar\\a\\abaz\"')\r\n{ \"bar\\a\\abaz\"\": true, \"msg\": \"\\\"foo\" }\r\n```\n\n### Configuration\n\n```text\nn/a\n```\n\n\n### Version\n\nvector 0.20.0 (x86_64-apple-darwin 2a706a3 2022-02-10)\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n`msg=\"foo bar\\a\\abaz\"`\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/75/reactions",
            "total_count": 9,
            "+1": 9,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/75/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/76",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/76/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/76/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/76/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/76",
        "id": 1643983487,
        "node_id": "I_kwDOJN63t85h_TJ_",
        "number": 76,
        "title": "Improve VRL parsing error message for unexpected EOF",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-03-02T19:40:27Z",
        "updated_at": "2023-03-28T13:43:00Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nWith config:\r\n\r\n```toml\r\n[sources.source0]\r\ntype = \"stdin\"\r\n\r\n[transforms.transform0]\r\ntype = \"filter\"\r\ninputs = [ \"source0\" ]\r\ncondition = \"\"\" match(string(.name) ?? \"\", r'(^(machine|apiserver|cluster:capacity|cluster:container|cluster:cpu|cluster:master|cluster:memory|cluster:nodes|cluster:node|container_cpu|container_fs|container_memory|container_network|kube_node|kube_pod_container|kube_pod|node|pod:container_cpu_usage:sum|pod:container_memory_usage_bytes:sum|pod:container)_.*|kube_resourcequota|ALERTS_FOR_STATE|cluster_version)'\"\"\"\r\n\r\n[sinks.sink0]\r\ninputs = [\"transform0\"]\r\ntype = \"console\"\r\nencoding.codec = \"json\"\r\n```\r\n\r\nVector outputs an \"unexpected parse error\":\r\n\r\n```\r\nerror[E202]: syntax error\r\n  \u250c\u2500 :1:1\r\n  \u2502\r\n1 \u2502  match(string(.name) ?? \"\", r'(^(machine|apiserver|cluster:capacity|cluster:container|cluster:cpu|cluster:master|cluster:memory|cluster:nodes|cluster:node|container_cpu|container_fs|container_memory|container_network|kube_node|kube_pod_container|kube_pod|node|pod:container_cpu_usage:sum|pod:container_memory_usage_bytes:sum|pod:container)_.*|kube_resourcequota|ALERTS_FOR_STATE|cluster_version)'\r\n  \u2502 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unexpected error: unexpected parse error\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nDue to the lack of a closing `)`.\r\n\r\nSeemingly we could do better here with something like `unexpected end-of-input, expected )`.\n\n### Attempted Solutions\n\n_No response_\n\n### Proposal\n\n_No response_\n\n### References\n\nhttps://discordapp.com/channels/742820443487993987/746070591097798688/948664679083966474\n\n### Version\n\nvector 0.20.0 (x86_64-apple-darwin 2a706a3 2022-02-10)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/76/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/76/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/77",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/77/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/77/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/77/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/77",
        "id": 1643985176,
        "node_id": "I_kwDOJN63t85h_TkY",
        "number": 77,
        "title": "VRL doesn't report fallibility well for statements in blocks",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-01T18:03:06Z",
        "updated_at": "2023-03-28T13:43:54Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\r\n\r\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\r\n\r\n### Problem\r\n\r\nTake this ridiculous VRL script:\r\n\r\n```\r\n    if true {\r\n      3 / 0\r\n      # lots of things\r\n      true\r\n    }\r\n```\r\n\r\nThis error gets reported as:\r\n\r\n```\r\nerror[E100]: unhandled error\r\n  \u250c\u2500 :1:3\r\n  \u2502\r\n1 \u2502 \u256d \u256d   if true {\r\n2 \u2502 \u2502 \u2502     3 / 0\r\n3 \u2502 \u2502 \u2502     # lots of things\r\n4 \u2502 \u2502 \u2502     true\r\n5 \u2502 \u2502 \u2502   }\r\n  \u2502 \u2570\u2500\u2502\u2500\u2500\u2500^ expression can result in runtime error\r\n  \u2502   \u2570\u2500\u2500\u2500' handle the error case to ensure runtime success\r\n  \u2502\r\n```\r\n\r\nie. The entire block is reported as \"can result in runtime error\". \r\n\r\nIt would be much more useful if it could actually report the exact statements (in this case the `3 / 0`) within the block that could result in an error.\r\n\r\n\r\nThis issue is slightly complicated by the fact that one can handle the errors within blocks. Eg, this script:\r\n\r\n```\r\n    x = {\r\n      3 / 0\r\n      # lots of things\r\n      true\r\n    } ?? true\r\n```\r\n\r\nCurrently fallibility in a statement is a simple boolean, the solution may require making fallibility a more complex struct that includes the location of the offending statement(s) that get's bubbled up past the blocks.\r\n\r\n\r\n### Version\r\n\r\nv0.20\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/77/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/77/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/78",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/78/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/78/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/78/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/78",
        "id": 1643985919,
        "node_id": "I_kwDOJN63t85h_Tv_",
        "number": 78,
        "title": "VRL: operator compare two timestamp objects",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-02-25T19:59:45Z",
        "updated_at": "2023-03-28T13:44:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Use Cases\n\nwhen running VRL transformation, it would be beneficial to compare two timestamps using standard operators. For example:\r\n\r\n```\r\nt'2000-01-01T00:00:00.000Z' < now() # yields false\r\n# similar functionality for <=, ==, !=, etc..\r\n```\r\n\n\n### Attempted Solutions\n\nN/A\n\n### Proposal\n\nN/A\n\n### References\n\n_No response_\n\n### Version\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/78/reactions",
            "total_count": 10,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/78/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/376",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/376/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/376/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/376/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/376",
        "id": 1842195893,
        "node_id": "I_kwDOJN63t85tza21",
        "number": 376,
        "title": "parse_url doesn't support duplicated query parameters",
        "user": {
            "login": "anas-aso",
            "id": 16538065,
            "node_id": "MDQ6VXNlcjE2NTM4MDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16538065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anas-aso",
            "html_url": "https://github.com/anas-aso",
            "followers_url": "https://api.github.com/users/anas-aso/followers",
            "following_url": "https://api.github.com/users/anas-aso/following{/other_user}",
            "gists_url": "https://api.github.com/users/anas-aso/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anas-aso/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anas-aso/subscriptions",
            "organizations_url": "https://api.github.com/users/anas-aso/orgs",
            "repos_url": "https://api.github.com/users/anas-aso/repos",
            "events_url": "https://api.github.com/users/anas-aso/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anas-aso/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-02-25T11:03:19Z",
        "updated_at": "2023-08-08T22:35:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### A note for the community\n\n<!-- Please keep this note for the community -->\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n<!-- Thank you for keeping this note for the community -->\r\n\n\n### Problem\n\nFor URLs like this one `http://exam.co/?key=val1&key=val2` when we use `parse_url` function, only the last value will be returned. \r\nHaving duplicated query parameters is a valid HTTP URL\r\n<img width=\"1792\" alt=\"Screenshot 2022-02-25 at 11 25 11\" src=\"https://user-images.githubusercontent.com/16538065/155699434-9c1da3b7-ae22-4d97-b4da-adcecc5088c3.png\">\r\n\r\nThis happens because the list of query params is turned in to a map [here](https://github.com/vectordotdev/vector/blob/26b4e959613dd1c6768f11ba2e1ff6e8df0494bd/lib/vrl/stdlib/src/parse_url.rs#L146)\n\n### Configuration\n\n```text\nnot needed as this is pure VRL.\n```\n\n\n### Version\n\nvector 0.19.2\n\n### Debug Output\n\n_No response_\n\n### Example Data\n\n_No response_\n\n### Additional Context\n\n_No response_\n\n### References\n\n_No response_",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/376/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/376/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/149",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/149/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/149/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/149/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/149",
        "id": 1644103832,
        "node_id": "I_kwDOJN63t85h_wiY",
        "number": 149,
        "title": "Change VRL to support compile-time-only functions, needed for semantic meaning functions",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-02-10T15:26:50Z",
        "updated_at": "2023-03-28T14:40:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I realized that the function I built (`set_field_purpose`) is a \u201ccompile-time only\u201d function. That is, it does something with the type state of VRL, but doesn\u2019t do anything at runtime. It\u2019s not a \u201cruntime function that can also run at compile time\u201d, it\u2019s a \u201ccompile time function that cannot run at runtime\u201d.  Or, to be more exact, it\u2019s a no-op at runtime.\r\n\r\nThe implication here is that this function must be called in a non-dynamic context; otherwise you end up with unexpected results.\r\n\r\nTake for example this:\r\n\r\n```coffee\r\nif .foo == true {\r\n\tset_field_purpose(.foo, \"bar\")\r\n}\r\n```\r\n\r\nThe `set_field_purpose` function does its job when VRL compiles, but VRL compilation obviously can\u2019t consider run-time information, so it compiles `set_field_purpose` which then modifies the schema in Vector.\r\n\r\nThe operator writing this might expect that function to only do something if `.foo` returns `true`, but that\u2019s not possible because we need that function to execute at compile-time, for the schema to work when Vector boots.\r\n\r\nThe solution here is to add a new check to the compiler, which keeps track of each root expression, and makes sure that there\u2019s no compile-time-only expression nested in a runtime expression. So, this compiles:\r\n\r\n```coffee\r\nset_field_purpose(.foo, \u201cbar\u201d)\r\nif .foo == true {\r\n\tlog(\u201cyep\u201d)\r\n}\r\n```\r\n\r\nBut this doesn\u2019t:\r\n\r\n```coffee\r\nif .foo == true {\r\n\tset_field_purpose(.foo, \u201cbar\u201d)\r\n\tlog(\u201cyep\u201d)\r\n}\r\n```\r\n\r\nFor now, we can keep the initial implementation simple, and just never allow a compile-time expression to be mixed with any other expressions, but in the future we can expand this to basically support \u201cconst\u201d similar to Rust, in which some expressions can _also_ be used at compile time, with the addition in our case that we also have the constraint that some expressions can _only_ be used at compile time (such as `set_field_purpose`), not saying we _should_ do this, but it\u2019s a possibility that remains open to us.\r\n\r\nAnyway, long story short, for us to allow VRL to manipulate semantic meaning of schema fields (which we\u2019d need to allow people to manually map from one schema to another), we need to add an initial bare-bones feature that supports the above use-case.\r\n\r\nUnless, of course, anyone has a better idea that would be simpler to do as an initial pass, without causing too much hackery and/or breaking changes.\r\n\r\nOf course, the most simple solution is to \u201cnot care\u201d about the above confusion, and simply document for now that this function does not interact with other dynamic expressions.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/149/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/79",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/79/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/79/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/79/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/79",
        "id": 1643987349,
        "node_id": "I_kwDOJN63t85h_UGV",
        "number": 79,
        "title": "VRL's `del` function should update type definitions for non-external paths",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-02-08T12:28:50Z",
        "updated_at": "2023-03-28T13:45:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This works as expected:\r\n\r\n```coffee\r\n.foo.bar = \"baz\"\r\ndel(.foo.bar)\r\nstring!(.foo.bar)\r\n```\r\n\r\n```\r\nfunction call error for \"string\" at (0:17): expected \"string\", got \"null\"\r\n```\r\n\r\nThis does not:\r\n\r\n```coffee\r\nfoo.bar = \"baz\"\r\ndel(foo.bar)\r\nstring!(foo.bar)\r\n```\r\n\r\n```\r\nerror[E620]: can't abort infallible function\r\n  \u250c\u2500 :1:1\r\n  \u2502\r\n1 \u2502 string!(foo.bar)\r\n  \u2502 ^^^^^^- remove this abort-instruction\r\n  \u2502 \u2502\r\n  \u2502 this function can't fail\r\n  \u2502\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nThe problem is that the `del` function uses the `update_state` call: https://github.com/vectordotdev/vector/blob/f049246db7e3025aa55eb1e160bd3669b485887d/lib/vrl/stdlib/src/del.rs#L172-L178\r\n\r\nThis then calls `delete_type_def`: https://github.com/vectordotdev/vector/blob/ee6771146836c53cd13f8260b29bc678e61b6330/lib/vrl/compiler/src/expression/query.rs#L53-L62\r\n\r\nWhich is only implemented to work for external targets, whereas the second example above works on an internal target (variable `foo`).\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/79/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/79/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/80",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/80/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/80/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/80/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/80",
        "id": 1643988065,
        "node_id": "I_kwDOJN63t85h_URh",
        "number": 80,
        "title": "Add function for repeating a string to VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-02-01T18:28:07Z",
        "updated_at": "2023-03-28T13:45:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\r\nHi there,\r\n\r\nThank you for opening an issue. Please note that we try to keep the Vector issue tracker reserved for bug reports and feature requests. For general usage questions, please see: https://chat.vector.dev.\r\n-->\r\n\r\n<!--- Please keep this note for the community --->\r\n\r\n### Community Note\r\n\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n\r\n<!--- Thank you for keeping this note for the community --->\r\n\r\n### Current Vector Version\r\n\r\n<!---\r\nRun `vector --version` to show the version, and paste the result between the ``` marks below. This will record which version was current at the time of your feature request, to help manage the request backlog.\r\n\r\nIf you're not using the latest version, please check to see if something related to your request has already been implemented in a later version.\r\n-->\r\n\r\n```\r\nvector 0.19.1 (x86_64-apple-darwin 3cf70cf 2022-01-25)\r\n```\r\n\r\n### Use-cases\r\n\r\nUsers may want to repeat a string a number of times.\r\n\r\n### Attempted Solutions\r\n\r\nWe currently do support this in an undocumented fashion via the multiplication operator, for example: `\"some string\" * 5`\r\n\r\n### Proposal\r\n\r\nWe add a specialized function for repeating a string that can be fallible that can be called like `repeat(\"some string\", 5)`.\r\n\r\n### References\r\n\r\n<!--\r\nAre there any other GitHub issues, whether open or closed, that are related to the problem you've described above or to the suggested solution? If so, please create a list below that mentions each of them. For example:\r\n\r\n- vectordotdev/vector#7023\r\n\r\n-->\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/80/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/80/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/82",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/82/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/82/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/82/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/82",
        "id": 1643991141,
        "node_id": "I_kwDOJN63t85h_VBl",
        "number": 82,
        "title": "chore(vrl): explore arena allocation for VRL programs",
        "user": {
            "login": "tobz",
            "id": 222615,
            "node_id": "MDQ6VXNlcjIyMjYxNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/222615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tobz",
            "html_url": "https://github.com/tobz",
            "followers_url": "https://api.github.com/users/tobz/followers",
            "following_url": "https://api.github.com/users/tobz/following{/other_user}",
            "gists_url": "https://api.github.com/users/tobz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tobz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tobz/subscriptions",
            "organizations_url": "https://api.github.com/users/tobz/orgs",
            "repos_url": "https://api.github.com/users/tobz/repos",
            "events_url": "https://api.github.com/users/tobz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tobz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-01-25T16:53:37Z",
        "updated_at": "2023-03-28T13:46:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "As a thought experiment: could we use an arena allocator for VRL programs to authoritatively constrain their runtime memory usage as well as speed up allocations?\r\n\r\nCurrently, there are some suboptimal allocation patterns that we'd like to remove from VRL execution in general, but when dealing with non-scalar data types (maps, lists, etc), and including externally-imported code (such as codec parsers), we inevitably perform heap allocations.\r\n\r\nThis introduces unwelcome allocator pressure, and potentially hard-to-defragment allocations, which typically don't need to live past the execution of the program, as we frequently clone the value on the way out of VRL.\r\n\r\nIt could potentially be advantageous to use an arena allocator for all heap allocations in a VRL program.  Arena allocators are typically used for scenarios where there is \"phase-oriented\" allocations, or allocation that happens as part of a logical operation, and then can be totally cleaned up once that operation is over.  VRL program execution, as it is stateless between program runs, fits this model well.\r\n\r\nSeparate from the potential speedups of phase-oriented allocation/deallocation, it could also be useful to use a dedicated allocator as doing so would allow constraining the memory usage in a very precise manner, as most arena allocators are fixed-sized, or can operate in fixed-size modes.  This would finally allow us to concretely represent how much memory a VRL program could consume, which would be the sum of the thread stack size and the arena allocator size.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/82/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/82/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/83",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/83/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/83/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/83/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/83",
        "id": 1643991502,
        "node_id": "I_kwDOJN63t85h_VHO",
        "number": 83,
        "title": "Only allow coalesing in queries (reading a value)",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-01-20T15:52:00Z",
        "updated_at": "2023-06-21T13:44:15Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Currently, path coalescing can be used in any location in VRL that expects a so-called `Query` expression.\r\n\r\nFor example, fetching a field from the external target using coalescing would be done as:\r\n\r\n```json\r\n{ \"foo\": { \"baz\": true } }\r\n```\r\n\r\n```coffee\r\n.foo.(bar | baz)\r\n```\r\n\r\n```json\r\ntrue\r\n```\r\n\r\nThis is a non-ambigious example, but the ambiguity happens when you use paths for non-query related work, such as deleting a field:\r\n\r\n```\r\n{ \"foo\": { \"bar\": true, \"baz\": true } }\r\n```\r\n\r\n```coffee\r\ndel(.foo.(bar | baz))\r\n```\r\n\r\nThe below could be interpreted in different ways:\r\n\r\n```jsonc\r\n// remove first found element\r\n{ \"foo\": { \"baz\": true } }\r\n// remove last found element\r\n{ \"foo\": { \"bar\": true } }\r\n// remove all found element\r\n{ \"foo\": { } }\r\n```\r\n\r\nThe same applies for operations where we _insert_ information based on a path.\r\n\r\nWe've had discussions in the past on whether we should remove path coalescing entirely, but @lukesteensen rightfully brought up the fact that we could instead restrict its usage in non-query use-cases. So, the above `del` function call would be invalid because the provided path uses coalescing.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/83/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/83/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/84",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/84/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/84/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/84/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/84",
        "id": 1643991939,
        "node_id": "I_kwDOJN63t85h_VOD",
        "number": 84,
        "title": "Add VRL function: parse_prometheus_text",
        "user": {
            "login": "roganartu",
            "id": 1133705,
            "node_id": "MDQ6VXNlcjExMzM3MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1133705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/roganartu",
            "html_url": "https://github.com/roganartu",
            "followers_url": "https://api.github.com/users/roganartu/followers",
            "following_url": "https://api.github.com/users/roganartu/following{/other_user}",
            "gists_url": "https://api.github.com/users/roganartu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/roganartu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/roganartu/subscriptions",
            "organizations_url": "https://api.github.com/users/roganartu/orgs",
            "repos_url": "https://api.github.com/users/roganartu/repos",
            "events_url": "https://api.github.com/users/roganartu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/roganartu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-01-13T23:20:40Z",
        "updated_at": "2023-03-28T13:47:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Community Note\r\n\r\n* Please vote on this issue by adding a \ud83d\udc4d [reaction](https://blog.github.com/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) to the original issue to help the community and maintainers prioritize this request\r\n* If you are interested in working on this issue or have submitted a pull request, please leave a comment\r\n\r\n### Current Vector Version\r\n\r\n```\r\nvector 0.19.0 (x86_64-unknown-linux-gnu da60b55 2021-12-28)\r\n```\r\n\r\n### Use-cases\r\n\r\nA common way to create small, custom prometheus exporters is to write scripts that emit Prometheus textfile format files to a directory that is then read by [node_exporter](https://github.com/prometheus/node_exporter). This requires managing scheduling (via cron or systemd timer), and doesn't provide many metrics about the process itself (eg runtime, exit code, etc).\r\n\r\nA nice alternative to this would be a vector pipeline of `sources.exec -> transforms.remap -> sinks.prometheus`, but the exec emits a `log` and parsing that into `metrics` for the prometheus sink to consume would require lua and would likely be error prone and slow.\r\n\r\n### Attempted Solutions\r\n\r\nI considered trying to write a lua PoC, but decided against it because it seems like a bad idea. I looked through the VRL docs and saw a number of `parse_` functions for various different formats, but none for Prometheus data. I also searched github issues for existing \"prometheus\" issues but saw nothing obviously duplicate of this. I apologise if I missed something obvious.\r\n\r\n### Proposal\r\n\r\nAdd a VRL function: `parse_prometheus_text`.\r\n\r\nIt should accept a Prometheus textfile format string, and return a vector metrics object. Example usage:\r\n```\r\n[sources.my_exec]\r\ntype = \"exec\"\r\nmode = \"scheduled\"\r\nscheduled.exec_interval_secs = 10\r\ncommand = [\"my_prometheus_command\"]\r\n\r\n[transforms.parse_prometheus_output]\r\ntype = \"remap\"\r\ninputs = [ \"my_exec\" ]\r\nsource = '''\r\n. = parse_prometheus_text!(.message)\r\n'''\r\n\r\n[sinks.prometheus]\r\ntype = \"prometheus_exporter\"\r\ninputs = [ \"parse_prometheus_output\" ]\r\naddress = \"0.0.0.0:9598\"\r\ndefault_namespace = \"vector\"\r\n```\r\n\r\nThe metrics printed to stdout by `my_prometheus_command` should be exposed via `0.0.0.0:9598/metrics` like any other input to that sink would be.\r\n\r\nThe other prometheus features (specifically the prometheus exporter source) suggest that vector is already capable of robustly parsing Prometheus text format.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/84/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/84/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/85",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/85/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/85/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/85/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/85",
        "id": 1643993054,
        "node_id": "I_kwDOJN63t85h_Vfe",
        "number": 85,
        "title": "VRL not support decoding gzip snappy?",
        "user": {
            "login": "vipsql",
            "id": 13550799,
            "node_id": "MDQ6VXNlcjEzNTUwNzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13550799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vipsql",
            "html_url": "https://github.com/vipsql",
            "followers_url": "https://api.github.com/users/vipsql/followers",
            "following_url": "https://api.github.com/users/vipsql/following{/other_user}",
            "gists_url": "https://api.github.com/users/vipsql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vipsql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vipsql/subscriptions",
            "organizations_url": "https://api.github.com/users/vipsql/orgs",
            "repos_url": "https://api.github.com/users/vipsql/repos",
            "events_url": "https://api.github.com/users/vipsql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vipsql/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-12-23T09:09:56Z",
        "updated_at": "2023-03-28T13:47:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Current Vector Version\r\n0.18.1\r\n\r\nVRL not support decoding gzip snappy?\r\n\r\nlike:  {key1: \"value\",\"message\":\"gzip(object)\"}\r\n\r\nthe function like filebeats `decompress_gzip_field`",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/85/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/85/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/87",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/87/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/87/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/87/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/87",
        "id": 1643994053,
        "node_id": "I_kwDOJN63t85h_VvF",
        "number": 87,
        "title": "VRL: add `parse_json_object` as a convenient way to parse JSON objects",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2021-11-05T10:16:15Z",
        "updated_at": "2023-05-02T19:09:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "The `parse_json` function is frequently used to parse the `.message` field into a JSON object. Technically, a string such as `\"true\"` is also valid JSON, in that it produces the boolean JSON value `true`. Because of this, the return type of the `parse_json` function is any valid JSON type.\r\n\r\nThis is annoying when you just want to parse the message as a JSON object, e.g.:\r\n\r\n```coffee\r\n. |= object!(parse_json!(.message))\r\n```\r\n\r\nI propose we add a convenience function `parse_json_object` that fails if the resulting type isn't an object.\r\n\r\nThis allows you to write:\r\n\r\n```coffee\r\n. |= parse_json_object!(.message)\r\n```\r\n\r\nWhich isn't _much_ shorter, but it is less cluttered with verbose syntax of wrapping two functions.\r\n\r\nI also thought of allowing something like `parse_json!(.message, kind: \"object\")`, but that feels like an awkward interface to have.\r\n\r\nNote that there is also the `merge` function, which already works this way because it requires an object as input:\r\n\r\n```coffee\r\n. = merge!(., .message) # fails if `.` or `.message` isn't an object\r\n```\r\n\r\nBut I've seen a sufficient number of people use `. |= ...` in the wild, that it might make sense to optimize that pattern.\r\n\r\nI'm also open to alternatives that improve this use-case (perhaps \"just\" documenting this better could be a first step).",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/87/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/87/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/88",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/88/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/88/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/88/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/88",
        "id": 1643996802,
        "node_id": "I_kwDOJN63t85h_WaC",
        "number": 88,
        "title": "Parse file path from source, assign part of path/name to value",
        "user": {
            "login": "DaveWK",
            "id": 13626476,
            "node_id": "MDQ6VXNlcjEzNjI2NDc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13626476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DaveWK",
            "html_url": "https://github.com/DaveWK",
            "followers_url": "https://api.github.com/users/DaveWK/followers",
            "following_url": "https://api.github.com/users/DaveWK/following{/other_user}",
            "gists_url": "https://api.github.com/users/DaveWK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DaveWK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DaveWK/subscriptions",
            "organizations_url": "https://api.github.com/users/DaveWK/orgs",
            "repos_url": "https://api.github.com/users/DaveWK/repos",
            "events_url": "https://api.github.com/users/DaveWK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DaveWK/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-10-25T17:00:35Z",
        "updated_at": "2023-03-28T13:49:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hi,\r\n\r\nI couldn't find an easy way to do this in the docs, but it would be nice to be able to have a VRL function that can parse file paths and allow me to do things like assign values based on a piece of that path. If this is already doable, I imagine this is a fairly common thing to do and an example in the docs would be appreciated.\r\n\r\nIn example with a \"file\" source type, assume file is at: /var/log/test/foo.log\r\n\r\nthen in the transforms:\r\n\r\n.service_name = get!(parse_filepath(.file), path: [-1])\r\n\r\nshould assign service_name to be \"foo\"\r\n\r\nThe file parser would be os-agnostic so windows/linux paths get parsed without the user having to worry about things like slashes or \"C:\\\" vs \"/\"",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/88/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/88/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/89",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/89/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/89/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/89/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/89",
        "id": 1643997676,
        "node_id": "I_kwDOJN63t85h_Wns",
        "number": 89,
        "title": "The `parse_grok` function should accept aliases (helper rules) defined in a file",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-10-17T17:44:19Z",
        "updated_at": "2023-03-28T13:49:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Similar to vectordotdev/vector#9660, but the ability to define patterns/aliases/helpers in a separate file.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/89/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/89/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/90",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/90/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/90/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/90/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/90",
        "id": 1643998440,
        "node_id": "I_kwDOJN63t85h_Wzo",
        "number": 90,
        "title": "`to_timestamp` can fail if numeric values are too big",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-10-06T21:29:07Z",
        "updated_at": "2023-03-28T13:49:36Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Reported by [user in discord](https://discord.com/channels/742820443487993987/764187584452493323/895385025854451782).\r\n\r\n`to_timestamp(999999999999999999999.1)` is not identified by VRL as fallible, but does actually fail with:\r\n\r\n```\r\nfunction call error for \"to_timestamp\" at (0:38): unable to coerce 1000000000000000000000 into \"timestamp\"\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/90/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/90/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/91",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/91/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/91/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/91/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/91",
        "id": 1643998948,
        "node_id": "I_kwDOJN63t85h_W7k",
        "number": 91,
        "title": "Allow \"type guards\" in VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-10-01T17:35:46Z",
        "updated_at": "2023-03-28T13:49:48Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I believe we've discussed this in other places before as well, but it came up again in https://github.com/vectordotdev/vector/issues/9406 where a user expected that if they used `is_string()` that VRL would be able to determine that the argument thereafter was a string if the rest of the expression only executed if `is_string` was true.\r\n\r\nSpecifically, they had:\r\n\r\n```\r\nis_string(.message) && !contains(.message, s'test')\r\n```\r\n\r\nBut you could also imagine this with `if` conditions:\r\n\r\n```\r\nif is_string(.message) {\r\n !contains(.message, s'test')\r\n} else {\r\n  false\r\n}\r\n```\r\n\r\nI'm not 100% sold on if we want to do this, but opening for discussion.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/91/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/91/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/92",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/92/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/92/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/92/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/92",
        "id": 1644007572,
        "node_id": "I_kwDOJN63t85h_ZCU",
        "number": 92,
        "title": "Dissallow `;` at the end of the last statement in an `if` predicate",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-09-20T16:18:42Z",
        "updated_at": "2023-03-28T13:52:58Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This parses and works fine in VRL:\r\n\r\n```\r\nx = 7\r\nvalue = if (x = x + 1; x == 8;) {\r\n  true\r\n}\r\n```\r\n\r\nArguably, we should error with the trailing `;` at the end of `x == 8`. This would be inline with Rust's treatment of `;`.\r\n\r\nThe problem is caused by the parsing rule:\r\n\r\n```\r\n    \"(\" <v:(<AssignmentExpr> \";\")+> <e:(<AssignmentExpr>)?> \")\" => {\r\n```\r\n\r\nWith the trailing `;`, lalrpop juts puts all the statements into `v`, and leaves `e` as None. To fix this one would like to to remove the optional `?` from `e`. That would force the last line to be `e` and thus disallow the trailing `;`. However, this creates an ambiguity in the parsing rules and lalrpop refuses to build.\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/92/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/92/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/93",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/93/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/93/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/93/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/93",
        "id": 1644009325,
        "node_id": "MDU6SXNzdWUxNjQ0MDA5MzI1",
        "number": 93,
        "title": "Add more \"try\" suggestions to diagnostic messages",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-26T12:19:30Z",
        "updated_at": "2023-03-28T13:53:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Now that VRL has settled in, go through our existing diagnostic messages, and see if we can add any `try` suggestions to the diagnostic message.\r\n\r\nThis would propose potential fixes, allowing operators to apply a fix without having to go through the language documentation.\r\n\r\nEventually, this can be used to automate any of those fixes.\r\n\r\nPulled out from https://github.com/timberio/vector/pull/8894.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/93/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/93/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/94",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/94/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/94/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/94/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/94",
        "id": 1644011272,
        "node_id": "MDU6SXNzdWUxNjQ0MDExMjcy",
        "number": 94,
        "title": "Invalid \"Exact\" Types Can't Be Fixed",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-26T12:17:25Z",
        "updated_at": "2023-03-28T13:54:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": " ```\r\nerror[E110]: invalid argument type\r\n  \u250c\u2500 :1:8\r\n  \u2502\r\n1 \u2502 upcase(null)\r\n  \u2502        ^^^^\r\n  \u2502        \u2502\r\n  \u2502        this expression resolves to the exact type \"null\"\r\n  \u2502        but the parameter \"value\" expects the exact type \"string\"\r\n  \u2502\r\n  = try: ensuring an appropriate type at runtime\r\n  =\r\n  =     null = string!(null)\r\n  =     upcase(null)\r\n  =\r\n  = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails\r\n  =\r\n  =     null = to_string(null) ?? \"default\"\r\n  =     upcase(null)\r\n  =\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = learn more about error code 110 at https://errors.vrl.dev/110\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nThe above diagnostic message is nonsensical because `null` can never be forced into a string. Basically, this code can never compile, regardless of what error handling you apply, since it'll always fail at runtime.\r\n\r\nPulled out from https://github.com/timberio/vector/pull/8894.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/94/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/94/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/95",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/95/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/95/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/95/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/95",
        "id": 1644011616,
        "node_id": "MDU6SXNzdWUxNjQ0MDExNjE2",
        "number": 95,
        "title": "Add ability to completely flatten objects via `flatten`",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-08-25T19:40:45Z",
        "updated_at": "2025-02-01T20:33:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "A [user in discord](https://discord.com/channels/742820443487993987/746070591097798688/880125594807971840) was depending on the previous behavior of the `loki` sink to flatten objects like:\r\n\r\n```json\r\n{\r\n  \"foo\": [{\"bar\": \"baz\"}]\r\n}\r\n```\r\n\r\nTo\r\n\r\n```json\r\n{\r\n  \"foo[0].bar\": \"baz\"\r\n}\r\n```\r\n\r\nThis behavior was changed in vectordotdev/vector#8044 to send the nested JSON as-is to Loki.\r\n\r\nVRL does have a `flatten` function, which I think could support the user's use-case, but this function does not flatten nested arrays and arrays of objects. I think we could extend it to do so; perhaps via an additional parameter.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/95/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/95/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/96",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/96/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/96/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/96/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/96",
        "id": 1644011927,
        "node_id": "MDU6SXNzdWUxNjQ0MDExOTI3",
        "number": 96,
        "title": "Add function is_uuid on VRL",
        "user": {
            "login": "Steuf",
            "id": 262871,
            "node_id": "MDQ6VXNlcjI2Mjg3MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/262871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Steuf",
            "html_url": "https://github.com/Steuf",
            "followers_url": "https://api.github.com/users/Steuf/followers",
            "following_url": "https://api.github.com/users/Steuf/following{/other_user}",
            "gists_url": "https://api.github.com/users/Steuf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Steuf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Steuf/subscriptions",
            "organizations_url": "https://api.github.com/users/Steuf/orgs",
            "repos_url": "https://api.github.com/users/Steuf/repos",
            "events_url": "https://api.github.com/users/Steuf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Steuf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-18T16:37:56Z",
        "updated_at": "2023-03-28T13:55:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Current Vector Version\r\n\r\n```\r\n0.15.2\r\n```\r\n\r\n### Use-cases\r\n\r\nCheck if the value of field are a valid uuid\r\n\r\n### Attempted Solutions\r\n\r\nCan be done by a regex match :\r\n\r\n```\r\n        if exists(.uuid) && !match(.uuid, r'^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$') {\r\n          .uuid = \"00000000-0000-0000-0000-000000000000\"\r\n        }\r\n```\r\n\r\n### Proposal\r\n\r\nAdd a native function is_uuid to check if the string is a valid uuid, I think I will be more performant than a regex ;)\r\n\r\n### References\r\n\r\nhttps://docs.rs/rubble/0.0.3/rubble/uuid/trait.IsUuid.html\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/96/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/96/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/97",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/97/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/97/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/97/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/97",
        "id": 1644012348,
        "node_id": "MDU6SXNzdWUxNjQ0MDEyMzQ4",
        "number": 97,
        "title": "Add equivalence of string.tr() on ruby to VRL",
        "user": {
            "login": "Steuf",
            "id": 262871,
            "node_id": "MDQ6VXNlcjI2Mjg3MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/262871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Steuf",
            "html_url": "https://github.com/Steuf",
            "followers_url": "https://api.github.com/users/Steuf/followers",
            "following_url": "https://api.github.com/users/Steuf/following{/other_user}",
            "gists_url": "https://api.github.com/users/Steuf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Steuf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Steuf/subscriptions",
            "organizations_url": "https://api.github.com/users/Steuf/orgs",
            "repos_url": "https://api.github.com/users/Steuf/repos",
            "events_url": "https://api.github.com/users/Steuf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Steuf/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-08-18T14:47:35Z",
        "updated_at": "2023-03-28T13:55:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Current Vector Version \r\n\r\n```\r\n0.15.2\r\n```\r\n\r\n### Use-cases\r\n\r\nUsing a custom base64 encoding on log, before use of base64decode we need to replace some chars on string to re-transform it on a valid base64 string.\r\n\r\n### Attempted Solutions\r\n\r\nCan be done today with usage of LUA transform with the function string.gsub.\r\n\r\n### Proposal\r\n\r\nAdd a new function equivalent of string.tr() on ruby on VRL to avoid usage of lua script.\r\n\r\n### References\r\n\r\nhttps://apidock.com/ruby/String/tr\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/97/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/97/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/98",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/98/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/98/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/98/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/98",
        "id": 1644015644,
        "node_id": "MDU6SXNzdWUxNjQ0MDE1NjQ0",
        "number": 98,
        "title": "Issue with `del` inside chained functions",
        "user": {
            "login": "spencergilbert",
            "id": 11903873,
            "node_id": "MDQ6VXNlcjExOTAzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11903873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spencergilbert",
            "html_url": "https://github.com/spencergilbert",
            "followers_url": "https://api.github.com/users/spencergilbert/followers",
            "following_url": "https://api.github.com/users/spencergilbert/following{/other_user}",
            "gists_url": "https://api.github.com/users/spencergilbert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spencergilbert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spencergilbert/subscriptions",
            "organizations_url": "https://api.github.com/users/spencergilbert/orgs",
            "repos_url": "https://api.github.com/users/spencergilbert/repos",
            "events_url": "https://api.github.com/users/spencergilbert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spencergilbert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-08-16T15:27:56Z",
        "updated_at": "2023-03-28T13:57:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Ex:\r\n\r\n```shell\r\n$ .message = \"{\\\"foobar\\\": \\\"baz\\\"}\"\r\n\"{\\\"foobar\\\": \\\"baz\\\"}\"\r\n\r\n$ . |= object!(parse_json!(del(.message)))\r\n{ \"foobar\": \"baz\", \"message\": \"{\\\"foobar\\\": \\\"baz\\\"}\" }\r\n```\r\n\r\n## Workaround\r\n\r\nMove `del` function to a separate line either like:\r\n\r\n```vrl\r\nmsg = del(.message)\r\n. |= object!(parse_json!(msg))\r\n```\r\n\r\nor\r\n\r\n```vrl\r\n. |= object!(parse_json!(.message))\r\ndel(.message)\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/98/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/98/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/99",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/99/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/99/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/99/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/99",
        "id": 1644017426,
        "node_id": "MDU6SXNzdWUxNjQ0MDE3NDI2",
        "number": 99,
        "title": "VRL: strange path creation due to double quotes",
        "user": {
            "login": "spencergilbert",
            "id": 11903873,
            "node_id": "MDQ6VXNlcjExOTAzODcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11903873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spencergilbert",
            "html_url": "https://github.com/spencergilbert",
            "followers_url": "https://api.github.com/users/spencergilbert/followers",
            "following_url": "https://api.github.com/users/spencergilbert/following{/other_user}",
            "gists_url": "https://api.github.com/users/spencergilbert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spencergilbert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spencergilbert/subscriptions",
            "organizations_url": "https://api.github.com/users/spencergilbert/orgs",
            "repos_url": "https://api.github.com/users/spencergilbert/repos",
            "events_url": "https://api.github.com/users/spencergilbert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spencergilbert/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-06T14:21:27Z",
        "updated_at": "2023-03-28T13:57:51Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Consider the following VRL:\r\n\r\n```vrl\r\n$ .nested.\"\"field\"\" = \"foobar\"\r\n\"foobar\"\r\n\r\n$ .\r\n{ \"nested\": { \"\": { \"field\": { \"\": \"foobar\" } } } }\r\n```\r\n\r\nThis could arguably be either a syntax error, or possible create a path like `.nested.\"field\"` or even `.nested.\"\"field\"\"` (or any assortment of escaped chars...\r\n\r\nI wouldn't expect the current behavior.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/99/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/99/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/100",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/100/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/100/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/100/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/100",
        "id": 1644018560,
        "node_id": "MDU6SXNzdWUxNjQ0MDE4NTYw",
        "number": 100,
        "title": "No way to access keys with quotes in them in VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-08-04T14:38:19Z",
        "updated_at": "2023-03-28T13:58:14Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "There doesn't _appear_ to be a way to access keys that literally have `\"`s in them in VRL.\r\n\r\n```\r\nvector 0.15.0 (x86_64-apple-darwin 994d812 2021-07-16)\r\n```\r\n\r\n```\r\n$ . = { \"event\": {\"\\\"log\\\"\": 1 }}\r\n$ .event\r\n{ \"\"log\"\": 1 }\r\n$ .event.\"\\\"log\\\"\"\r\nnull\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/101",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/101/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/101/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/101/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/101",
        "id": 1644028151,
        "node_id": "MDU6SXNzdWUxNjQ0MDI4MTUx",
        "number": 101,
        "title": "Keep `lib/stdlib/data/user_agent_regexes.yaml` up to date",
        "user": {
            "login": "ktff",
            "id": 18242866,
            "node_id": "MDQ6VXNlcjE4MjQyODY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18242866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ktff",
            "html_url": "https://github.com/ktff",
            "followers_url": "https://api.github.com/users/ktff/followers",
            "following_url": "https://api.github.com/users/ktff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ktff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ktff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ktff/subscriptions",
            "organizations_url": "https://api.github.com/users/ktff/orgs",
            "repos_url": "https://api.github.com/users/ktff/repos",
            "events_url": "https://api.github.com/users/ktff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ktff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-08-02T16:20:40Z",
        "updated_at": "2023-03-28T14:01:27Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "File `lib/vrl/stdlib/data/user_agent_regexes.yaml` with regexes for parsing user agent string was introduced in vectordotdev/vector#8262. It's a copy of  https://github.com/ua-parser/uap-core/blob/master/regexes.yaml file so it needs to be kept up to date. \r\n\r\nThe original file is updated on average once a month so it would be nice to also update then but we can be more coarse than that. The best option would be to automize this. The second best option would be to add some notification script which would detect changes and open an issue for it.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/102",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/102/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/102/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/102/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/102",
        "id": 1644028727,
        "node_id": "MDU6SXNzdWUxNjQ0MDI4NzI3",
        "number": 102,
        "title": "Add explicit \"enum type\" to VRL",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-07-28T09:06:15Z",
        "updated_at": "2023-03-28T14:01:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We've been introducing functions that take an enum variant as an argument.\r\n\r\nFor example:\r\n\r\n```coffee\r\nparse_nginx_log(.message, format: \"combined\")\r\n```\r\n\r\nThe `format` argument has to be either `\"combined\"` or `\"error\"`, and has to be a string literal. This has been awkwardly implemented and can be confusing to users. It also results in less-than-ideal error messages if people try to pass in non-literal string values (e.g. through an event field).\r\n\r\nI've been pondering a solution, and although having full-blown enum support (both defining and referencing) can be powerful, I also believe it doesn't fit the simplicity we want to achieve with VRL.\r\n\r\nInstead, I think we should add a new enum type that can only be referenced as a literal, similar to how we have a timestamp type.\r\n\r\nSpecifically, I propose we add `e'...'` as a type for an enum variant literal.\r\n\r\nGiven this function signature:\r\n\r\n```coffee\r\nfoo(timestamp: Timestamp, variant: Enum)\r\n```\r\n\r\nYou'd call this function like so:\r\n\r\n```coffee\r\nfoo(timestamp: t'2021-01-01T00:00:00Z', variant: e'my_variant')\r\n```\r\n\r\nThis would only compile if `variant` is passed an enum type (`e'...'`) _and_ if the provided enum variant is accepted by the function signature.\r\n\r\nFunction signatures would define the set of enum variants they accept, which the compiler can then automatically check (and provide useful error messages indicating which enum variants are expected and which one was provided). This is an improvement over the current situation because functions now have to build their own (non-ideal) error messages when dealing with enum-like strings, given that we don't actually have support for enums.\r\n\r\nAll of this would also bubble up into the Cue docs, which would result in better auto-generated function signatures and a list of enum variants supported for a specific parameter.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/102/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/104",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/104/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/104/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/104/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/104",
        "id": 1644030028,
        "node_id": "MDU6SXNzdWUxNjQ0MDMwMDI4",
        "number": 104,
        "title": "`unnest` should unnest one level deeper",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-07-13T23:15:38Z",
        "updated_at": "2023-03-28T14:02:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "As noted on [discord](https://discord.com/channels/742820443487993987/759154784309215252/864642159377383445).\r\n\r\nSay you have an event of:\r\n\r\n```json\r\n{ \"things\": [{ \"id\": 1, \"thing\": \"thong\" }, { \"id\": 2, \"thang\": \"thung\" }], \"timestamp\": \"monday\" }\r\n```\r\n\r\nand you run:\r\n```\r\n. = unnest(.things)\r\n```\r\n\r\nThis gives you an event array of:\r\n\r\n```json\r\n[{ \"things\": { \"id\": 1, \"thing\": \"thong\" }, \"timestamp\": \"monday\" }, \r\n { \"things\": { \"id\": 2, \"thang\": \"thung\" }, \"timestamp\": \"monday\" }]\r\n```\r\n\r\nIt seems much more likely that the user is going to want the result to be:\r\n\r\n```json\r\n[{ \"id\": 1, \"thing\": \"thong\", \"timestamp\": \"monday\" }, \r\n { \"id\": 2, \"thang\": \"thung\", \"timestamp\": \"monday\" }]\r\n```\r\n\r\nWe should either just change unnest to work this way, or perhaps make it parameterised so the user has an option as to which way it should work.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/105",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/105/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/105/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/105/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/105",
        "id": 1644038048,
        "node_id": "MDU6SXNzdWUxNjQ0MDM4MDQ4",
        "number": 105,
        "title": "Address UX differences between VRL REPL and remap transform",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320995784,
                "node_id": "LA_kwDOJN63t88AAAABPSfzyA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/Epic",
                "name": "Epic",
                "color": "0366d6",
                "default": false,
                "description": "Larger, user-centric issue that contains multiple sub-issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-12T08:54:07Z",
        "updated_at": "2023-03-28T14:05:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Specifically, assigning a value to a target results in the compiler knowing the type of that value, which means error handling isn't needed (and in fact, is rejected), whereas at runtime in the remap transform, the value type might be unknown, which causes the program tested in the REPL not to be valid in the Remap transform.\n\nI don't think we should \"just\" make the REPL forget types of assigned values, but I'm also not sure yet that the correct solution is. We'll have to experiment a bit to find the right balance.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/106",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/106/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/106/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/106/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/106",
        "id": 1644042908,
        "node_id": "MDU6SXNzdWUxNjQ0MDQyOTA4",
        "number": 106,
        "title": "Add new `parse_regex_any` VRL function",
        "user": {
            "login": "rabbitstack",
            "id": 11174375,
            "node_id": "MDQ6VXNlcjExMTc0Mzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11174375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabbitstack",
            "html_url": "https://github.com/rabbitstack",
            "followers_url": "https://api.github.com/users/rabbitstack/followers",
            "following_url": "https://api.github.com/users/rabbitstack/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabbitstack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabbitstack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabbitstack/subscriptions",
            "organizations_url": "https://api.github.com/users/rabbitstack/orgs",
            "repos_url": "https://api.github.com/users/rabbitstack/repos",
            "events_url": "https://api.github.com/users/rabbitstack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabbitstack/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-07-02T12:55:54Z",
        "updated_at": "2023-03-28T14:12:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "As discussed in Discord with Jean Mertz, it would be very valuable to provide a VRL function for regex parsing that can accept a list of regex patterns, similar to how the deprecated regex parser operates.\r\n\r\nFrom Discord:\r\n\r\n>Unfortunately there's no solution to this right now. We did add a match_any (https://vector.dev/docs/reference/vrl/functions/#match_any) function to speed up matching cases, but we don't have a parse_regex_any yet.\r\n\r\n> We are tracking compile-time optimisations in https://github.com/timberio/vector/issues/7636, which would include cases like these, but there's nothing concrete yet.\r\n\r\n> In the mean time, feel free to open an issue for this specific use-case, as I don't see a reason not to add parse_regex_any to at least have a solution in place until we have those optimisations.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/106/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/107",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/107/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/107/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/107/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/107",
        "id": 1644044928,
        "node_id": "MDU6SXNzdWUxNjQ0MDQ0OTI4",
        "number": 107,
        "title": "improve `parse_key_value` escaping management & align it with `encode_key_value`",
        "user": {
            "login": "prognant",
            "id": 59561183,
            "node_id": "MDQ6VXNlcjU5NTYxMTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/59561183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prognant",
            "html_url": "https://github.com/prognant",
            "followers_url": "https://api.github.com/users/prognant/followers",
            "following_url": "https://api.github.com/users/prognant/following{/other_user}",
            "gists_url": "https://api.github.com/users/prognant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prognant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prognant/subscriptions",
            "organizations_url": "https://api.github.com/users/prognant/orgs",
            "repos_url": "https://api.github.com/users/prognant/repos",
            "events_url": "https://api.github.com/users/prognant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prognant/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-07-01T14:35:52Z",
        "updated_at": "2023-03-28T14:09:00Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "`parse_key_value` has limited escaping support for some sequence, however the parsing does not remove the escaping character, this is inconsistent with `encode_key_value` that adds escape character causing  `parse_key_value(encode_key_value(...))` not to be a noop (I'm not sure it is even if there is no escaped character, it should but that's not the point here).\r\n\r\n```\r\n$ parse_key_value!(s'foo=\"\\\"bar\\\"\"', whitespace:\"strict\")\r\n{ \"foo\": \"\\\\\\\"bar\\\\\\\"\" }\r\n```\r\nwhereas it should be\r\n\r\n```\r\n{ \"foo\": \"\\\"bar\\\"\" }\r\n```\r\n\r\nTest cases that would have to be updated (as of today they are not in master)\r\nhttps://github.com/timberio/vector/blob/2ce9ddfdb53792e24e3d0360a713f490f717ebb7/lib/vrl/stdlib/src/parse_key_value.rs#L557-L573",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/108",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/108/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/108/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/108/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/108",
        "id": 1644046038,
        "node_id": "MDU6SXNzdWUxNjQ0MDQ2MDM4",
        "number": 108,
        "title": "[grok] support `csv` filter",
        "user": {
            "login": "vladimir-dd",
            "id": 52405651,
            "node_id": "MDQ6VXNlcjUyNDA1NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/52405651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vladimir-dd",
            "html_url": "https://github.com/vladimir-dd",
            "followers_url": "https://api.github.com/users/vladimir-dd/followers",
            "following_url": "https://api.github.com/users/vladimir-dd/following{/other_user}",
            "gists_url": "https://api.github.com/users/vladimir-dd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vladimir-dd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vladimir-dd/subscriptions",
            "organizations_url": "https://api.github.com/users/vladimir-dd/orgs",
            "repos_url": "https://api.github.com/users/vladimir-dd/repos",
            "events_url": "https://api.github.com/users/vladimir-dd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vladimir-dd/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-06-22T14:53:19Z",
        "updated_at": "2023-03-28T14:09:28Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "`csv(headers[, separator[, quotingcharacter]])`\n\nhttps://docs.datadoghq.com/logs/processing/parsing/?tab=filters",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/109",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/109/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/109/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/109/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/109",
        "id": 1644050554,
        "node_id": "MDU6SXNzdWUxNjQ0MDUwNTU0",
        "number": 109,
        "title": "Add `to_array` coercion function to VRL",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-06-07T11:00:18Z",
        "updated_at": "2023-03-28T14:11:35Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "```coffee\r\nto_array(null) # => []\r\nto_array([]) # => []\r\n\r\n# any other type results in an error\r\n```\r\n\r\nCurrently, the same can be achieved using if conditions or (not exactly similar, but close) `array(.foo) ?? []`, but wanting to coerce a potential `null` value when working with arrays is a common enough occurrence to justify this function.\r\n\r\ncc @leebenson",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/109/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/109/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/110",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/110/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/110/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/110/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/110",
        "id": 1644052698,
        "node_id": "MDU6SXNzdWUxNjQ0MDUyNjk4",
        "number": 110,
        "title": "Add optimization pass to VRL compiler",
        "user": {
            "login": "lukesteensen",
            "id": 333505,
            "node_id": "MDQ6VXNlcjMzMzUwNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/333505?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lukesteensen",
            "html_url": "https://github.com/lukesteensen",
            "followers_url": "https://api.github.com/users/lukesteensen/followers",
            "following_url": "https://api.github.com/users/lukesteensen/following{/other_user}",
            "gists_url": "https://api.github.com/users/lukesteensen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lukesteensen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lukesteensen/subscriptions",
            "organizations_url": "https://api.github.com/users/lukesteensen/orgs",
            "repos_url": "https://api.github.com/users/lukesteensen/repos",
            "events_url": "https://api.github.com/users/lukesteensen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lukesteensen/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-05-28T16:19:39Z",
        "updated_at": "2023-03-28T14:12:38Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We added the `match_any` function in vectordotdev/vector#7414 to allow for improved performance when matching a single field against multiple regular expressions. This was in response to an issue with a relatively slow `match(.foo, ...) || match(.foo, ...) || ...`.\r\n\r\nAn alternative to adding new functions that are more performant in certain cases would be to identify those patterns at compile time and transform them into a more efficient form internally. This would require some kind of pattern-matching optimization pass in the VRL compiler.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/110/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/111",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/111/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/111/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/111/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/111",
        "id": 1644054087,
        "node_id": "MDU6SXNzdWUxNjQ0MDU0MDg3",
        "number": 111,
        "title": "confusing error messages in REPL mode regarding string error coalescing",
        "user": {
            "login": "jerome-kleinen-kbc-be",
            "id": 49525049,
            "node_id": "MDQ6VXNlcjQ5NTI1MDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/49525049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerome-kleinen-kbc-be",
            "html_url": "https://github.com/jerome-kleinen-kbc-be",
            "followers_url": "https://api.github.com/users/jerome-kleinen-kbc-be/followers",
            "following_url": "https://api.github.com/users/jerome-kleinen-kbc-be/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerome-kleinen-kbc-be/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerome-kleinen-kbc-be/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerome-kleinen-kbc-be/subscriptions",
            "organizations_url": "https://api.github.com/users/jerome-kleinen-kbc-be/orgs",
            "repos_url": "https://api.github.com/users/jerome-kleinen-kbc-be/repos",
            "events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-05-26T19:07:31Z",
        "updated_at": "2023-03-28T14:13:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\r\nHi there,\r\n\r\nThank you for opening an issue. Please note that we try to keep the Vector issue tracker reserved for bug reports and feature requests. For general usage questions, please see: https://chat.vector.dev.\r\n-->\r\n\r\n### Vector Version\r\n\r\n<!---\r\nRun `vector --version` to show the version, and paste the result between the ``` marks below.\r\n\r\nIf you are not running the latest version of Vector, please try upgrading because your issue may have already been fixed.\r\n-->\r\n\r\n```\r\nvector 0.13.1 (v0.13.1 x86_64-apple-darwin 2021-04-29)\r\n```\r\n\r\n### Vector Configuration File\r\n\r\n<!--\r\nPaste the relevant parts of your `vector.toml` configuration between the ``` marks below.\r\n\r\n!! If your config files contain sensitive information please remove it !!\r\n-->\r\n\r\nNot applicable, but run the following commands in REPL mode:\r\n```\r\n.message = \"abc\"\r\nmatch(string(.message) ?? \"\", r'a')\r\n```\r\n\r\n### Debug Output\r\n\r\n<!--\r\nFull debug output can be obtained by running Vector with the following:\r\n\r\n```\r\nRUST_BACKTRACE=full vector -vvv <rest of commands>\r\n```\r\n\r\nPlease create a GitHub Gist containing the debug output. Please do _not_ paste the debug output in the issue, since debug output is long.\r\n\r\n!! Debug output may contain sensitive information. Please review it before posting publicly. !!\r\n-->\r\n\r\n\r\n### Expected Behavior\r\n\r\nTo be honest, I think the REPL mode should allow this notation to be more in line with testing real life events, or it should give the following error\r\n\r\n```\r\nerror[E651]: unnecessary error coalescing operation\r\n  \u250c\u2500 :1:7\r\n  \u2502\r\n1 \u2502 match(string(.message) ?? \"\", r'a')\r\n  \u2502       ^^^^^^^^^^^^^^^^ -- -- this expression never resolves\r\n  \u2502       \u2502                \u2502\r\n  \u2502       \u2502                remove this error coalescing operation\r\n  \u2502       this expression can't fail\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nPerhaps this error should be warning instead?\r\n\r\n### Actual Behavior\r\n\r\nvector throws the following two errors:\r\n\r\n```\r\nerror[E651]: unnecessary error coalescing operation\r\n  \u250c\u2500 :1:7\r\n  \u2502\r\n1 \u2502 match(string(.message) ?? \"\", r'a')\r\n  \u2502       ^^^^^^^^^^^^^^^^ -- -- this expression never resolves\r\n  \u2502       \u2502                \u2502\r\n  \u2502       \u2502                remove this error coalescing operation\r\n  \u2502       this expression can't fail\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n\r\nerror[E110]: invalid argument type\r\n  \u250c\u2500 :1:7\r\n  \u2502\r\n1 \u2502 match(string(.message) ?? \"\", r'a')\r\n  \u2502       ^^^^^^^^^^^^^^^^^^^^^^\r\n  \u2502       \u2502\r\n  \u2502       this expression resolves to the exact type \"boolean\"\r\n  \u2502       but the parameter \"value\" expects the exact type \"string\"\r\n  \u2502\r\n  = try: ensuring an appropriate type at runtime\r\n  =\r\n  =     null == null = string!(null == null)\r\n  =     match(null == null, a)\r\n  =\r\n  = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails\r\n  =\r\n  =     null == null = to_string(null == null) ?? \"default\"\r\n  =     match(null == null, a)\r\n  =\r\n  = see documentation about error handling at https://errors.vrl.dev/#handling\r\n  = learn more about error code 110 at https://errors.vrl.dev/110\r\n  = see language documentation at https://vrl.dev\r\n```\r\n\r\nThe second warning is rather confusing: `string(.message) ?? \"\"` would never result in a boolean\r\n\r\n### Example Data\r\n\r\n<!--\r\nPlease provide any example data that will help debug the issue, for example:\r\n\r\n```\r\n201.69.207.46 - kemmer6752 [07/06/2019:14:53:55 -0400] \"PATCH /innovative/interfaces\" 301 669\r\n```\r\n-->\r\n\r\n### Additional Context\r\n\r\n<!--\r\nIs there anything atypical about your situation that we should know? For example: is Vector running in Kubernetes? Are you passing any unusual command line options or environment variables to opt-in to non-default behavior?\r\n-->\r\n\r\n### References\r\n\r\n<!--\r\nAre there any other GitHub issues (open or closed) or Pull Requests that should be linked here? For example:\r\n\r\n- vectordotdev/vector#6017\r\n\r\n-->\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/111/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/112",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/112/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/112/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/112/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/112",
        "id": 1644060052,
        "node_id": "MDU6SXNzdWUxNjQ0MDYwMDUy",
        "number": 112,
        "title": "Expand supported redactors for redact",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-05-13T16:01:20Z",
        "updated_at": "2023-03-28T14:16:24Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Broken off from https://github.com/timberio/vector/pull/7250#discussion_r631912508\r\n\r\nThe initial implementation of `redact` just had one redactor that always replaced with `[REDACTED]`. We should expand this to support additional redactors like:\r\n\r\n* Customizing the redaction string\r\n* Hashing the value to have consistent replacement text\r\n* Masking such as only showing the last 4 for social security numbers",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/112/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/112/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/113",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/113/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/113/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/113/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/113",
        "id": 1644060454,
        "node_id": "MDU6SXNzdWUxNjQ0MDYwNDU0",
        "number": 113,
        "title": "Unresolvable VRL compiler complaint about fallibility",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320968761,
                "node_id": "LA_kwDOJN63t88AAAABPSeKOQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20diagnostic",
                "name": "vrl: diagnostic",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the REPL"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-05-12T15:51:11Z",
        "updated_at": "2023-03-28T14:17:29Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Discovered by a user.\r\n\r\nVersion: `vector 0.13.0 (v0.13.0 x86_64-apple-darwin 2021-04-21)`\r\n\r\nI whittled down the reproducible case to:\r\n\r\n```toml\r\n[sources.in]\r\ntype = \"stdin\"\r\n\r\n[transforms.remap]\r\n  type = \"remap\"\r\n  inputs = [\"in\"]\r\n  source = '''\r\n  foo, foo_err = parse_regex(\"hello 123 world\", r'(?P<bar>\\d+)')\r\n  if foo_err != null {\r\n    bar, bar_err = parse_regex(\"hello 123 world\", r'(?P<bar>\\d+)')\r\n    if bar_err != null {\r\n      log(bar_err)\r\n    } else {\r\n      .line = merge(.line, bar)\r\n    }\r\n  } else {\r\n    .line = merge(.line, foo)\r\n  }\r\n  '''\r\n\r\n[sinks.out]\r\ntype = \"console\"\r\ninputs = [\"remap\"]\r\nencoding.codec = \"json\"\r\n```\r\n\r\nIf you run `vector --config` with this, it gives:\r\n\r\n```\r\nerror[E103]: unhandled fallible assignment\r\n   \u250c\u2500 :10:13\r\n   \u2502\r\n10 \u2502     .line = merge(.line, foo)\r\n   \u2502     ------- ^^^^^^^^^^^^^^^^^\r\n   \u2502     \u2502       \u2502\r\n   \u2502     \u2502       this expression is fallible\r\n   \u2502     \u2502       update the expression to be infallible\r\n   \u2502     or change this to an infallible assignment:\r\n   \u2502     .line, err = merge(.line, foo)\r\n   \u2502\r\n   = see documentation about error handling at https://errors.vrl.dev/#handling\r\n   = learn more about error code 103 at https://errors.vrl.dev/103\r\n   = see language documentation at https://vrl.dev\r\n```\r\n\r\nIf we resolve this by adding `!` to the `merge` calls we see:\r\n\r\n```\r\nerror[E620]: can't abort infallible function\r\n   \u250c\u2500 :10:13\r\n   \u2502\r\n10 \u2502     .line = merge!(.line, foo)\r\n   \u2502             ^^^^^- remove this abort-instruction\r\n   \u2502             \u2502\r\n   \u2502             this function can't fail\r\n   \u2502\r\n   = see documentation about error handling at https://errors.vrl.dev/#handling\r\n   = see language documentation at https://vrl.dev\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/113/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/113/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/115",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/115/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/115/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/115/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/115",
        "id": 1644061435,
        "node_id": "MDU6SXNzdWUxNjQ0MDYxNDM1",
        "number": 115,
        "title": "Add `parse_host` function to VRL",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-05-12T13:18:02Z",
        "updated_at": "2023-03-28T14:17:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We had a [question in Discord](https://discord.com/channels/742820443487993987/764187584452493323/841976030520672276) how to get the [TLD](https://en.wikipedia.org/wiki/Top-level_domain) of a domain name:\r\n\r\n> having strings like \"qwe.domain.tld\" and \"qwe.asd.anotherdomain.tld\" how can I receive last two items as strings? \"domain.tld\", \"anotherdomain.tld\"?\r\n\r\nThey decided on a solution like the following:\r\n\r\n```swift\r\nhostParts = split(\"qwe.asd.anotherdomain.tld\", \".\")\r\nhostParts[-2] + \".\" + hostParts[-1] // \"anotherdomain.tld\"\r\n``` \r\n\r\nThe problem with this is that not all TLDs are a single word. E.g. `co.uk` is a well-known one, but there are _many_ others that are comprised of multiple names separated by a dot.\r\n\r\nAs a language that focusses on correctness and the principle of least surprise at runtime, and given that manipulating/checking domains is a common task in the observability space we're operating in, I think we can do better here.\r\n\r\n---\r\n\r\nI propose we add a new `parse_host` function to wrap the [`tldextract` crate](https://docs.rs/tldextract/0.5.1/tldextract/) that works like this:\r\n\r\n```swift\r\nhostParts = parse_host!(\"qwe.asd.anotherdomain.tld\")\r\nhostParts // { \"domain\": \"anotherdomain\", \"subdomain\": \"qwe.asd\", \"suffix\": \"tld\" }\r\n```\r\n\r\nThe `tldextract` library has a local cache of TLDs to know what's part of the TLD and what's part of the domain. It also has an option to update this list at runtime, but I suggest we disable that, opting instead to update the crate occasionally when new TLDs need to be added to the cache.\r\n\r\nAlternatively, we could update `parse_url` to add this information, but the problem there is that this function only works with a valid URL, which _requires_ a scheme to be present (e.g. `mydomain.co.uk` would be rejected, but `https://mydomain.co.uk` works), which seems impractical for this particular use-case.\r\n\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/115/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/116",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/116/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/116/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/116/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/116",
        "id": 1644062060,
        "node_id": "MDU6SXNzdWUxNjQ0MDYyMDYw",
        "number": 116,
        "title": "fields extracted using parse_regex imply incorrect type definitions when parse_regex fails",
        "user": {
            "login": "jerome-kleinen-kbc-be",
            "id": 49525049,
            "node_id": "MDQ6VXNlcjQ5NTI1MDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/49525049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerome-kleinen-kbc-be",
            "html_url": "https://github.com/jerome-kleinen-kbc-be",
            "followers_url": "https://api.github.com/users/jerome-kleinen-kbc-be/followers",
            "following_url": "https://api.github.com/users/jerome-kleinen-kbc-be/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerome-kleinen-kbc-be/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerome-kleinen-kbc-be/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerome-kleinen-kbc-be/subscriptions",
            "organizations_url": "https://api.github.com/users/jerome-kleinen-kbc-be/orgs",
            "repos_url": "https://api.github.com/users/jerome-kleinen-kbc-be/repos",
            "events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320978739,
                "node_id": "LA_kwDOJN63t88AAAABPSexMw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20typedef",
                "name": "vrl: typedef",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the type system"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-05-11T12:55:37Z",
        "updated_at": "2023-03-28T14:17:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\r\nHi there,\r\n\r\nThank you for opening an issue. Please note that we try to keep the Vector issue tracker reserved for bug reports and feature requests. For general usage questions, please see: https://chat.vector.dev.\r\n-->\r\n\r\n### Vector Version\r\n\r\n<!---\r\nRun `vector --version` to show the version, and paste the result between the ``` marks below.\r\n\r\nIf you are not running the latest version of Vector, please try upgrading because your issue may have already been fixed.\r\n-->\r\n\r\n```\r\nvector 0.13.1 (v0.13.1 x86_64-unknown-linux-gnu 2021-04-29)\r\n```\r\n\r\n### Vector Configuration File\r\n\r\n<!--\r\nPaste the relevant parts of your `vector.toml` configuration between the ``` marks below.\r\n\r\n!! If your config files contain sensitive information please remove it !!\r\n-->\r\n\r\n```toml\r\n[sources.generator]\r\n  type = \"generator\"\r\n  format = \"syslog\"\r\n  \r\n[transforms.remap]\r\n  type = \"remap\"\r\n  inputs = [\"generator\"]\r\n  source = '''\r\n  . |= parse_regex(.message, r'^<\\d+>(?P<a>\\S+') ?? {}\r\n  .a = downcase(string(.a) ?? \"\")\r\n  '''\r\n  \r\n[sinks.console]\r\n  type = \"console\"\r\n  inputs = [\"remap\"]\r\n  encoding = \"json\"\r\n```\r\n\r\n### Debug Output\r\n\r\n```\r\nerror[E651]: unnecessary error coalescing operation\r\n  \u250c\u2500 :2:17\r\n  \u2502\r\n2 \u2502   .a = downcase(string(.a) ?? \"\")\r\n  \u2502                 ^^^^^^^^^^ -- -- this expression never resolves\r\n  \u2502                 \u2502          \u2502\r\n  \u2502                 \u2502          remove this error coalescing operation\r\n  \u2502                 this expression can't fail\r\n  \u2502\r\n  = see language documentation at https://vrl.dev\r\n\r\nerror[E110]: invalid argument type\r\n  \u250c\u2500 :2:17\r\n  \u2502\r\n2 \u2502   .a = downcase(string(.a) ?? \"\")\r\n  \u2502                 ^^^^^^^^^^^^^^^^\r\n  \u2502                 \u2502\r\n  \u2502                 this expression resolves to the exact type \"boolean\"\r\n  \u2502                 but the parameter \"value\" expects the exact type \"string\"\r\n\r\n\r\n```\r\n\r\n\r\n### Expected Behavior\r\n\r\nConfig should work as expected.\r\n\r\n### Actual Behavior\r\n\r\nConfig returns an error when using vector validate or running the config.\r\n\r\n### Example Data\r\n\r\nGenerated data.\r\n\r\n### Additional Context\r\n\r\nDiscussed this with @JeanMertz and he figured out that vector is making a wrong compile time assumption of the fields extracted using regex capture groups when parse_regex errors are suppressed using the \" ?? {} \" notation used above. A potential workaround is:\r\n\r\n```toml\r\n[sources.generator]\r\n  type = \"generator\"\r\n  format = \"syslog\"\r\n  \r\n[transforms.remap]\r\n  type = \"remap\"\r\n  inputs = [\"generator\"]\r\n  source = '''\r\n  . |= parse_regex(.message, r'^<\\d+>(?P<a>\\S+') ?? {\"a\": null}\r\n  .a = downcase(string(.a) ?? \"\")\r\n  '''\r\n  \r\n[sinks.console]\r\n  type = \"console\"\r\n  inputs = [\"remap\"]\r\n  encoding = \"json\"\r\n```\r\n\r\n### References\r\n\r\nDiscussed on Discord in the support channel on 11/05/2021 around 12:00 CET.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/116/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/117",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/117/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/117/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/117/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/117",
        "id": 1644062544,
        "node_id": "MDU6SXNzdWUxNjQ0MDYyNTQ0",
        "number": 117,
        "title": "Unable to parse timestamp of type millisecond since unix epoch",
        "user": {
            "login": "jerome-kleinen-kbc-be",
            "id": 49525049,
            "node_id": "MDQ6VXNlcjQ5NTI1MDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/49525049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerome-kleinen-kbc-be",
            "html_url": "https://github.com/jerome-kleinen-kbc-be",
            "followers_url": "https://api.github.com/users/jerome-kleinen-kbc-be/followers",
            "following_url": "https://api.github.com/users/jerome-kleinen-kbc-be/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerome-kleinen-kbc-be/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerome-kleinen-kbc-be/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerome-kleinen-kbc-be/subscriptions",
            "organizations_url": "https://api.github.com/users/jerome-kleinen-kbc-be/orgs",
            "repos_url": "https://api.github.com/users/jerome-kleinen-kbc-be/repos",
            "events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerome-kleinen-kbc-be/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5318003910,
                "node_id": "LA_kwDOJN63t88AAAABPPpMxg",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20bug",
                "name": "type: bug",
                "color": "F6707D",
                "default": false,
                "description": "A code related bug"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-05-06T11:07:48Z",
        "updated_at": "2023-03-28T14:17:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\r\nHi there,\r\n\r\nThank you for opening an issue. Please note that we try to keep the Vector issue tracker reserved for bug reports and feature requests. For general usage questions, please see: https://chat.vector.dev.\r\n-->\r\n\r\n### Vector Version\r\n\r\n<!---\r\nRun `vector --version` to show the version, and paste the result between the ``` marks below.\r\n\r\nIf you are not running the latest version of Vector, please try upgrading because your issue may have already been fixed.\r\n-->\r\n\r\n```\r\nvector 0.13.1 (v0.13.1 x86_64-unknown-linux-gnu 2021-04-29)\r\n```\r\n\r\n### Vector Configuration File\r\n\r\n```\r\n$ parse_timestamp!(\"1620291751177\", \"%s%3f\")\r\nfunction call error for \"parse_timestamp\" at (0:42): Invalid timestamp \"1620291751177\": premature end of input\r\n\r\n$ parse_timestamp!(\"1620291751.177\", \"%s%.3f\")\r\nt'2021-05-06T09:02:31.177Z'\r\n```\r\n\r\n### Debug Output\r\n\r\nN/A\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe first parse_timestamp command should have been able to parse the timestamp.\r\n\r\n### Actual Behavior\r\n\r\nIt didn't parse the timestamp.\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/117/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/118",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/118/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/118/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/118/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/118",
        "id": 1644064247,
        "node_id": "MDU6SXNzdWUxNjQ0MDY0MjQ3",
        "number": 118,
        "title": "Add a way to select only certain fields in VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2021-05-05T15:37:50Z",
        "updated_at": "2023-10-19T16:39:32Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Requested by user in discord: https://discord.com/channels/742820443487993987/764187584452493323/839503742813732884\r\n\r\nWe had an `only_fields` at one point, but it got backed out. I can't remember why though.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/118/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/118/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/119",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/119/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/119/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/119/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/119",
        "id": 1644064695,
        "node_id": "MDU6SXNzdWUxNjQ0MDY0Njk1",
        "number": 119,
        "title": "`parse_logfmt` unflattening",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-05-04T17:20:33Z",
        "updated_at": "2023-03-28T14:18:51Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "When encoding as `logfmt`, it is common to flatten structured data. For example:\r\n\r\n```json\r\n{\r\n  \"foo\": {\r\n    \"bar\": 1\r\n  }\r\n}\r\n```\r\n\r\nWould be encoded as `foo.bar=1` in logfmt.\r\n\r\nCurrently, the parser just reads the keys as-is so you end up with an object like:\r\n\r\n```json\r\n{\r\n  \"foo.bar\": 1\r\n}\r\n```\r\n\r\nI think it'd be nice to unflatten. This could be an optional behavior.\r\n\r\nNotably the PR adding `encode_logfmt` (https://github.com/timberio/vector/pull/6985) does this flattening.\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/120",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/120/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/120/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/120/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/120",
        "id": 1644065470,
        "node_id": "MDU6SXNzdWUxNjQ0MDY1NDcw",
        "number": 120,
        "title": "VRL parse function for hexstring to string",
        "user": {
            "login": "msrpub",
            "id": 53050940,
            "node_id": "MDQ6VXNlcjUzMDUwOTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/53050940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msrpub",
            "html_url": "https://github.com/msrpub",
            "followers_url": "https://api.github.com/users/msrpub/followers",
            "following_url": "https://api.github.com/users/msrpub/following{/other_user}",
            "gists_url": "https://api.github.com/users/msrpub/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msrpub/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msrpub/subscriptions",
            "organizations_url": "https://api.github.com/users/msrpub/orgs",
            "repos_url": "https://api.github.com/users/msrpub/repos",
            "events_url": "https://api.github.com/users/msrpub/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msrpub/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-26T17:35:03Z",
        "updated_at": "2023-03-28T14:19:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We have several usecases which would require decode of hexstring to string from logs.\r\nAfter text extraction with grok, there would be a need to get an hexstring to string function (parse_hexToString)\r\n\r\nExample below:\r\n74 65 73 74 20 73 74 72 69 6e 67 -> test string\r\n7465737420737472696e67 -> test string",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/121",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/121/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/121/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/121/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/121",
        "id": 1644065763,
        "node_id": "MDU6SXNzdWUxNjQ0MDY1NzYz",
        "number": 121,
        "title": "Add `parse_haproxy_log` VRL function",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-26T15:42:07Z",
        "updated_at": "2023-03-28T14:19:28Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Similar to `parse_nginx_log` this should aim to support the default log formats out-of-the-box. Later, we can extend to allow users to specify custom formats.\r\n\r\nRef: https://github.com/vjeantet/grok/blob/master/patterns/haproxy",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/121/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/121/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/122",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/122/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/122/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/122/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/122",
        "id": 1644066360,
        "node_id": "MDU6SXNzdWUxNjQ0MDY2MzYw",
        "number": 122,
        "title": "Implement a bit-test function within VRL",
        "user": {
            "login": "aphelps",
            "id": 366518,
            "node_id": "MDQ6VXNlcjM2NjUxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/366518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aphelps",
            "html_url": "https://github.com/aphelps",
            "followers_url": "https://api.github.com/users/aphelps/followers",
            "following_url": "https://api.github.com/users/aphelps/following{/other_user}",
            "gists_url": "https://api.github.com/users/aphelps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aphelps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aphelps/subscriptions",
            "organizations_url": "https://api.github.com/users/aphelps/orgs",
            "repos_url": "https://api.github.com/users/aphelps/repos",
            "events_url": "https://api.github.com/users/aphelps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aphelps/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-22T21:00:26Z",
        "updated_at": "2023-03-28T14:19:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Current Vector Version\r\n```\r\nvector 0.12.2 (v0.12.2 x86_64-unknown-linux-gnu 2021-03-30)\r\n```\r\n\r\n### Use-cases\r\n\r\nWe have logs that make use of a bit-flag field to indicate various states, for which we would like to use the `route` transform to split into multiple streams.\r\n\r\n### Attempted Solutions\r\n\r\nCurrently I believe I'd need to use the `lua` transform to test for bits in an integer field and convert those to separate named boolean values, and then use the `route` transform to test for those fields with the `exists()` function.\r\n\r\n### Proposal\r\n\r\nThis could either be done via an explicit function, ie `test_bit(value: <integer>, bit: <integer>) :: <boolean>` or use the typical bit manipulation syntax from Rust, ie `<integer> & <integer>` or `<integer> & (1 << <integer>)` depending on how fancy you want to make it.  But really the simple `test_bit()` option would be fine for my use case.\r\n\r\n### References\r\n\r\nNA",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/122/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/122/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/123",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/123/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/123/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/123/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/123",
        "id": 1644067470,
        "node_id": "MDU6SXNzdWUxNjQ0MDY3NDcw",
        "number": 123,
        "title": " Support non-quoted integer path segments",
        "user": {
            "login": "ktff",
            "id": 18242866,
            "node_id": "MDQ6VXNlcjE4MjQyODY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18242866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ktff",
            "html_url": "https://github.com/ktff",
            "followers_url": "https://api.github.com/users/ktff/followers",
            "following_url": "https://api.github.com/users/ktff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ktff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ktff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ktff/subscriptions",
            "organizations_url": "https://api.github.com/users/ktff/orgs",
            "repos_url": "https://api.github.com/users/ktff/repos",
            "events_url": "https://api.github.com/users/ktff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ktff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-20T17:06:30Z",
        "updated_at": "2023-03-28T14:20:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Enable usage of non-quoted integers in path segments. Some examples would be `.0`, `.field.12`, `.2.label` etc...\r\n\r\n\r\nvectordotdev/vector#7045 enabled usage of non-quoted path identifiers that start with a number. Originally, support for non-quoted integers as path segments was also planned but was scraped once the issues around it became clear and it's usefulness was questioned. \r\n\r\n### Issue\r\nMain issue is `_` chars in integers. Currently the parser will parse `1_000` as an integer and will erase underscores. A naive implementation would use the parsed integer as a key which would result in following `{ \"1_000\": \"a\", \"1000\": \"b\"}.1_000` to evaluate as `\"b\"`. \r\n\r\nThere are two known approaches:\r\n* Introduce more context into lexer so that it can know when it's in a path so to parse integers as identifiers.\r\n* Raise construction of integers to grammar where we have context. \r\n\r\nBoth options would introduce quite the complexity for a feature that is at best a nice to have and at worst could introduce more confusion than it would resolve.\r\n\r\n### Alternatives\r\nQuoted integers are supported, `.\"0\"` works, so in the case of not going through with this change no other change is required. \r\n\r\n\r\nFollow up on vectordotdev/vector#7045, vectordotdev/vector#6780\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/123/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/123/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/124",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/124/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/124/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/124/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/124",
        "id": 1644067841,
        "node_id": "MDU6SXNzdWUxNjQ0MDY3ODQx",
        "number": 124,
        "title": "Add `to_entries` and `from_entries` to VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-16T19:50:57Z",
        "updated_at": "2023-03-28T14:20:39Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Inspired by user in discord: https://discord.com/channels/742820443487993987/746070591097798688/832684085771370587\r\n\r\nThe user would like to transform:\r\n\r\n```json\r\n{\r\n  \"labels\": {\r\n    \"key1\": \"value1\",\r\n    \"key2\": \"value2\"\r\n  }\r\n}\r\n```\r\n\r\ninto\r\n\r\n```json\r\n{\r\n  \"labels\": [\r\n    {\r\n      \"key\": \"key1\",\r\n      \"value\": \"value1\"\r\n    },\r\n    {\r\n      \"key\": \"key2\",\r\n      \"value\": \"value2\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nI think `jq`'s `to_entries` and `from_entries` are good approaches to this.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/125",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/125/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/125/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/125/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/125",
        "id": 1644068267,
        "node_id": "MDU6SXNzdWUxNjQ0MDY4MjY3",
        "number": 125,
        "title": "Allow `'`s around values in `parse_key_value` / `parse_logfmt`",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-15T15:48:17Z",
        "updated_at": "2023-03-28T14:20:54Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Reported by user in discord: https://discord.com/channels/742820443487993987/746070591097798688/832270139293433867\r\n\r\nThey'd like to parse a line that seems to be logfmt, but with `'`s around the value instead of `\"`s:\r\n\r\n```\r\n{\"appname\":\"haproxy\",\"file\":\"/var/log/haproxy-http.log\",\"host\":\"lb1\",\"hostname\":\"lb1\",\"message\":\"client_ip=10.10.0.99 client_port=51428 frontend_transport=stats backend_name=stats backend_server=<PROMEX> time_to_recieve=0 slot_wait_time=0 tcp_establish_time=0 responce_time=0 request_active_time=0 status_code=200 bytes_read=45096 request_cookie=- responce_cookie=- termination_state_cookie=LR-- process_concurrent_connections=1 frontend_concurrent_connections=1 backend_concurrent_connections=0 server_concurrent_connections=0 retries_count=0 server_queue=0 backend_queue=0 request_headers= responce_headers= request='\"GET /metrics HTTP/1.1\"'\",\"procid\":11296,\"source_type\":\"file\",\"timestamp\":\"2021-04-15T15:02:23Z\"}\r\n```\r\n\r\nNote the `request` key's value. It seems to be double quoted, but I think it'd be reasonable to expand `parse_key_value` and `parse_logfmt` to allow this as a delimiter as well.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/125/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/125/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/126",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/126/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/126/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/126/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/126",
        "id": 1644069487,
        "node_id": "MDU6SXNzdWUxNjQ0MDY5NDg3",
        "number": 126,
        "title": "Add `format_csv` function to VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-04-14T19:35:12Z",
        "updated_at": "2023-03-28T14:21:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Prompted by https://github.com/timberio/vector/issues/7115\r\n\r\nThis would be the reverse of the `parse_csv` function.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/126/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/127",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/127/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/127/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/127/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/127",
        "id": 1644070078,
        "node_id": "MDU6SXNzdWUxNjQ0MDcwMDc4",
        "number": 127,
        "title": "Allow specification of multiple timestamp formats to parse_timestamp",
        "user": {
            "login": "rabbitstack",
            "id": 11174375,
            "node_id": "MDQ6VXNlcjExMTc0Mzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11174375?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabbitstack",
            "html_url": "https://github.com/rabbitstack",
            "followers_url": "https://api.github.com/users/rabbitstack/followers",
            "following_url": "https://api.github.com/users/rabbitstack/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabbitstack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabbitstack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabbitstack/subscriptions",
            "organizations_url": "https://api.github.com/users/rabbitstack/orgs",
            "repos_url": "https://api.github.com/users/rabbitstack/repos",
            "events_url": "https://api.github.com/users/rabbitstack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabbitstack/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2021-04-09T07:37:53Z",
        "updated_at": "2023-03-28T14:21:59Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "We're experiencing issues with timestamp parsing. Specifically, this is the offending timestamp format:\r\n`07/Apr/2021:23:09:56 +0000`.\r\n\r\n By looking at the Vector [supported](https://github.com/timberio/vector/blob/6ed683e4c44c22493bcb34d97f9e3ab6d3d04a4e/lib/shared/src/conversion.rs#L193) timestamp formats, it doesn't seem to support the above timestamp format. We were wondering whether it would be possible to add it or adjust Vector to permit expanding the timestamp format catalog from the config file?\r\n\r\n### Vector Version\r\n\r\n```\r\nvector 0.12.1 (v0.12.1 x86_64-unknown-linux-gnu 2021-03-12)\r\n```\r\n\r\n### Expected Behavior\r\n\r\n`to_timestamp` should produce a valid timestamp.\r\n\r\n### Actual Behavior\r\n\r\nApr 07 23:10:05 ip-10-10-25-9.us-west-2.compute.internal vector[3592]: Apr 07 23:10:05.664  WARN transform{component_kind=\u201ctransform\u201d component_name=remap-nginx component_type=remap}: vector::internal_events::remap: Mapping failed with event. error=\u201cremap error: function call error: No matching timestamp format found for \\\u201c07/Apr/2021:23:09:56 +0000\\\u201c\u201d rate_limit_secs=30\r\n\r\n\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/127/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/127/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/128",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/128/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/128/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/128/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/128",
        "id": 1644077910,
        "node_id": "MDU6SXNzdWUxNjQ0MDc3OTEw",
        "number": 128,
        "title": "Allow defaulting a non-existent path in VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-04-08T20:33:18Z",
        "updated_at": "2023-03-28T14:26:12Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Requested by user in discord: https://discord.com/channels/742820443487993987/746070591097798688/829788575234523156\r\n\r\nThey'd like to be able to lookup a field but set a default if it does not exist. \r\n\r\nThis is doable via:\r\n\r\n```\r\n$ bar = if exists(.foo) { .foo } else { \"not set\" }\r\n\"not set\"\r\n```\r\n\r\nBut it would be nice to add some sort of null coalescing support similar to the error coalescing we currently have using `??`.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/128/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/129",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/129/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/129/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/129/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/129",
        "id": 1644078576,
        "node_id": "MDU6SXNzdWUxNjQ0MDc4NTc2",
        "number": 129,
        "title": "Allow `else` keyword on newline in VRL",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-31T13:29:08Z",
        "updated_at": "2023-03-28T14:26:34Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Broken off from https://github.com/timberio/vector/pull/6893 and https://github.com/timberio/vector/issues/6848.\r\n\r\nThe user has a program that looks like:\r\n\r\n```\r\nif (starts_with(image, \"k8s.gcr.io/kube-apiserver\") ||\r\n    starts_with(image, \"k8s.gcr.io/kube-scheduler\")) {\"k8s-plain\"}\r\nelse {\"unknown\"}\r\n```\r\n\r\nHowever, we don't allow `else` to appear on a newline by itself without the closing `}`.\r\n\r\nWe should consider allowing this.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/129/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/129/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/130",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/130/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/130/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/130/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/130",
        "id": 1644079226,
        "node_id": "MDU6SXNzdWUxNjQ0MDc5MjI2",
        "number": 130,
        "title": "Add headers for `parse_csv`",
        "user": {
            "login": "vladimir-dd",
            "id": 52405651,
            "node_id": "MDQ6VXNlcjUyNDA1NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/52405651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vladimir-dd",
            "html_url": "https://github.com/vladimir-dd",
            "followers_url": "https://api.github.com/users/vladimir-dd/followers",
            "following_url": "https://api.github.com/users/vladimir-dd/following{/other_user}",
            "gists_url": "https://api.github.com/users/vladimir-dd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vladimir-dd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vladimir-dd/subscriptions",
            "organizations_url": "https://api.github.com/users/vladimir-dd/orgs",
            "repos_url": "https://api.github.com/users/vladimir-dd/repos",
            "events_url": "https://api.github.com/users/vladimir-dd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vladimir-dd/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-03-29T10:20:03Z",
        "updated_at": "2024-12-19T15:53:27Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "As a follow-up on vectordotdev/vector#5371 we should add an option to set headers for the `parse_csv` function, for example:\n```\nparse_csv!(\"foo,bar\", headers: [\"header1\", \"header2\"])\n// { \"header1\": \"foo\", \"header2\": \"bar\" }\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/130/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/130/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/131",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/131/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/131/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/131/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/131",
        "id": 1644081896,
        "node_id": "MDU6SXNzdWUxNjQ0MDgxODk2",
        "number": 131,
        "title": "VRL: syslog priority parsing ",
        "user": {
            "login": "rwaweber",
            "id": 5834777,
            "node_id": "MDQ6VXNlcjU4MzQ3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5834777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rwaweber",
            "html_url": "https://github.com/rwaweber",
            "followers_url": "https://api.github.com/users/rwaweber/followers",
            "following_url": "https://api.github.com/users/rwaweber/following{/other_user}",
            "gists_url": "https://api.github.com/users/rwaweber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rwaweber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rwaweber/subscriptions",
            "organizations_url": "https://api.github.com/users/rwaweber/orgs",
            "repos_url": "https://api.github.com/users/rwaweber/repos",
            "events_url": "https://api.github.com/users/rwaweber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rwaweber/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5321062149,
                "node_id": "LA_kwDOJN63t88AAAABPSj3BQ",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/meta:%20good%20first%20issue",
                "name": "meta: good first issue",
                "color": "DBE0E9",
                "default": false,
                "description": "Anything that is good for new contributors"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-03-25T21:27:18Z",
        "updated_at": "2023-04-04T14:56:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "### Current Vector Version\r\n0.12.1\r\n\r\n### Use-cases\r\n\"The Priority value is calculated by first multiplying the Facility number by 8 and then adding the numerical value of the Severity.\" \r\n~ [cite](https://tools.ietf.org/html/rfc5424#page-11) from RFC5424\r\n\r\ne.g.:\r\n```\r\nPriority = Facility * 8 + Severity \r\n\r\nFacility = Priority % 8\r\nSeverity = Priority // 8\r\n```\r\n\r\nSometimes, when dealing with non-rfc-compliant syslog variations, only parts of the RFC are followed. In those cases, its not uncommon for the syslog priority to be one of the only consistent distinguishing features of somelogs.\r\n\r\nBeing able to extract both the facility and severity code from those messages would be pretty handy, and from a cursory overview, looks like it would fit in pretty nicely as a VRL function.\r\n\r\n### Attempted Solutions\r\nNone as of yet.\r\n\r\n### Proposal\r\n\r\nAdd `to_syslog_facility_from_priority` and `to_syslog_severity_from_priority` functions to VRL for making use of Syslog Priority fields.\r\n\r\nOr just one function with three return values(Facility, Severity, Error), what do you all think?\r\n\r\nOne more question, I noticed that we use the `syslog_loose` create which has a [`decompose_pri`](https://docs.rs/syslog_loose/0.10.0/src/syslog_loose/pri.rs.html#154-162) function that pretty much takes care of what I'm talking about.\r\nWould you all have a preference for using _that_ over just implementing it in this plugin? I don't imagine it'd change how much code ends up there in either case, but I figured it's probably worth asking.\r\n\r\n### References\r\n\r\nRelated in spirit: https://github.com/timberio/vector/issues/5769",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/131/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/131/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/132",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/132/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/132/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/132/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/132",
        "id": 1644082846,
        "node_id": "MDU6SXNzdWUxNjQ0MDgyODQ2",
        "number": 132,
        "title": "Add summary of passed/skipped/failed tests to VRL test harness",
        "user": {
            "login": "bruceg",
            "id": 477552,
            "node_id": "MDQ6VXNlcjQ3NzU1Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/477552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bruceg",
            "html_url": "https://github.com/bruceg",
            "followers_url": "https://api.github.com/users/bruceg/followers",
            "following_url": "https://api.github.com/users/bruceg/following{/other_user}",
            "gists_url": "https://api.github.com/users/bruceg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bruceg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bruceg/subscriptions",
            "organizations_url": "https://api.github.com/users/bruceg/orgs",
            "repos_url": "https://api.github.com/users/bruceg/repos",
            "events_url": "https://api.github.com/users/bruceg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bruceg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320993642,
                "node_id": "LA_kwDOJN63t88AAAABPSfrag",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/domain:%20tests",
                "name": "domain: tests",
                "color": "343639",
                "default": false,
                "description": "Anything related to internal tests"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-12T16:46:20Z",
        "updated_at": "2023-03-28T14:28:51Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "When running `cargo test`, cargo will print a summary of the numbers of tests run, as well as a listing of which ones failed. The VRL test suite has grown large enough to make scrolling through the listing to see which one(s) failed tedious. This could be improved by providing a similar summary of the test run after completion.\r\n\r\nRef: https://github.com/timberio/vector/pull/6738/checks?check_run_id=2096688778",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/132/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/132/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/133",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/133/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/133/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/133/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/133",
        "id": 1644083876,
        "node_id": "MDU6SXNzdWUxNjQ0MDgzODc2",
        "number": 133,
        "title": "It is possible to create excessively huge arrays in VRL",
        "user": {
            "login": "StephenWakely",
            "id": 192679,
            "node_id": "MDQ6VXNlcjE5MjY3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/192679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StephenWakely",
            "html_url": "https://github.com/StephenWakely",
            "followers_url": "https://api.github.com/users/StephenWakely/followers",
            "following_url": "https://api.github.com/users/StephenWakely/following{/other_user}",
            "gists_url": "https://api.github.com/users/StephenWakely/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StephenWakely/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StephenWakely/subscriptions",
            "organizations_url": "https://api.github.com/users/StephenWakely/orgs",
            "repos_url": "https://api.github.com/users/StephenWakely/repos",
            "events_url": "https://api.github.com/users/StephenWakely/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StephenWakely/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320974068,
                "node_id": "LA_kwDOJN63t88AAAABPSee9A",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20compiler",
                "name": "vrl: compiler",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the compiler"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-03-03T09:46:54Z",
        "updated_at": "2023-03-28T14:29:25Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "In VRL running:\r\n\r\n```\r\n.thing[9223372036854775807] = 1\r\n```\r\n\r\nwill cause VRL to attempt to allocate a huge array. This basically locks it up and will likely crash it eventually (I didn't wait long enough to find out for sure).\r\n\r\nWe should probably put a reasonable limit in here to prevent this from occurring.\r\n\r\nThis will become much more important when we allow variables to be used as array indexers.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/134",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/134/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/134/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/134/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/134",
        "id": 1644085092,
        "node_id": "MDU6SXNzdWUxNjQ0MDg1MDky",
        "number": 134,
        "title": "Benchmark `now` and `uuidv4` vrl functions",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-02-22T15:29:20Z",
        "updated_at": "2023-03-28T14:30:06Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Broken off from vectordotdev/vector#6408 as it requires enhancements to `bench_function` to allow skipping assertions for functions that return dynamic values.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/134/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/135",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/135/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/135/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/135/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/135",
        "id": 1644086764,
        "node_id": "MDU6SXNzdWUxNjQ0MDg2NzY0",
        "number": 135,
        "title": "Benchmark `del` and `exists` vrl functions",
        "user": {
            "login": "jszwedko",
            "id": 316880,
            "node_id": "MDQ6VXNlcjMxNjg4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jszwedko",
            "html_url": "https://github.com/jszwedko",
            "followers_url": "https://api.github.com/users/jszwedko/followers",
            "following_url": "https://api.github.com/users/jszwedko/following{/other_user}",
            "gists_url": "https://api.github.com/users/jszwedko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jszwedko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jszwedko/subscriptions",
            "organizations_url": "https://api.github.com/users/jszwedko/orgs",
            "repos_url": "https://api.github.com/users/jszwedko/repos",
            "events_url": "https://api.github.com/users/jszwedko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jszwedko/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-02-22T15:27:58Z",
        "updated_at": "2023-03-28T14:30:59Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Broken off from vectordotdev/vector#6408 as it requires changes to `bench_function` to support additional argument types (in this case, a path).",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/136",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/136/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/136/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/136/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/136",
        "id": 1644088747,
        "node_id": "MDU6SXNzdWUxNjQ0MDg4NzQ3",
        "number": 136,
        "title": "New `parse_<framework>` Remap functions (niche log parsing)",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-01-21T02:59:41Z",
        "updated_at": "2023-03-28T14:32:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I wanted to open this issue to see where we land on a solution since these types of parsing problems raise a few interesting questions. Parsing framework logs, like Rails, cuts deeper into the real-world observability problems and we will need to solve this elegantly in the near future.\r\n\r\n## Examples\r\n\r\nFor example, let's use Rails. Rails production logs look like this:\r\n\r\n```\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- : Started POST \"/articles\" for 127.0.0.1 at 2018-06-27 15:48:10 +0000\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- : Processing by ArticlesController#create as HTML\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   Parameters: {\"utf8\"=>\"\u2713\", \"article\"=>{\"title\"=>\"Create New Post\", \"text\"=>\"Description for new post\"}, \"commit\"=>\"Save Article\"}\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   \u21b3 app/controllers/articles_controller.rb:20\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   [1m[36mArticle Create (1.0ms)[0m  [1m[32mINSERT INTO \"articles\" (\"title\", \"text\", \"created_at\", \"updated_at\") VALUES ($1, $2, $3, $4) RETURNING \"id\"[0m  [[\"title\", \"Create New Post\"], [\"text\", \"Description for new post\"], [\"created_at\", \"2018-06-27 15:48:11.116208\"], [\"updated_at\", \"2018-06-27 15:48:11.116208\"]]\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   \u21b3 app/controllers/articles_controller.rb:20\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- :   \u21b3 app/controllers/articles_controller.rb:20\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- : Redirected to http://localhost:3000/articles/29\r\nI, [2016-01-26T23:21:44.581108 #27447]  INFO -- : Completed 302 Found in 25ms (ActiveRecord: 4.5ms)\r\n```\r\n\r\n## Problem\r\n\r\nParsing these logs is not a fun endeavor:\r\n\r\n1. You must unwrap the log with a custom Ruby prefix to extract the level, timestamp, and pid.\r\n1. Custom Regexes will need to be written for lines that allow it.\r\n1. A custom key/value parser is needed for the Ruby stringified parameters. (`{\"utf8\"=>\"\u2713\",...`)\r\n1. ANSI stripping will be required on some lines.\r\n1. Control flow would help to match on each line in order to apply the appropriate parsing strategy. This will help with performance.\r\n1. I'm probably missing some steps.\r\n\r\n## Proposal\r\n\r\nThis is the kind of problem Vector should make easy. I realize this is a very specific version of this problem, but we should think about how we can reduce the pain here.\r\n\r\n### Proposal 1: Do nothing\r\n\r\nWe could decide to not handle these formats and tell users to:\r\n\r\n1. Structure your logs at the app level using JSON or some other format.\r\n   1. Note: Vector is sometimes used by operators that do not control the app and therefore can't update the app to structure its logs.\r\n2. Use Grok, since patterns [already exist](https://gist.github.com/paulRbr/b8b31b769fc8c4039034#file-rails).\r\n   1. Note: this is slower and these formats appear to be community managed, so their quality is questionable.\r\n3. Write custom regexes.\r\n\r\n### Proposal 2: Add a single `parse_rails` function\r\n\r\nThis function would perform format detection and return structured logs with a key that users can match on to determine the log type. One simple function call would handle it all.\r\n\r\nThis offers the best user experience but shifts a lot of tedious responsibility on us, especially since these formats can change across Rails versions.\r\n\r\n### Proposal 3: Add multiple `parse_rails_*` functions\r\n\r\n`parse_rails_request_start`, `parse_rails_controller`, `parse_rails_sql`, etc, etc.\r\n\r\nI don't like this option but wanted to list it to be comprehensive.\r\n\r\n### Proposal 4: Community managed Remap functions/formats\r\n\r\nDelegate all of this to the community and let them manage this through a number of ways:\r\n\r\n1. Community managed Remap functions.\r\n2. Community managed patterns.\r\n3. Community managed components (config macros).\r\n\r\n## Final thoughts\r\n\r\nI don't particularly like any of these solutions, but I feel like this would be best solved with some sort of community approach if we could control quality.\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/137",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/137/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/137/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/137/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/137",
        "id": 1644091610,
        "node_id": "MDU6SXNzdWUxNjQ0MDkxNjEw",
        "number": 137,
        "title": "Add function memoization",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-01-19T20:08:36Z",
        "updated_at": "2024-04-22T16:41:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "There have been several situations in which a VRL function has relatively slow runtime performance, but the operation it performs results in a value that is relatively static.\r\n\r\nsee: https://github.com/timberio/vector/pull/6141\r\n\r\nI propose we add a \u201cfunction cache\u201d to the VRL runtime.\r\n\r\nThe idea is this:\r\n\r\n- We add a new `state::FunctionCache` object.\r\n- Functions have access to their own piece of this cache, namespaces by the function identifier (to start)\r\n- They can store a `Value` type in the cache to fetch when needed.\r\n- We either implement a TTL in the cache, or a \u201cquery counter\u201d. Alternatively we leave cache invalidation up to the function.\r\n\r\nThere are still some things to work out here, but it seems a valuable property to have in the runtime.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/137/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/138",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/138/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/138/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/138/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/138",
        "id": 1644094443,
        "node_id": "MDU6SXNzdWUxNjQ0MDk0NDQz",
        "number": 138,
        "title": "Allow for slice expressions in Remap",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320975330,
                "node_id": "LA_kwDOJN63t88AAAABPSej4g",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20parser",
                "name": "vrl: parser",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax parser"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-15T20:30:03Z",
        "updated_at": "2023-03-28T14:34:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "An expression to slice values would make transforming values easier.\r\n\r\n## Examples\r\n\r\n```\r\n.message[1:10]\r\n.array[0:2]\r\n```\r\n\r\n## Requirements\r\n\r\n- [ ] Ability to slice strings\r\n- [ ] Ability to slice arrays\r\n- [ ] Allow for negative indexing",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/138/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/139",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/139/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/139/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/139/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/139",
        "id": 1644094965,
        "node_id": "MDU6SXNzdWUxNjQ0MDk0OTY1",
        "number": 139,
        "title": "New `to_hive_partition` Remap function",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-01-15T18:37:20Z",
        "updated_at": "2023-03-28T14:35:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Creating Hive partition strings is very common when writing to file-like storages (such as `aws_s3`). Unfortunately, creating these partition strings is fraught with foot-guns. To protect users from these issues we should offer a function that makes this task easy.\r\n\r\n## Examples\r\n\r\nGiven this event for all examples:\r\n\r\n```json\r\n{\r\n\t\"timestamp\": \"2021-01-14T21:26:45.433667Z\",\r\n\t\"application_id\": 2,\r\n\t\"environment\": \"production\"\r\n}\r\n```\r\n\r\n### Array\r\n\r\nAnd this Remap script:\r\n\r\n```js\r\nto_hive_partition([.environment, .application_id, .timestamp], limit: 256)\r\n```\r\n\r\nWould produce this string:\r\n\r\n```\r\nenvironment=production/application_id=2/timestamp_year=2020/timestamp_month=01/timestamp_day=14/\r\n```\r\n\r\nNotice that:\r\n\r\n1. The keys reflect the path names (curious if this is possible)\r\n2. The timestamp is opinionated: truncated by the day and split into 3 partitions\r\n\r\n### Map\r\n\r\nAnd this Remap script:\r\n\r\n```js\r\nto_hive_partition({\"env\": .environment, \"app\": .application_id, \"ts\": .timestamp}, limit: 256)\r\n```\r\n\r\nWould produce this string:\r\n\r\n```\r\nenv=production/app=2/ts_year=2020/ts_month=01/ts_day=14/\r\n```\r\n\r\nNotice that the map keys are used as the names\r\n\r\n### Single value\r\n\r\nAnd this Remap script:\r\n\r\n```js\r\nto_hive_partition(.timestamp, limit: 256)\r\n```\r\n\r\nWould produce this string:\r\n\r\n```\r\ntimestamp_year=2020/timestamp_month=01/timestamp_day=14/\r\n```\r\n\r\n## Requirements\r\n\r\n- [ ] Key/value pairs should be delimited by `/`\r\n- [ ] Keys and values should be delimited by `=`\r\n- [ ] Keys _and_ values must be URL encoded as to not conflict with the reserved characters above.\r\n- [ ] The overall partition length cannot exceed 256 characters for most use cases.\r\n- [ ] Opinionated formatted of timestamps.\r\n- [ ] Includes a trailing `/` character\r\n\r\ncc @jszwedko since he had the pleasure of creating such partition strings for the benchmarking work.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/139/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/140",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/140/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/140/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/140/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/140",
        "id": 1644095533,
        "node_id": "MDU6SXNzdWUxNjQ0MDk1NTMz",
        "number": 140,
        "title": "Support for HereDocs in Remap",
        "user": {
            "login": "binarylogic",
            "id": 1663286,
            "node_id": "MDQ6VXNlcjE2NjMyODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1663286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/binarylogic",
            "html_url": "https://github.com/binarylogic",
            "followers_url": "https://api.github.com/users/binarylogic/followers",
            "following_url": "https://api.github.com/users/binarylogic/following{/other_user}",
            "gists_url": "https://api.github.com/users/binarylogic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/binarylogic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/binarylogic/subscriptions",
            "organizations_url": "https://api.github.com/users/binarylogic/orgs",
            "repos_url": "https://api.github.com/users/binarylogic/repos",
            "events_url": "https://api.github.com/users/binarylogic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/binarylogic/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-15T18:18:55Z",
        "updated_at": "2023-03-28T14:35:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "HereDocs allow for the easy, and readable, creation of multi-line strings.\r\n\r\n## Example\r\n\r\n### Simple\r\n\r\n```\r\n\"\"\"\r\nThis is\r\na\r\nlong multi-line\r\nstring.\r\n\"\"\"\r\n```\r\n\r\nWould produce:\r\n\r\n```\r\n\"This is\\na\\nlong multi-line\\nstring.\"\r\n```\r\n\r\n### Indentation preserved\r\n\r\n```\r\n\"\"\"\r\n  This is\r\na\r\n  long multi-line\r\nstring.\r\n\"\"\"\r\n```\r\n\r\nWould produce:\r\n\r\n```\r\n\"  This is\\na\\n  long multi-line\\nstring.\"\r\n```\r\n\r\n### Leading white space ignored\r\n\r\n```\r\n.field = \"\"\"\r\n    This is\r\n  a\r\n    long multi-line\r\n  string.\r\n  \"\"\"\r\n```\r\n\r\nWould produce:\r\n\r\n```\r\n\"  This is\\na\\n  long multi-line\\nstring.\"\r\n```\r\n\r\nNotice that the leading 2 spaces were trimmed since it did not align with the closing `\"\"\"` identifier.\r\n\r\n## Requirements\r\n\r\n- [ ] The leading `\\n` should be stripped (as shown in the examples)\r\n- [ ] The trailing \\n` should be stripped (as shown in the examples)\r\n- [ ] Program indentation should be ignored (spaces before the closing `\"\"\"`)\r\n- [ ] Contained indentation should be preserved (beyond the close `\"\"\"`)\r\n- [ ] New lines are preserved",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/141",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/141/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/141/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/141/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/141",
        "id": 1644095904,
        "node_id": "MDU6SXNzdWUxNjQ0MDk1OTA0",
        "number": 141,
        "title": "rename `to_syslog_severity` to `parse_syslog_severity`",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-01-09T20:55:44Z",
        "updated_at": "2023-03-28T14:35:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "This one is incorrectly named. It behaves similar to other `parse_*` functions (take in a string, try to parse it to the relevant type, error if it can't), but is named as a `to_*` function.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/141/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/141/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/143",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/143/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/143/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/143/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/143",
        "id": 1644096546,
        "node_id": "MDU6SXNzdWUxNjQ0MDk2NTQ2",
        "number": 143,
        "title": "Add Remap function for comparing semantic versions",
        "user": {
            "login": "lucperkins",
            "id": 1523104,
            "node_id": "MDQ6VXNlcjE1MjMxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1523104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucperkins",
            "html_url": "https://github.com/lucperkins",
            "followers_url": "https://api.github.com/users/lucperkins/followers",
            "following_url": "https://api.github.com/users/lucperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/lucperkins/orgs",
            "repos_url": "https://api.github.com/users/lucperkins/repos",
            "events_url": "https://api.github.com/users/lucperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucperkins/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-15T15:59:45Z",
        "updated_at": "2023-03-28T14:36:01Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm not sure I can think of an absolute must-have use case, but we should enable users to compare versions of things, like so:\r\n\r\n```\r\nsemver::compare(v1, v2)\r\n```\r\n\r\nThis idea is inspired by [Rego](https://www.openpolicyagent.org/docs/latest/policy-language)'s [`semver.compare`](https://www.openpolicyagent.org/docs/latest/policy-reference/#semantic-versions) function, which returns three possible integers:\r\n\r\n* 1 if v1 is later than v2\r\n* 0 if the two versions are the same\r\n* -1 if v1 is earler than v2\r\n\r\nThis would allow for constructing Boolean expressions:\r\n\r\n```\r\nif (semver::compare(.version, \"1.0\") == -1) {\r\n    .deprecated = true\r\n}\r\n```\r\n\r\nI'm open to other interfaces for this, for example:\r\n\r\n```\r\nsemver::compare(v1, v2, expect = [\"gt\"]) // Boolean\r\n\r\nsemver::parse(v1) > semver::parse(v2)\r\n```",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/143/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/144",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/144/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/144/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/144/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/144",
        "id": 1644097537,
        "node_id": "MDU6SXNzdWUxNjQ0MDk3NTM3",
        "number": 144,
        "title": "allow working with durations",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-12-15T13:13:34Z",
        "updated_at": "2023-03-28T14:36:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I wonder if manipulating timestamps is common enough in events that it'd be worth introducing a _duration_ type in the language itself.\r\n\r\nFor example, one could write:\r\n\r\n```rust\r\n.dt = to_timestamp(.dt) + 10s\r\n```\r\n\r\nThe `<integer>s` part is the type that defines a duration (in this case in seconds). We'd support more than just seconds. Alternative notations are possible (including [ISO8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations)).\r\n\r\nOf course, an alternative would be to just allow adding seconds to timestamps:\r\n\r\n```rust\r\n.dt = to_timestamp(.dt) + 10 // seconds\r\n```\r\n\r\nOr having a `duration` function that takes an integer or float, and a unit of time, and converts that to seconds (or milliseconds, or whatever):\r\n\r\n```rust\r\n$hours = 10\r\n.dt = to_timestamp(.dt) + duration($hours, \"hour\")\r\n```\r\n\r\nOf course, it's worth mentioning we already have a [`parse_duration`](https://github.com/timberio/vector/blob/1d3b7c1814dc33a29126e0ecbc217d54646b04a8/src/remap/function/parse_duration.rs) function, which might be \"just enough\" to cover the basic use cases and there's very little demand for anything more advanced.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/144/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/144/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/145",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/145/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/145/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/145/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/145",
        "id": 1644098262,
        "node_id": "MDU6SXNzdWUxNjQ0MDk4MjYy",
        "number": 145,
        "title": "add (syntax-only) modules for functions",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-12-11T20:31:37Z",
        "updated_at": "2023-03-28T14:37:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Now that we're cranking out more and more functions, I'm worried it'll become more difficult to know the distinction between all of them.\r\n\r\nTake for example the newly proposed [`to_level`](https://github.com/timberio/vector/pull/5503) and [`to_severity`](https://github.com/timberio/vector/pull/5505). On their own, they make total sense, but when you put them next to `to_string`, `to_int` and the other `to_*` functions that convert to a concrete value, they can be confusing.\r\n\r\nA similar situation arises with functions such as [`parse_aws_vpc_flow`](https://github.com/timberio/vector/pull/5504) and [`parse_aws_elb`](https://github.com/timberio/vector/pull/5489).\r\n\r\nWe've already started categorizing the functions in our Cue documentation precisely because the list of functions is becoming longer still, and you need some way to more easily find what you're looking for.\r\n\r\nI propose we extend this categorization to the language itself, by introducing _function modules_.\r\n\r\nThe concept is simple:\r\n\r\n1. We define a new `Module` enum that has variants such as `Root`, `Aws`, `Syslog`, and more.\r\n2. We update our `Function` trait to include a `fn module(&self) -> Module` function.\r\n3. All function implementations are updated to define their module.\r\n4. We update the parser to read function modules and convert them to syntax\r\n5. Users now write `syslog::to_level(.foo)`, or `aws::parse_vpc_flow(.bar)` instead.\r\n6. Functions assigned the `Root` module will stay as-is, so you'd still use `to_int`, `parse_json`, and other often-used functions.\r\n\r\nI'll leave it as an exercise to others to come up with the correct module names (I think the Cue files are a good starting point, and I'm sure @lucperkins has some good ideas for this list as well), but I do believe this would only add a _small amount_ of syntactic noise to the language (especially since the most commonly used functions won't have a module prefix), while gaining a bit more structure in the ever-growing list of functions.\r\n\r\n_(note I used `<module>::<ident>` since it doesn't collide with other syntax we currently have, and it's also what I'm used to as a Rustacean (and it's not uncommon in other languages either), but we can entertain other forms of syntax for this)_\r\n\r\ncc: @binarylogic @FungusHumungus ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/145/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/145/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/146",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/146/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/146/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/146/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/146",
        "id": 1644099120,
        "node_id": "MDU6SXNzdWUxNjQ0MDk5MTIw",
        "number": 146,
        "title": "Add pipe operator support",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320972839,
                "node_id": "LA_kwDOJN63t88AAAABPSeaJw",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20syntax",
                "name": "vrl: syntax",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the syntax"
            },
            {
                "id": 5320982521,
                "node_id": "LA_kwDOJN63t88AAAABPSe_-Q",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20feature",
                "name": "type: feature",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code addition that introduce new functionality."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-12-07T11:58:03Z",
        "updated_at": "2023-03-28T14:37:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Remap revolves around expressions, most expressions are implemented as functions, which take zero or more input arguments, and provide output.\r\n\r\nFor example:\r\n\r\n```rust\r\ntrim(uppercase(to_string(.foo)))\r\n```\r\n\r\nThe above will eventually (#4905) also work in string templates in Vector itself:\r\n\r\n```handlebars\r\nmy_config_field = \"{{ trim(uppercase(to_string(.foo))) }}\"\r\n```\r\n\r\nThe above works, but can be hard to read.\r\n\r\nI wonder if we want to add support for the _pipe operator_ (similar to [Elixir](https://elixirschool.com/en/lessons/basics/pipe-operator/)).\r\n\r\n```elixir\r\n.foo |> to_string |> uppercase |> trim\r\n```\r\n\r\n```handlebars\r\nmy_config_field = \"{{ .foo |> to_string |> uppercase |> trim }}\"\r\n```\r\n\r\nThe gist of this syntax would be that given an expression, if the expression is followed by the pipe operator (`|>`), then the expression _after_ that operator would receive the result of the previous expression as its first argument.\r\n\r\nThe precedence of the pipe operator would be higher than the other operators. This allows one to write:\r\n\r\n```elixir\r\n.foo = .bar |> split |> contains(\"baz\") || .baz |> to_string |> contains(\"qux\") # bool\r\n\r\n# similar to\r\n.foo = ((.bar |> split |> (contains(\"baz\")) || (.baz |> to_string |> contains(\"qux\"))) # bool\r\n```\r\n\r\nYou can still supply more arguments if need be:\r\n\r\n```elixir\r\n\"foo bar,baz\" |> split(delimiter = \",\") |> join(delimiter = \"|\") # \"foo bar|baz\"\r\n```\r\n\r\nThis would be purely syntactic sugar to make the code easier to read, especially in string templates, but also in general.\r\n\r\n---\r\n\r\nThere are still some design decisions to make (for example, what happens if you provide a non-function expression to the rhs of the pipe operator? Compile error?), but I wanted to put this issue up to gauge interest from others.\r\n\r\nAlso, some languages that focus specifically on templating use the [`|` pipe syntax to do this](https://tera.netlify.app/docs/#filters):\r\n\r\n```elixir\r\n.foo | to_string | uppercase | trim\r\n```\r\n\r\nWe could do this, but then we'd lose the ability to implement bitwise operators in the future.\r\n\r\ncc @binarylogic @FungusHumungus",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/146/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/146/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/vectordotdev/vrl/issues/147",
        "repository_url": "https://api.github.com/repos/vectordotdev/vrl",
        "labels_url": "https://api.github.com/repos/vectordotdev/vrl/issues/147/labels{/name}",
        "comments_url": "https://api.github.com/repos/vectordotdev/vrl/issues/147/comments",
        "events_url": "https://api.github.com/repos/vectordotdev/vrl/issues/147/events",
        "html_url": "https://github.com/vectordotdev/vrl/issues/147",
        "id": 1644099866,
        "node_id": "MDU6SXNzdWUxNjQ0MDk5ODY2",
        "number": 147,
        "title": "add `credit_card` filter to `redact` function",
        "user": {
            "login": "JeanMertz",
            "id": 383250,
            "node_id": "MDQ6VXNlcjM4MzI1MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/383250?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeanMertz",
            "html_url": "https://github.com/JeanMertz",
            "followers_url": "https://api.github.com/users/JeanMertz/followers",
            "following_url": "https://api.github.com/users/JeanMertz/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeanMertz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeanMertz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeanMertz/subscriptions",
            "organizations_url": "https://api.github.com/users/JeanMertz/orgs",
            "repos_url": "https://api.github.com/users/JeanMertz/repos",
            "events_url": "https://api.github.com/users/JeanMertz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeanMertz/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5320952504,
                "node_id": "LA_kwDOJN63t88AAAABPSdKuA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/type:%20enhancement",
                "name": "type: enhancement",
                "color": "BF72F6",
                "default": false,
                "description": "A value-adding code change that enhances its existing functionality"
            },
            {
                "id": 5320976700,
                "node_id": "LA_kwDOJN63t88AAAABPSepPA",
                "url": "https://api.github.com/repos/vectordotdev/vrl/labels/vrl:%20stdlib",
                "name": "vrl: stdlib",
                "color": "C2E0C6",
                "default": false,
                "description": "Changes to the standard library"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-25T14:30:11Z",
        "updated_at": "2023-03-28T14:37:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "After vectordotdev/vector#5221 lands, we want to expand the list of filters to make it easy to filter sensitive data without having to write your own regexp (and to make sure those implementations are as performant as possible).\r\n\r\nFirst on the list is a credit card filter:\r\n\r\n```json\r\n{ \"message\": \"order paid using credit card number 5555 5555 5555 4444\" }\r\n```\r\n\r\n```rust\r\n.message = redact(.message, filters = [\"credit_card\"])\r\n```\r\n\r\n```json\r\n{ \"message\": \"order paid using credit card number ****\" }\r\n```\r\n\r\nSome relevant references:\r\n\r\n* http://www.richardsramblings.com/2012/12/the-perfect-credit-card-number-regex/\r\n* https://github.com/solvvy/redact-pii/blob/3a3f076a7a375fd629bab0e25b084cf154b1445f/src/built-ins/simple-regexp-patterns.ts\r\n* https://github.com/microsoft/presidio/blob/7935adf03c80a0ba5d53c6affb7d7c78198affaa/presidio-analyzer/presidio_analyzer/predefined_recognizers/credit_card_recognizer.py\r\n* https://github.com/luhnmod10/rust\r\n* https://github.com/valeriansaliou/rs-card-validate\r\n\r\nref vectordotdev/vector#4519",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/vectordotdev/vrl/issues/147/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/vectordotdev/vrl/issues/147/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]